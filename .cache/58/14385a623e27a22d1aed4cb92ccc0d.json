{"id":"cDWF","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1724625312988}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.VerticalBlurShader=void 0;const v=exports.VerticalBlurShader={uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:\"\\n    varying vec2 vUv;\\n\\n    void main() {\\n\\n      vUv = uv;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n    }\\n  \",fragmentShader:\"\\n\\n  uniform sampler2D tDiffuse;\\n  uniform float v;\\n\\n  varying vec2 vUv;\\n\\n  void main() {\\n\\n    vec4 sum = vec4( 0.0 );\\n\\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\\n\\n    gl_FragColor = sum;\\n\\n  }\\n  \"};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":13}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":20}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":35}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":43}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":56}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":57}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":64}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":68}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":76}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":58,"column":1},"generated":{"line":1,"column":100}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":10,"column":0},"generated":{"line":1,"column":102}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"VerticalBlurShader","original":{"line":10,"column":6},"generated":{"line":1,"column":108}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"exports","original":{"line":10,"column":24},"generated":{"line":1,"column":110}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"VerticalBlurShader","original":{"line":10,"column":24},"generated":{"line":1,"column":118}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":10,"column":27},"generated":{"line":1,"column":137}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"uniforms","original":{"line":11,"column":2},"generated":{"line":1,"column":138}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":11,"column":12},"generated":{"line":1,"column":147}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"tDiffuse","original":{"line":12,"column":4},"generated":{"line":1,"column":148}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":12,"column":14},"generated":{"line":1,"column":157}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"value","original":{"line":13,"column":6},"generated":{"line":1,"column":158}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":13,"column":13},"generated":{"line":1,"column":164}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"v","original":{"line":15,"column":4},"generated":{"line":1,"column":170}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":15,"column":7},"generated":{"line":1,"column":172}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"value","original":{"line":16,"column":6},"generated":{"line":1,"column":173}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":16,"column":13},"generated":{"line":1,"column":179}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":16,"column":19},"generated":{"line":1,"column":181}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"vertexShader","original":{"line":19,"column":2},"generated":{"line":1,"column":187}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":21,"column":2},"generated":{"line":1,"column":200}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","name":"fragmentShader","original":{"line":31,"column":2},"generated":{"line":1,"column":360}},{"source":"node_modules/three-stdlib/shaders/VerticalBlurShader.js","original":{"line":33,"column":2},"generated":{"line":1,"column":375}}],"sources":{"node_modules/three-stdlib/shaders/VerticalBlurShader.js":"/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\nconst VerticalBlurShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    v: {\n      value: 1.0 / 512.0\n    }\n  },\n  vertexShader:\n  /* glsl */\n  `\n    varying vec2 vUv;\n\n    void main() {\n\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `,\n  fragmentShader:\n  /* glsl */\n  `\n\n  uniform sampler2D tDiffuse;\n  uniform float v;\n\n  varying vec2 vUv;\n\n  void main() {\n\n    vec4 sum = vec4( 0.0 );\n\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\n\n    gl_FragColor = sum;\n\n  }\n  `\n};\n\nexport { VerticalBlurShader };\n"},"lineCount":null}},"error":null,"hash":"ff05a69b4f069511fa08b18e3e3dd359","cacheData":{"env":{}}}