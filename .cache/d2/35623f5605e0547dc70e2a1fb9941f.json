{"id":"PJ0N","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1724625312988},{"name":"three","loc":{"line":1,"column":70,"index":70},"parent":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/objects/GroundProjectedEnv.js","resolved":"/home/moh/Desktop/MYPortfolio/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.GroundProjectedEnv=void 0;var e=require(\"three\");const n=e=>e&&e.isCubeTexture;class o extends e.Mesh{constructor(o,t){var r,i;const a=n(o),c=(null!=(r=a?null===(i=o.image[0])||void 0===i?void 0:i.width:o.image.width)?r:1024)/4,s=Math.floor(Math.log2(c)),d=Math.pow(2,s),l=[a?\"#define ENVMAP_TYPE_CUBE\":\"\",`#define CUBEUV_TEXEL_WIDTH ${1/(3*Math.max(d,112))}`,`#define CUBEUV_TEXEL_HEIGHT ${1/(4*d)}`,`#define CUBEUV_MAX_MIP ${s}.0`].join(\"\\n\")+\"\\n        #define ENVMAP_TYPE_CUBE_UV\\n        varying vec3 vWorldPosition;\\n        uniform float radius;\\n        uniform float height;\\n        uniform float angle;\\n        #ifdef ENVMAP_TYPE_CUBE\\n            uniform samplerCube map;\\n        #else\\n            uniform sampler2D map;\\n        #endif\\n        // From: https://www.shadertoy.com/view/4tsBD7\\n        float diskIntersectWithBackFaceCulling( vec3 ro, vec3 rd, vec3 c, vec3 n, float r ) \\n        {\\n            float d = dot ( rd, n );\\n            \\n            if( d > 0.0 ) { return 1e6; }\\n            \\n            vec3  o = ro - c;\\n            float t = - dot( n, o ) / d;\\n            vec3  q = o + rd * t;\\n            \\n            return ( dot( q, q ) < r * r ) ? t : 1e6;\\n        }\\n        // From: https://www.iquilezles.org/www/articles/intersectors/intersectors.htm\\n        float sphereIntersect( vec3 ro, vec3 rd, vec3 ce, float ra ) \\n        {\\n            vec3 oc = ro - ce;\\n            float b = dot( oc, rd );\\n            float c = dot( oc, oc ) - ra * ra;\\n            float h = b * b - c;\\n            \\n            if( h < 0.0 ) { return -1.0; }\\n            \\n            h = sqrt( h );\\n            \\n            return - b + h;\\n        }\\n        vec3 project() \\n        {\\n            vec3 p = normalize( vWorldPosition );\\n            vec3 camPos = cameraPosition;\\n            camPos.y -= height;\\n            float intersection = sphereIntersect( camPos, p, vec3( 0.0 ), radius );\\n            if( intersection > 0.0 ) {\\n                \\n                vec3 h = vec3( 0.0, - height, 0.0 );\\n                float intersection2 = diskIntersectWithBackFaceCulling( camPos, p, h, vec3( 0.0, 1.0, 0.0 ), radius );\\n                p = ( camPos + min( intersection, intersection2 ) * p ) / radius;\\n            } else {\\n                p = vec3( 0.0, 1.0, 0.0 );\\n            }\\n            return p;\\n        }\\n        #include <common>\\n        #include <cube_uv_reflection_fragment>\\n        void main() \\n        {\\n            vec3 projectedWorldPosition = project();\\n            \\n            #ifdef ENVMAP_TYPE_CUBE\\n                vec3 outcolor = textureCube( map, projectedWorldPosition ).rgb;\\n            #else\\n                vec3 direction = normalize( projectedWorldPosition );\\n                vec2 uv = equirectUv( direction );\\n                vec3 outcolor = texture2D( map, uv ).rgb;\\n            #endif\\n            gl_FragColor = vec4( outcolor, 1.0 );\\n            #include <tonemapping_fragment>\\n            #include <encodings_fragment>\\n        }\\n        \",u={map:{value:o},height:{value:(null==t?void 0:t.height)||15},radius:{value:(null==t?void 0:t.radius)||100}};super(new e.IcosahedronGeometry(1,16),new e.ShaderMaterial({uniforms:u,fragmentShader:l,vertexShader:\"\\n        varying vec3 vWorldPosition;\\n        void main() \\n        {\\n            vec4 worldPosition = ( modelMatrix * vec4( position, 1.0 ) );\\n            vWorldPosition = worldPosition.xyz;\\n            \\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n        }\\n        \",side:e.DoubleSide}))}set radius(e){this.material.uniforms.radius.value=e}get radius(){return this.material.uniforms.radius.value}set height(e){this.material.uniforms.height.value=e}get height(){return this.material.uniforms.height.value}}exports.GroundProjectedEnv=o;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":13}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":20}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":35}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":43}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":56}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":57}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":64}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":68}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":76}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":143,"column":1},"generated":{"line":1,"column":100}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":1,"column":0},"generated":{"line":1,"column":102}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_three","original":{"line":1,"column":0},"generated":{"line":1,"column":106}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"require","original":{"line":1,"column":0},"generated":{"line":1,"column":108}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":1,"column":0},"generated":{"line":1,"column":116}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":3,"column":0},"generated":{"line":1,"column":125}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"isCubeTexture","original":{"line":3,"column":6},"generated":{"line":1,"column":131}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"def","original":{"line":3,"column":22},"generated":{"line":1,"column":133}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"def","original":{"line":3,"column":29},"generated":{"line":1,"column":136}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"def","original":{"line":3,"column":36},"generated":{"line":1,"column":139}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"isCubeTexture","original":{"line":3,"column":40},"generated":{"line":1,"column":141}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":5,"column":0},"generated":{"line":1,"column":155}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"GroundProjectedEnv","original":{"line":5,"column":6},"generated":{"line":1,"column":161}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"Mesh","original":{"line":5,"column":33},"generated":{"line":1,"column":171}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":5,"column":37},"generated":{"line":1,"column":173}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"constructor","original":{"line":6,"column":2},"generated":{"line":1,"column":178}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"texture","original":{"line":6,"column":14},"generated":{"line":1,"column":190}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"options","original":{"line":6,"column":23},"generated":{"line":1,"column":192}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":7,"column":4},"generated":{"line":1,"column":195}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_ref","original":{"line":7,"column":8},"generated":{"line":1,"column":199}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_texture$image$","original":{"line":7,"column":14},"generated":{"line":1,"column":201}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":9,"column":4},"generated":{"line":1,"column":203}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"isCubeMap","original":{"line":9,"column":10},"generated":{"line":1,"column":209}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"isCubeTexture","original":{"line":9,"column":22},"generated":{"line":1,"column":211}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"texture","original":{"line":9,"column":36},"generated":{"line":1,"column":213}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"cubeSize","original":{"line":11,"column":10},"generated":{"line":1,"column":216}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":10,"column":169},"generated":{"line":1,"column":219}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_ref","original":{"line":10,"column":15},"generated":{"line":1,"column":226}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"isCubeMap","original":{"line":10,"column":22},"generated":{"line":1,"column":228}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":10,"column":75},"generated":{"line":1,"column":230}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_texture$image$","original":{"line":10,"column":35},"generated":{"line":1,"column":238}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"texture","original":{"line":10,"column":53},"generated":{"line":1,"column":240}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"image","original":{"line":10,"column":61},"generated":{"line":1,"column":242}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":10,"column":67},"generated":{"line":1,"column":248}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":10,"column":103},"generated":{"line":1,"column":258}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_texture$image$","original":{"line":10,"column":83},"generated":{"line":1,"column":262}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":10,"column":112},"generated":{"line":1,"column":269}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_texture$image$","original":{"line":10,"column":121},"generated":{"line":1,"column":271}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"width","original":{"line":10,"column":137},"generated":{"line":1,"column":273}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"texture","original":{"line":10,"column":145},"generated":{"line":1,"column":279}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"image","original":{"line":10,"column":153},"generated":{"line":1,"column":281}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"width","original":{"line":10,"column":159},"generated":{"line":1,"column":287}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_ref","original":{"line":10,"column":176},"generated":{"line":1,"column":294}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":10,"column":183},"generated":{"line":1,"column":296}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":11,"column":25},"generated":{"line":1,"column":302}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_lodMax","original":{"line":13,"column":10},"generated":{"line":1,"column":304}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"Math","original":{"line":13,"column":20},"generated":{"line":1,"column":306}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"floor","original":{"line":13,"column":25},"generated":{"line":1,"column":311}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"Math","original":{"line":13,"column":31},"generated":{"line":1,"column":317}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"log2","original":{"line":13,"column":36},"generated":{"line":1,"column":322}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"cubeSize","original":{"line":13,"column":41},"generated":{"line":1,"column":327}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_cubeSize","original":{"line":15,"column":10},"generated":{"line":1,"column":331}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"Math","original":{"line":15,"column":22},"generated":{"line":1,"column":333}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"pow","original":{"line":15,"column":27},"generated":{"line":1,"column":338}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":15,"column":31},"generated":{"line":1,"column":342}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_lodMax","original":{"line":15,"column":34},"generated":{"line":1,"column":344}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"fragmentShader","original":{"line":32,"column":10},"generated":{"line":1,"column":347}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":19,"column":20},"generated":{"line":1,"column":349}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"isCubeMap","original":{"line":19,"column":21},"generated":{"line":1,"column":350}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":19,"column":33},"generated":{"line":1,"column":352}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":19,"column":62},"generated":{"line":1,"column":379}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":19,"column":96},"generated":{"line":1,"column":412}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":17,"column":18},"generated":{"line":1,"column":415}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"Math","original":{"line":17,"column":22},"generated":{"line":1,"column":417}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"max","original":{"line":17,"column":27},"generated":{"line":1,"column":422}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_cubeSize","original":{"line":17,"column":31},"generated":{"line":1,"column":426}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":17,"column":42},"generated":{"line":1,"column":428}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":19,"column":142},"generated":{"line":1,"column":467}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":18,"column":19},"generated":{"line":1,"column":470}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_cubeSize","original":{"line":18,"column":23},"generated":{"line":1,"column":472}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"_lodMax","original":{"line":19,"column":184},"generated":{"line":1,"column":503}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"join","original":{"line":32,"column":35},"generated":{"line":1,"column":510}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":32,"column":40},"generated":{"line":1,"column":515}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":34,"column":4},"generated":{"line":1,"column":521}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"uniforms","original":{"line":106,"column":10},"generated":{"line":1,"column":3116}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":106,"column":21},"generated":{"line":1,"column":3118}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"map","original":{"line":107,"column":6},"generated":{"line":1,"column":3119}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":107,"column":11},"generated":{"line":1,"column":3123}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"value","original":{"line":108,"column":8},"generated":{"line":1,"column":3124}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"texture","original":{"line":108,"column":15},"generated":{"line":1,"column":3130}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"height","original":{"line":110,"column":6},"generated":{"line":1,"column":3133}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":110,"column":14},"generated":{"line":1,"column":3140}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"value","original":{"line":111,"column":8},"generated":{"line":1,"column":3141}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"options","original":{"line":111,"column":16},"generated":{"line":1,"column":3148}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"options","original":{"line":111,"column":16},"generated":{"line":1,"column":3154}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":111,"column":57},"generated":{"line":1,"column":3161}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"options","original":{"line":111,"column":66},"generated":{"line":1,"column":3163}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"height","original":{"line":111,"column":74},"generated":{"line":1,"column":3165}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":111,"column":85},"generated":{"line":1,"column":3174}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"radius","original":{"line":113,"column":6},"generated":{"line":1,"column":3178}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":113,"column":14},"generated":{"line":1,"column":3185}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"value","original":{"line":114,"column":8},"generated":{"line":1,"column":3186}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"options","original":{"line":114,"column":16},"generated":{"line":1,"column":3193}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"options","original":{"line":114,"column":16},"generated":{"line":1,"column":3199}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":114,"column":57},"generated":{"line":1,"column":3206}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"options","original":{"line":114,"column":66},"generated":{"line":1,"column":3208}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"radius","original":{"line":114,"column":74},"generated":{"line":1,"column":3210}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":114,"column":85},"generated":{"line":1,"column":3219}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":124,"column":4},"generated":{"line":1,"column":3225}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":117,"column":21},"generated":{"line":1,"column":3231}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"IcosahedronGeometry","original":{"line":117,"column":25},"generated":{"line":1,"column":3235}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":117,"column":44},"generated":{"line":1,"column":3237}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":117,"column":45},"generated":{"line":1,"column":3257}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":117,"column":48},"generated":{"line":1,"column":3259}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":118,"column":21},"generated":{"line":1,"column":3263}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"ShaderMaterial","original":{"line":118,"column":25},"generated":{"line":1,"column":3267}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":118,"column":39},"generated":{"line":1,"column":3269}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":118,"column":40},"generated":{"line":1,"column":3284}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"uniforms","original":{"line":119,"column":6},"generated":{"line":1,"column":3285}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"uniforms","original":{"line":119,"column":6},"generated":{"line":1,"column":3294}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"fragmentShader","original":{"line":120,"column":6},"generated":{"line":1,"column":3296}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"fragmentShader","original":{"line":120,"column":6},"generated":{"line":1,"column":3311}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"vertexShader","original":{"line":121,"column":6},"generated":{"line":1,"column":3313}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":22,"column":4},"generated":{"line":1,"column":3326}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"side","original":{"line":122,"column":6},"generated":{"line":1,"column":3646}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"DoubleSide","original":{"line":122,"column":12},"generated":{"line":1,"column":3651}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"DoubleSide","original":{"line":122,"column":12},"generated":{"line":1,"column":3653}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":127,"column":2},"generated":{"line":1,"column":3667}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"radius","original":{"line":127,"column":13},"generated":{"line":1,"column":3678}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":128,"column":4},"generated":{"line":1,"column":3681}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"material","original":{"line":128,"column":9},"generated":{"line":1,"column":3686}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"uniforms","original":{"line":128,"column":18},"generated":{"line":1,"column":3695}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"radius","original":{"line":128,"column":27},"generated":{"line":1,"column":3704}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"value","original":{"line":128,"column":34},"generated":{"line":1,"column":3711}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"radius","original":{"line":128,"column":42},"generated":{"line":1,"column":3717}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":131,"column":2},"generated":{"line":1,"column":3719}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":132,"column":4},"generated":{"line":1,"column":3732}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":132,"column":11},"generated":{"line":1,"column":3739}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"material","original":{"line":132,"column":16},"generated":{"line":1,"column":3744}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"uniforms","original":{"line":132,"column":25},"generated":{"line":1,"column":3753}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"radius","original":{"line":132,"column":34},"generated":{"line":1,"column":3762}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"value","original":{"line":132,"column":41},"generated":{"line":1,"column":3769}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":135,"column":2},"generated":{"line":1,"column":3775}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"height","original":{"line":135,"column":13},"generated":{"line":1,"column":3786}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":136,"column":4},"generated":{"line":1,"column":3789}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"material","original":{"line":136,"column":9},"generated":{"line":1,"column":3794}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"uniforms","original":{"line":136,"column":18},"generated":{"line":1,"column":3803}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"height","original":{"line":136,"column":27},"generated":{"line":1,"column":3812}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"value","original":{"line":136,"column":34},"generated":{"line":1,"column":3819}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"height","original":{"line":136,"column":42},"generated":{"line":1,"column":3825}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":139,"column":2},"generated":{"line":1,"column":3827}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":140,"column":4},"generated":{"line":1,"column":3840}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","original":{"line":140,"column":11},"generated":{"line":1,"column":3847}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"material","original":{"line":140,"column":16},"generated":{"line":1,"column":3852}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"uniforms","original":{"line":140,"column":25},"generated":{"line":1,"column":3861}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"height","original":{"line":140,"column":34},"generated":{"line":1,"column":3870}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"value","original":{"line":140,"column":41},"generated":{"line":1,"column":3877}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"exports","original":{"line":143,"column":1},"generated":{"line":1,"column":3884}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"GroundProjectedEnv","original":{"line":143,"column":1},"generated":{"line":1,"column":3892}},{"source":"node_modules/three-stdlib/objects/GroundProjectedEnv.js","name":"GroundProjectedEnv","original":{"line":143,"column":1},"generated":{"line":1,"column":3911}}],"sources":{"node_modules/three-stdlib/objects/GroundProjectedEnv.js":"import { Mesh, IcosahedronGeometry, ShaderMaterial, DoubleSide } from 'three';\n\nconst isCubeTexture = def => def && def.isCubeTexture;\n\nclass GroundProjectedEnv extends Mesh {\n  constructor(texture, options) {\n    var _ref, _texture$image$;\n\n    const isCubeMap = isCubeTexture(texture);\n    const w = (_ref = isCubeMap ? (_texture$image$ = texture.image[0]) === null || _texture$image$ === void 0 ? void 0 : _texture$image$.width : texture.image.width) != null ? _ref : 1024;\n    const cubeSize = w / 4;\n\n    const _lodMax = Math.floor(Math.log2(cubeSize));\n\n    const _cubeSize = Math.pow(2, _lodMax);\n\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\n    const height = 4 * _cubeSize;\n    const defines = [isCubeMap ? '#define ENVMAP_TYPE_CUBE' : '', `#define CUBEUV_TEXEL_WIDTH ${1.0 / width}`, `#define CUBEUV_TEXEL_HEIGHT ${1.0 / height}`, `#define CUBEUV_MAX_MIP ${_lodMax}.0`];\n    const vertexShader =\n    /* glsl */\n    `\n        varying vec3 vWorldPosition;\n        void main() \n        {\n            vec4 worldPosition = ( modelMatrix * vec4( position, 1.0 ) );\n            vWorldPosition = worldPosition.xyz;\n            \n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }\n        `;\n    const fragmentShader = defines.join('\\n') +\n    /* glsl */\n    `\n        #define ENVMAP_TYPE_CUBE_UV\n        varying vec3 vWorldPosition;\n        uniform float radius;\n        uniform float height;\n        uniform float angle;\n        #ifdef ENVMAP_TYPE_CUBE\n            uniform samplerCube map;\n        #else\n            uniform sampler2D map;\n        #endif\n        // From: https://www.shadertoy.com/view/4tsBD7\n        float diskIntersectWithBackFaceCulling( vec3 ro, vec3 rd, vec3 c, vec3 n, float r ) \n        {\n            float d = dot ( rd, n );\n            \n            if( d > 0.0 ) { return 1e6; }\n            \n            vec3  o = ro - c;\n            float t = - dot( n, o ) / d;\n            vec3  q = o + rd * t;\n            \n            return ( dot( q, q ) < r * r ) ? t : 1e6;\n        }\n        // From: https://www.iquilezles.org/www/articles/intersectors/intersectors.htm\n        float sphereIntersect( vec3 ro, vec3 rd, vec3 ce, float ra ) \n        {\n            vec3 oc = ro - ce;\n            float b = dot( oc, rd );\n            float c = dot( oc, oc ) - ra * ra;\n            float h = b * b - c;\n            \n            if( h < 0.0 ) { return -1.0; }\n            \n            h = sqrt( h );\n            \n            return - b + h;\n        }\n        vec3 project() \n        {\n            vec3 p = normalize( vWorldPosition );\n            vec3 camPos = cameraPosition;\n            camPos.y -= height;\n            float intersection = sphereIntersect( camPos, p, vec3( 0.0 ), radius );\n            if( intersection > 0.0 ) {\n                \n                vec3 h = vec3( 0.0, - height, 0.0 );\n                float intersection2 = diskIntersectWithBackFaceCulling( camPos, p, h, vec3( 0.0, 1.0, 0.0 ), radius );\n                p = ( camPos + min( intersection, intersection2 ) * p ) / radius;\n            } else {\n                p = vec3( 0.0, 1.0, 0.0 );\n            }\n            return p;\n        }\n        #include <common>\n        #include <cube_uv_reflection_fragment>\n        void main() \n        {\n            vec3 projectedWorldPosition = project();\n            \n            #ifdef ENVMAP_TYPE_CUBE\n                vec3 outcolor = textureCube( map, projectedWorldPosition ).rgb;\n            #else\n                vec3 direction = normalize( projectedWorldPosition );\n                vec2 uv = equirectUv( direction );\n                vec3 outcolor = texture2D( map, uv ).rgb;\n            #endif\n            gl_FragColor = vec4( outcolor, 1.0 );\n            #include <tonemapping_fragment>\n            #include <encodings_fragment>\n        }\n        `;\n    const uniforms = {\n      map: {\n        value: texture\n      },\n      height: {\n        value: (options === null || options === void 0 ? void 0 : options.height) || 15\n      },\n      radius: {\n        value: (options === null || options === void 0 ? void 0 : options.radius) || 100\n      }\n    };\n    const geometry = new IcosahedronGeometry(1, 16);\n    const material = new ShaderMaterial({\n      uniforms,\n      fragmentShader,\n      vertexShader,\n      side: DoubleSide\n    });\n    super(geometry, material);\n  }\n\n  set radius(radius) {\n    this.material.uniforms.radius.value = radius;\n  }\n\n  get radius() {\n    return this.material.uniforms.radius.value;\n  }\n\n  set height(height) {\n    this.material.uniforms.height.value = height;\n  }\n\n  get height() {\n    return this.material.uniforms.height.value;\n  }\n\n}\n\nexport { GroundProjectedEnv };\n"},"lineCount":null}},"error":null,"hash":"1b557617cc1ef23019feac302d3bb483","cacheData":{"env":{}}}