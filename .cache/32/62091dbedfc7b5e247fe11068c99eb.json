{"id":"ryYv","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1724625312988}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.HalftoneShader=void 0;const t=exports.HalftoneShader={uniforms:{tDiffuse:{value:null},shape:{value:1},radius:{value:4},rotateR:{value:Math.PI/12*1},rotateG:{value:Math.PI/12*2},rotateB:{value:Math.PI/12*3},scatter:{value:0},width:{value:1},height:{value:1},blending:{value:1},blendingMode:{value:1},greyscale:{value:!1},disable:{value:!1}},vertexShader:[\"varying vec2 vUV;\",\"void main() {\",\"\\tvUV = uv;\",\"\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\",\"}\"].join(\"\\n\"),fragmentShader:[\"#define SQRT2_MINUS_ONE 0.41421356\",\"#define SQRT2_HALF_MINUS_ONE 0.20710678\",\"#define PI2 6.28318531\",\"#define SHAPE_DOT 1\",\"#define SHAPE_ELLIPSE 2\",\"#define SHAPE_LINE 3\",\"#define SHAPE_SQUARE 4\",\"#define BLENDING_LINEAR 1\",\"#define BLENDING_MULTIPLY 2\",\"#define BLENDING_ADD 3\",\"#define BLENDING_LIGHTER 4\",\"#define BLENDING_DARKER 5\",\"uniform sampler2D tDiffuse;\",\"uniform float radius;\",\"uniform float rotateR;\",\"uniform float rotateG;\",\"uniform float rotateB;\",\"uniform float scatter;\",\"uniform float width;\",\"uniform float height;\",\"uniform int shape;\",\"uniform bool disable;\",\"uniform float blending;\",\"uniform int blendingMode;\",\"varying vec2 vUV;\",\"uniform bool greyscale;\",\"const int samples = 8;\",\"float blend( float a, float b, float t ) {\",\"\\treturn a * ( 1.0 - t ) + b * t;\",\"}\",\"float hypot( float x, float y ) {\",\"\\treturn sqrt( x * x + y * y );\",\"}\",\"float rand( vec2 seed ){\",\"return fract( sin( dot( seed.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\",\"}\",\"float distanceToDotRadius( float channel, vec2 coord, vec2 normal, vec2 p, float angle, float rad_max ) {\",\"\\tfloat dist = hypot( coord.x - p.x, coord.y - p.y );\",\"\\tfloat rad = channel;\",\"\\tif ( shape == SHAPE_DOT ) {\",\"\\t\\trad = pow( abs( rad ), 1.125 ) * rad_max;\",\"\\t} else if ( shape == SHAPE_ELLIPSE ) {\",\"\\t\\trad = pow( abs( rad ), 1.125 ) * rad_max;\",\"\\t\\tif ( dist != 0.0 ) {\",\"\\t\\t\\tfloat dot_p = abs( ( p.x - coord.x ) / dist * normal.x + ( p.y - coord.y ) / dist * normal.y );\",\"\\t\\t\\tdist = ( dist * ( 1.0 - SQRT2_HALF_MINUS_ONE ) ) + dot_p * dist * SQRT2_MINUS_ONE;\",\"\\t\\t}\",\"\\t} else if ( shape == SHAPE_LINE ) {\",\"\\t\\trad = pow( abs( rad ), 1.5) * rad_max;\",\"\\t\\tfloat dot_p = ( p.x - coord.x ) * normal.x + ( p.y - coord.y ) * normal.y;\",\"\\t\\tdist = hypot( normal.x * dot_p, normal.y * dot_p );\",\"\\t} else if ( shape == SHAPE_SQUARE ) {\",\"\\t\\tfloat theta = atan( p.y - coord.y, p.x - coord.x ) - angle;\",\"\\t\\tfloat sin_t = abs( sin( theta ) );\",\"\\t\\tfloat cos_t = abs( cos( theta ) );\",\"\\t\\trad = pow( abs( rad ), 1.4 );\",\"\\t\\trad = rad_max * ( rad + ( ( sin_t > cos_t ) ? rad - sin_t * rad : rad - cos_t * rad ) );\",\"\\t}\",\"\\treturn rad - dist;\",\"}\",\"struct Cell {\",\"\\tvec2 normal;\",\"\\tvec2 p1;\",\"\\tvec2 p2;\",\"\\tvec2 p3;\",\"\\tvec2 p4;\",\"\\tfloat samp2;\",\"\\tfloat samp1;\",\"\\tfloat samp3;\",\"\\tfloat samp4;\",\"};\",\"vec4 getSample( vec2 point ) {\",\"\\tvec4 tex = texture2D( tDiffuse, vec2( point.x / width, point.y / height ) );\",\"\\tfloat base = rand( vec2( floor( point.x ), floor( point.y ) ) ) * PI2;\",\"\\tfloat step = PI2 / float( samples );\",\"\\tfloat dist = radius * 0.66;\",\"\\tfor ( int i = 0; i < samples; ++i ) {\",\"\\t\\tfloat r = base + step * float( i );\",\"\\t\\tvec2 coord = point + vec2( cos( r ) * dist, sin( r ) * dist );\",\"\\t\\ttex += texture2D( tDiffuse, vec2( coord.x / width, coord.y / height ) );\",\"\\t}\",\"\\ttex /= float( samples ) + 1.0;\",\"\\treturn tex;\",\"}\",\"float getDotColour( Cell c, vec2 p, int channel, float angle, float aa ) {\",\"\\tfloat dist_c_1, dist_c_2, dist_c_3, dist_c_4, res;\",\"\\tif ( channel == 0 ) {\",\"\\t\\tc.samp1 = getSample( c.p1 ).r;\",\"\\t\\tc.samp2 = getSample( c.p2 ).r;\",\"\\t\\tc.samp3 = getSample( c.p3 ).r;\",\"\\t\\tc.samp4 = getSample( c.p4 ).r;\",\"\\t} else if (channel == 1) {\",\"\\t\\tc.samp1 = getSample( c.p1 ).g;\",\"\\t\\tc.samp2 = getSample( c.p2 ).g;\",\"\\t\\tc.samp3 = getSample( c.p3 ).g;\",\"\\t\\tc.samp4 = getSample( c.p4 ).g;\",\"\\t} else {\",\"\\t\\tc.samp1 = getSample( c.p1 ).b;\",\"\\t\\tc.samp3 = getSample( c.p3 ).b;\",\"\\t\\tc.samp2 = getSample( c.p2 ).b;\",\"\\t\\tc.samp4 = getSample( c.p4 ).b;\",\"\\t}\",\"\\tdist_c_1 = distanceToDotRadius( c.samp1, c.p1, c.normal, p, angle, radius );\",\"\\tdist_c_2 = distanceToDotRadius( c.samp2, c.p2, c.normal, p, angle, radius );\",\"\\tdist_c_3 = distanceToDotRadius( c.samp3, c.p3, c.normal, p, angle, radius );\",\"\\tdist_c_4 = distanceToDotRadius( c.samp4, c.p4, c.normal, p, angle, radius );\",\"\\tres = ( dist_c_1 > 0.0 ) ? clamp( dist_c_1 / aa, 0.0, 1.0 ) : 0.0;\",\"\\tres += ( dist_c_2 > 0.0 ) ? clamp( dist_c_2 / aa, 0.0, 1.0 ) : 0.0;\",\"\\tres += ( dist_c_3 > 0.0 ) ? clamp( dist_c_3 / aa, 0.0, 1.0 ) : 0.0;\",\"\\tres += ( dist_c_4 > 0.0 ) ? clamp( dist_c_4 / aa, 0.0, 1.0 ) : 0.0;\",\"\\tres = clamp( res, 0.0, 1.0 );\",\"\\treturn res;\",\"}\",\"Cell getReferenceCell( vec2 p, vec2 origin, float grid_angle, float step ) {\",\"\\tCell c;\",\"\\tvec2 n = vec2( cos( grid_angle ), sin( grid_angle ) );\",\"\\tfloat threshold = step * 0.5;\",\"\\tfloat dot_normal = n.x * ( p.x - origin.x ) + n.y * ( p.y - origin.y );\",\"\\tfloat dot_line = -n.y * ( p.x - origin.x ) + n.x * ( p.y - origin.y );\",\"\\tvec2 offset = vec2( n.x * dot_normal, n.y * dot_normal );\",\"\\tfloat offset_normal = mod( hypot( offset.x, offset.y ), step );\",\"\\tfloat normal_dir = ( dot_normal < 0.0 ) ? 1.0 : -1.0;\",\"\\tfloat normal_scale = ( ( offset_normal < threshold ) ? -offset_normal : step - offset_normal ) * normal_dir;\",\"\\tfloat offset_line = mod( hypot( ( p.x - offset.x ) - origin.x, ( p.y - offset.y ) - origin.y ), step );\",\"\\tfloat line_dir = ( dot_line < 0.0 ) ? 1.0 : -1.0;\",\"\\tfloat line_scale = ( ( offset_line < threshold ) ? -offset_line : step - offset_line ) * line_dir;\",\"\\tc.normal = n;\",\"\\tc.p1.x = p.x - n.x * normal_scale + n.y * line_scale;\",\"\\tc.p1.y = p.y - n.y * normal_scale - n.x * line_scale;\",\"\\tif ( scatter != 0.0 ) {\",\"\\t\\tfloat off_mag = scatter * threshold * 0.5;\",\"\\t\\tfloat off_angle = rand( vec2( floor( c.p1.x ), floor( c.p1.y ) ) ) * PI2;\",\"\\t\\tc.p1.x += cos( off_angle ) * off_mag;\",\"\\t\\tc.p1.y += sin( off_angle ) * off_mag;\",\"\\t}\",\"\\tfloat normal_step = normal_dir * ( ( offset_normal < threshold ) ? step : -step );\",\"\\tfloat line_step = line_dir * ( ( offset_line < threshold ) ? step : -step );\",\"\\tc.p2.x = c.p1.x - n.x * normal_step;\",\"\\tc.p2.y = c.p1.y - n.y * normal_step;\",\"\\tc.p3.x = c.p1.x + n.y * line_step;\",\"\\tc.p3.y = c.p1.y - n.x * line_step;\",\"\\tc.p4.x = c.p1.x - n.x * normal_step + n.y * line_step;\",\"\\tc.p4.y = c.p1.y - n.y * normal_step - n.x * line_step;\",\"\\treturn c;\",\"}\",\"float blendColour( float a, float b, float t ) {\",\"\\tif ( blendingMode == BLENDING_LINEAR ) {\",\"\\t\\treturn blend( a, b, 1.0 - t );\",\"\\t} else if ( blendingMode == BLENDING_ADD ) {\",\"\\t\\treturn blend( a, min( 1.0, a + b ), t );\",\"\\t} else if ( blendingMode == BLENDING_MULTIPLY ) {\",\"\\t\\treturn blend( a, max( 0.0, a * b ), t );\",\"\\t} else if ( blendingMode == BLENDING_LIGHTER ) {\",\"\\t\\treturn blend( a, max( a, b ), t );\",\"\\t} else if ( blendingMode == BLENDING_DARKER ) {\",\"\\t\\treturn blend( a, min( a, b ), t );\",\"\\t} else {\",\"\\t\\treturn blend( a, b, 1.0 - t );\",\"\\t}\",\"}\",\"void main() {\",\"\\tif ( ! disable ) {\",\"\\t\\tvec2 p = vec2( vUV.x * width, vUV.y * height );\",\"\\t\\tvec2 origin = vec2( 0, 0 );\",\"\\t\\tfloat aa = ( radius < 2.5 ) ? radius * 0.5 : 1.25;\",\"\\t\\tCell cell_r = getReferenceCell( p, origin, rotateR, radius );\",\"\\t\\tCell cell_g = getReferenceCell( p, origin, rotateG, radius );\",\"\\t\\tCell cell_b = getReferenceCell( p, origin, rotateB, radius );\",\"\\t\\tfloat r = getDotColour( cell_r, p, 0, rotateR, aa );\",\"\\t\\tfloat g = getDotColour( cell_g, p, 1, rotateG, aa );\",\"\\t\\tfloat b = getDotColour( cell_b, p, 2, rotateB, aa );\",\"\\t\\tvec4 colour = texture2D( tDiffuse, vUV );\",\"\\t\\tr = blendColour( r, colour.r, blending );\",\"\\t\\tg = blendColour( g, colour.g, blending );\",\"\\t\\tb = blendColour( b, colour.b, blending );\",\"\\t\\tif ( greyscale ) {\",\"\\t\\t\\tr = g = b = (r + b + g) / 3.0;\",\"\\t\\t}\",\"\\t\\tgl_FragColor = vec4( r, g, b, 1.0 );\",\"\\t} else {\",\"\\t\\tgl_FragColor = texture2D( tDiffuse, vUV );\",\"\\t}\",\"}\"].join(\"\\n\")};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":13}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":20}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":35}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":43}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":56}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":57}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":64}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":68}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":76}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":67,"column":1},"generated":{"line":1,"column":96}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":7,"column":0},"generated":{"line":1,"column":98}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"HalftoneShader","original":{"line":7,"column":6},"generated":{"line":1,"column":104}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"exports","original":{"line":7,"column":20},"generated":{"line":1,"column":106}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"HalftoneShader","original":{"line":7,"column":20},"generated":{"line":1,"column":114}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":7,"column":23},"generated":{"line":1,"column":129}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"uniforms","original":{"line":8,"column":2},"generated":{"line":1,"column":130}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":8,"column":12},"generated":{"line":1,"column":139}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"tDiffuse","original":{"line":9,"column":4},"generated":{"line":1,"column":140}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":9,"column":14},"generated":{"line":1,"column":149}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":10,"column":6},"generated":{"line":1,"column":150}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":10,"column":13},"generated":{"line":1,"column":156}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"shape","original":{"line":12,"column":4},"generated":{"line":1,"column":162}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":12,"column":11},"generated":{"line":1,"column":168}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":13,"column":6},"generated":{"line":1,"column":169}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":13,"column":13},"generated":{"line":1,"column":175}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"radius","original":{"line":15,"column":4},"generated":{"line":1,"column":178}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":15,"column":12},"generated":{"line":1,"column":185}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":16,"column":6},"generated":{"line":1,"column":186}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":16,"column":13},"generated":{"line":1,"column":192}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"rotateR","original":{"line":18,"column":4},"generated":{"line":1,"column":195}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":18,"column":13},"generated":{"line":1,"column":203}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":19,"column":6},"generated":{"line":1,"column":204}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"Math","original":{"line":19,"column":13},"generated":{"line":1,"column":210}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"PI","original":{"line":19,"column":18},"generated":{"line":1,"column":215}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":19,"column":23},"generated":{"line":1,"column":218}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":19,"column":28},"generated":{"line":1,"column":221}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"rotateG","original":{"line":21,"column":4},"generated":{"line":1,"column":224}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":21,"column":13},"generated":{"line":1,"column":232}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":22,"column":6},"generated":{"line":1,"column":233}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"Math","original":{"line":22,"column":13},"generated":{"line":1,"column":239}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"PI","original":{"line":22,"column":18},"generated":{"line":1,"column":244}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":22,"column":23},"generated":{"line":1,"column":247}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":22,"column":28},"generated":{"line":1,"column":250}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"rotateB","original":{"line":24,"column":4},"generated":{"line":1,"column":253}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":24,"column":13},"generated":{"line":1,"column":261}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":25,"column":6},"generated":{"line":1,"column":262}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"Math","original":{"line":25,"column":13},"generated":{"line":1,"column":268}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"PI","original":{"line":25,"column":18},"generated":{"line":1,"column":273}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":25,"column":23},"generated":{"line":1,"column":276}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":25,"column":28},"generated":{"line":1,"column":279}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"scatter","original":{"line":27,"column":4},"generated":{"line":1,"column":282}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":27,"column":13},"generated":{"line":1,"column":290}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":28,"column":6},"generated":{"line":1,"column":291}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":28,"column":13},"generated":{"line":1,"column":297}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"width","original":{"line":30,"column":4},"generated":{"line":1,"column":300}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":30,"column":11},"generated":{"line":1,"column":306}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":31,"column":6},"generated":{"line":1,"column":307}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":31,"column":13},"generated":{"line":1,"column":313}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"height","original":{"line":33,"column":4},"generated":{"line":1,"column":316}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":33,"column":12},"generated":{"line":1,"column":323}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":34,"column":6},"generated":{"line":1,"column":324}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":34,"column":13},"generated":{"line":1,"column":330}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"blending","original":{"line":36,"column":4},"generated":{"line":1,"column":333}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":36,"column":14},"generated":{"line":1,"column":342}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":37,"column":6},"generated":{"line":1,"column":343}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":37,"column":13},"generated":{"line":1,"column":349}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"blendingMode","original":{"line":39,"column":4},"generated":{"line":1,"column":352}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":39,"column":18},"generated":{"line":1,"column":365}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":40,"column":6},"generated":{"line":1,"column":366}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":40,"column":13},"generated":{"line":1,"column":372}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"greyscale","original":{"line":42,"column":4},"generated":{"line":1,"column":375}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":42,"column":15},"generated":{"line":1,"column":385}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":43,"column":6},"generated":{"line":1,"column":386}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":43,"column":13},"generated":{"line":1,"column":393}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"disable","original":{"line":45,"column":4},"generated":{"line":1,"column":396}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":45,"column":13},"generated":{"line":1,"column":404}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"value","original":{"line":46,"column":6},"generated":{"line":1,"column":405}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":46,"column":13},"generated":{"line":1,"column":412}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"vertexShader","original":{"line":49,"column":2},"generated":{"line":1,"column":416}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":49,"column":16},"generated":{"line":1,"column":429}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":49,"column":17},"generated":{"line":1,"column":430}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":49,"column":38},"generated":{"line":1,"column":450}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":49,"column":55},"generated":{"line":1,"column":466}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":49,"column":69},"generated":{"line":1,"column":480}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":49,"column":145},"generated":{"line":1,"column":556}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"join","original":{"line":49,"column":150},"generated":{"line":1,"column":561}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":49,"column":155},"generated":{"line":1,"column":566}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"fragmentShader","original":{"line":50,"column":2},"generated":{"line":1,"column":572}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":18},"generated":{"line":1,"column":587}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":19},"generated":{"line":1,"column":588}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":57},"generated":{"line":1,"column":625}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":100},"generated":{"line":1,"column":667}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":126},"generated":{"line":1,"column":692}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":149},"generated":{"line":1,"column":714}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":176},"generated":{"line":1,"column":740}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":200},"generated":{"line":1,"column":763}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":226},"generated":{"line":1,"column":788}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":255},"generated":{"line":1,"column":816}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":286},"generated":{"line":1,"column":846}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":312},"generated":{"line":1,"column":871}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":342},"generated":{"line":1,"column":900}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":371},"generated":{"line":1,"column":928}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":402},"generated":{"line":1,"column":958}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":427},"generated":{"line":1,"column":982}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":453},"generated":{"line":1,"column":1007}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":479},"generated":{"line":1,"column":1032}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":505},"generated":{"line":1,"column":1057}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":531},"generated":{"line":1,"column":1082}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":555},"generated":{"line":1,"column":1105}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":580},"generated":{"line":1,"column":1129}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":602},"generated":{"line":1,"column":1150}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":627},"generated":{"line":1,"column":1174}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":654},"generated":{"line":1,"column":1200}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":683},"generated":{"line":1,"column":1228}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":704},"generated":{"line":1,"column":1248}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":731},"generated":{"line":1,"column":1274}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":50,"column":757},"generated":{"line":1,"column":1299}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":51,"column":2},"generated":{"line":1,"column":1344}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":51,"column":38},"generated":{"line":1,"column":1380}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":51,"column":43},"generated":{"line":1,"column":1384}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":52,"column":2},"generated":{"line":1,"column":1420}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":52,"column":36},"generated":{"line":1,"column":1454}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":52,"column":41},"generated":{"line":1,"column":1458}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":53,"column":2},"generated":{"line":1,"column":1485}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":53,"column":82},"generated":{"line":1,"column":1564}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":53,"column":87},"generated":{"line":1,"column":1568}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":2},"generated":{"line":1,"column":1676}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":58},"generated":{"line":1,"column":1732}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":83},"generated":{"line":1,"column":1757}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":115},"generated":{"line":1,"column":1789}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":162},"generated":{"line":1,"column":1837}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":205},"generated":{"line":1,"column":1880}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":252},"generated":{"line":1,"column":1928}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":278},"generated":{"line":1,"column":1955}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":380},"generated":{"line":1,"column":2059}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":469},"generated":{"line":1,"column":2150}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":476},"generated":{"line":1,"column":2158}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":516},"generated":{"line":1,"column":2198}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":560},"generated":{"line":1,"column":2243}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":640},"generated":{"line":1,"column":2324}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":697},"generated":{"line":1,"column":2382}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":739},"generated":{"line":1,"column":2424}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":804},"generated":{"line":1,"column":2490}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":844},"generated":{"line":1,"column":2531}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":884},"generated":{"line":1,"column":2572}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":919},"generated":{"line":1,"column":2608}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":1013},"generated":{"line":1,"column":2703}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":1019},"generated":{"line":1,"column":2709}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":1042},"generated":{"line":1,"column":2732}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":54,"column":1047},"generated":{"line":1,"column":2736}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":2},"generated":{"line":1,"column":2752}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":19},"generated":{"line":1,"column":2769}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":32},"generated":{"line":1,"column":2782}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":45},"generated":{"line":1,"column":2795}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":58},"generated":{"line":1,"column":2808}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":71},"generated":{"line":1,"column":2821}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":88},"generated":{"line":1,"column":2838}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":105},"generated":{"line":1,"column":2855}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":122},"generated":{"line":1,"column":2872}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":139},"generated":{"line":1,"column":2889}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":55,"column":145},"generated":{"line":1,"column":2894}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":2},"generated":{"line":1,"column":2927}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":83},"generated":{"line":1,"column":3008}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":158},"generated":{"line":1,"column":3083}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":199},"generated":{"line":1,"column":3124}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":231},"generated":{"line":1,"column":3156}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":273},"generated":{"line":1,"column":3198}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":314},"generated":{"line":1,"column":3240}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":382},"generated":{"line":1,"column":3309}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":460},"generated":{"line":1,"column":3388}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":466},"generated":{"line":1,"column":3394}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":501},"generated":{"line":1,"column":3429}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":517},"generated":{"line":1,"column":3445}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":56,"column":522},"generated":{"line":1,"column":3449}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":2},"generated":{"line":1,"column":3526}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":57},"generated":{"line":1,"column":3581}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":83},"generated":{"line":1,"column":3607}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":119},"generated":{"line":1,"column":3644}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":155},"generated":{"line":1,"column":3681}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":191},"generated":{"line":1,"column":3718}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":227},"generated":{"line":1,"column":3755}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":258},"generated":{"line":1,"column":3786}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":294},"generated":{"line":1,"column":3823}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":330},"generated":{"line":1,"column":3860}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":366},"generated":{"line":1,"column":3897}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":402},"generated":{"line":1,"column":3934}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":415},"generated":{"line":1,"column":3947}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":451},"generated":{"line":1,"column":3984}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":487},"generated":{"line":1,"column":4021}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":523},"generated":{"line":1,"column":4058}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":559},"generated":{"line":1,"column":4095}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":565},"generated":{"line":1,"column":4101}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":646},"generated":{"line":1,"column":4182}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":727},"generated":{"line":1,"column":4263}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":808},"generated":{"line":1,"column":4344}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":889},"generated":{"line":1,"column":4425}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":960},"generated":{"line":1,"column":4496}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":1032},"generated":{"line":1,"column":4568}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":1104},"generated":{"line":1,"column":4640}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":1176},"generated":{"line":1,"column":4712}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":1210},"generated":{"line":1,"column":4746}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":1226},"generated":{"line":1,"column":4762}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":57,"column":1231},"generated":{"line":1,"column":4766}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":58,"column":2},"generated":{"line":1,"column":4845}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":2},"generated":{"line":1,"column":4857}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":61},"generated":{"line":1,"column":4916}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":95},"generated":{"line":1,"column":4950}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":171},"generated":{"line":1,"column":5026}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":246},"generated":{"line":1,"column":5101}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":308},"generated":{"line":1,"column":5163}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":376},"generated":{"line":1,"column":5231}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":434},"generated":{"line":1,"column":5289}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":547},"generated":{"line":1,"column":5402}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":655},"generated":{"line":1,"column":5510}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":59,"column":709},"generated":{"line":1,"column":5564}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":60,"column":2},"generated":{"line":1,"column":5667}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":60,"column":20},"generated":{"line":1,"column":5685}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":60,"column":78},"generated":{"line":1,"column":5743}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":61,"column":2},"generated":{"line":1,"column":5801}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":61,"column":30},"generated":{"line":1,"column":5829}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":61,"column":78},"generated":{"line":1,"column":5878}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":61,"column":157},"generated":{"line":1,"column":5958}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":61,"column":200},"generated":{"line":1,"column":6002}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":61,"column":243},"generated":{"line":1,"column":6046}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":2},"generated":{"line":1,"column":6052}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":89},"generated":{"line":1,"column":6139}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":170},"generated":{"line":1,"column":6220}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":211},"generated":{"line":1,"column":6261}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":252},"generated":{"line":1,"column":6302}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":291},"generated":{"line":1,"column":6341}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":330},"generated":{"line":1,"column":6380}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":389},"generated":{"line":1,"column":6439}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":448},"generated":{"line":1,"column":6498}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":462},"generated":{"line":1,"column":6512}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":62,"column":467},"generated":{"line":1,"column":6516}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":2},"generated":{"line":1,"column":6567}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":47},"generated":{"line":1,"column":6612}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":83},"generated":{"line":1,"column":6649}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":132},"generated":{"line":1,"column":6698}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":178},"generated":{"line":1,"column":6745}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":232},"generated":{"line":1,"column":6799}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":278},"generated":{"line":1,"column":6846}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":331},"generated":{"line":1,"column":6899}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":371},"generated":{"line":1,"column":6940}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":423},"generated":{"line":1,"column":6992}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":463},"generated":{"line":1,"column":7033}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":476},"generated":{"line":1,"column":7046}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":512},"generated":{"line":1,"column":7083}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":518},"generated":{"line":1,"column":7089}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":523},"generated":{"line":1,"column":7093}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":63,"column":540},"generated":{"line":1,"column":7109}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":64,"column":2},"generated":{"line":1,"column":7132}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":64,"column":55},"generated":{"line":1,"column":7186}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":64,"column":88},"generated":{"line":1,"column":7220}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":65,"column":2},"generated":{"line":1,"column":7277}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":65,"column":69},"generated":{"line":1,"column":7345}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":65,"column":136},"generated":{"line":1,"column":7413}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":65,"column":203},"generated":{"line":1,"column":7481}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":65,"column":261},"generated":{"line":1,"column":7540}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":65,"column":319},"generated":{"line":1,"column":7599}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":2},"generated":{"line":1,"column":7658}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":49},"generated":{"line":1,"column":7706}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":96},"generated":{"line":1,"column":7754}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":143},"generated":{"line":1,"column":7802}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":190},"generated":{"line":1,"column":7850}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":214},"generated":{"line":1,"column":7875}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":251},"generated":{"line":1,"column":7914}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":258},"generated":{"line":1,"column":7922}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":300},"generated":{"line":1,"column":7965}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":313},"generated":{"line":1,"column":7978}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":361},"generated":{"line":1,"column":8027}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":367},"generated":{"line":1,"column":8033}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","name":"join","original":{"line":66,"column":372},"generated":{"line":1,"column":8038}},{"source":"node_modules/three-stdlib/shaders/HalftoneShader.js","original":{"line":66,"column":377},"generated":{"line":1,"column":8043}}],"sources":{"node_modules/three-stdlib/shaders/HalftoneShader.js":"/**\n * RGB Halftone shader for three.js.\n *\tNOTE:\n * \t\tShape (1 = Dot, 2 = Ellipse, 3 = Line, 4 = Square)\n *\t\tBlending Mode (1 = Linear, 2 = Multiply, 3 = Add, 4 = Lighter, 5 = Darker)\n */\nconst HalftoneShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    shape: {\n      value: 1\n    },\n    radius: {\n      value: 4\n    },\n    rotateR: {\n      value: Math.PI / 12 * 1\n    },\n    rotateG: {\n      value: Math.PI / 12 * 2\n    },\n    rotateB: {\n      value: Math.PI / 12 * 3\n    },\n    scatter: {\n      value: 0\n    },\n    width: {\n      value: 1\n    },\n    height: {\n      value: 1\n    },\n    blending: {\n      value: 1\n    },\n    blendingMode: {\n      value: 1\n    },\n    greyscale: {\n      value: false\n    },\n    disable: {\n      value: false\n    }\n  },\n  vertexShader: ['varying vec2 vUV;', 'void main() {', '\tvUV = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);', '}'].join('\\n'),\n  fragmentShader: ['#define SQRT2_MINUS_ONE 0.41421356', '#define SQRT2_HALF_MINUS_ONE 0.20710678', '#define PI2 6.28318531', '#define SHAPE_DOT 1', '#define SHAPE_ELLIPSE 2', '#define SHAPE_LINE 3', '#define SHAPE_SQUARE 4', '#define BLENDING_LINEAR 1', '#define BLENDING_MULTIPLY 2', '#define BLENDING_ADD 3', '#define BLENDING_LIGHTER 4', '#define BLENDING_DARKER 5', 'uniform sampler2D tDiffuse;', 'uniform float radius;', 'uniform float rotateR;', 'uniform float rotateG;', 'uniform float rotateB;', 'uniform float scatter;', 'uniform float width;', 'uniform float height;', 'uniform int shape;', 'uniform bool disable;', 'uniform float blending;', 'uniform int blendingMode;', 'varying vec2 vUV;', 'uniform bool greyscale;', 'const int samples = 8;', 'float blend( float a, float b, float t ) {', // linear blend\n  '\treturn a * ( 1.0 - t ) + b * t;', '}', 'float hypot( float x, float y ) {', // vector magnitude\n  '\treturn sqrt( x * x + y * y );', '}', 'float rand( vec2 seed ){', // get pseudo-random number\n  'return fract( sin( dot( seed.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );', '}', 'float distanceToDotRadius( float channel, vec2 coord, vec2 normal, vec2 p, float angle, float rad_max ) {', // apply shape-specific transforms\n  '\tfloat dist = hypot( coord.x - p.x, coord.y - p.y );', '\tfloat rad = channel;', '\tif ( shape == SHAPE_DOT ) {', '\t\trad = pow( abs( rad ), 1.125 ) * rad_max;', '\t} else if ( shape == SHAPE_ELLIPSE ) {', '\t\trad = pow( abs( rad ), 1.125 ) * rad_max;', '\t\tif ( dist != 0.0 ) {', '\t\t\tfloat dot_p = abs( ( p.x - coord.x ) / dist * normal.x + ( p.y - coord.y ) / dist * normal.y );', '\t\t\tdist = ( dist * ( 1.0 - SQRT2_HALF_MINUS_ONE ) ) + dot_p * dist * SQRT2_MINUS_ONE;', '\t\t}', '\t} else if ( shape == SHAPE_LINE ) {', '\t\trad = pow( abs( rad ), 1.5) * rad_max;', '\t\tfloat dot_p = ( p.x - coord.x ) * normal.x + ( p.y - coord.y ) * normal.y;', '\t\tdist = hypot( normal.x * dot_p, normal.y * dot_p );', '\t} else if ( shape == SHAPE_SQUARE ) {', '\t\tfloat theta = atan( p.y - coord.y, p.x - coord.x ) - angle;', '\t\tfloat sin_t = abs( sin( theta ) );', '\t\tfloat cos_t = abs( cos( theta ) );', '\t\trad = pow( abs( rad ), 1.4 );', '\t\trad = rad_max * ( rad + ( ( sin_t > cos_t ) ? rad - sin_t * rad : rad - cos_t * rad ) );', '\t}', '\treturn rad - dist;', '}', 'struct Cell {', // grid sample positions\n  '\tvec2 normal;', '\tvec2 p1;', '\tvec2 p2;', '\tvec2 p3;', '\tvec2 p4;', '\tfloat samp2;', '\tfloat samp1;', '\tfloat samp3;', '\tfloat samp4;', '};', 'vec4 getSample( vec2 point ) {', // multi-sampled point\n  '\tvec4 tex = texture2D( tDiffuse, vec2( point.x / width, point.y / height ) );', '\tfloat base = rand( vec2( floor( point.x ), floor( point.y ) ) ) * PI2;', '\tfloat step = PI2 / float( samples );', '\tfloat dist = radius * 0.66;', '\tfor ( int i = 0; i < samples; ++i ) {', '\t\tfloat r = base + step * float( i );', '\t\tvec2 coord = point + vec2( cos( r ) * dist, sin( r ) * dist );', '\t\ttex += texture2D( tDiffuse, vec2( coord.x / width, coord.y / height ) );', '\t}', '\ttex /= float( samples ) + 1.0;', '\treturn tex;', '}', 'float getDotColour( Cell c, vec2 p, int channel, float angle, float aa ) {', // get colour for given point\n  '\tfloat dist_c_1, dist_c_2, dist_c_3, dist_c_4, res;', '\tif ( channel == 0 ) {', '\t\tc.samp1 = getSample( c.p1 ).r;', '\t\tc.samp2 = getSample( c.p2 ).r;', '\t\tc.samp3 = getSample( c.p3 ).r;', '\t\tc.samp4 = getSample( c.p4 ).r;', '\t} else if (channel == 1) {', '\t\tc.samp1 = getSample( c.p1 ).g;', '\t\tc.samp2 = getSample( c.p2 ).g;', '\t\tc.samp3 = getSample( c.p3 ).g;', '\t\tc.samp4 = getSample( c.p4 ).g;', '\t} else {', '\t\tc.samp1 = getSample( c.p1 ).b;', '\t\tc.samp3 = getSample( c.p3 ).b;', '\t\tc.samp2 = getSample( c.p2 ).b;', '\t\tc.samp4 = getSample( c.p4 ).b;', '\t}', '\tdist_c_1 = distanceToDotRadius( c.samp1, c.p1, c.normal, p, angle, radius );', '\tdist_c_2 = distanceToDotRadius( c.samp2, c.p2, c.normal, p, angle, radius );', '\tdist_c_3 = distanceToDotRadius( c.samp3, c.p3, c.normal, p, angle, radius );', '\tdist_c_4 = distanceToDotRadius( c.samp4, c.p4, c.normal, p, angle, radius );', '\tres = ( dist_c_1 > 0.0 ) ? clamp( dist_c_1 / aa, 0.0, 1.0 ) : 0.0;', '\tres += ( dist_c_2 > 0.0 ) ? clamp( dist_c_2 / aa, 0.0, 1.0 ) : 0.0;', '\tres += ( dist_c_3 > 0.0 ) ? clamp( dist_c_3 / aa, 0.0, 1.0 ) : 0.0;', '\tres += ( dist_c_4 > 0.0 ) ? clamp( dist_c_4 / aa, 0.0, 1.0 ) : 0.0;', '\tres = clamp( res, 0.0, 1.0 );', '\treturn res;', '}', 'Cell getReferenceCell( vec2 p, vec2 origin, float grid_angle, float step ) {', // get containing cell\n  '\tCell c;', // calc grid\n  '\tvec2 n = vec2( cos( grid_angle ), sin( grid_angle ) );', '\tfloat threshold = step * 0.5;', '\tfloat dot_normal = n.x * ( p.x - origin.x ) + n.y * ( p.y - origin.y );', '\tfloat dot_line = -n.y * ( p.x - origin.x ) + n.x * ( p.y - origin.y );', '\tvec2 offset = vec2( n.x * dot_normal, n.y * dot_normal );', '\tfloat offset_normal = mod( hypot( offset.x, offset.y ), step );', '\tfloat normal_dir = ( dot_normal < 0.0 ) ? 1.0 : -1.0;', '\tfloat normal_scale = ( ( offset_normal < threshold ) ? -offset_normal : step - offset_normal ) * normal_dir;', '\tfloat offset_line = mod( hypot( ( p.x - offset.x ) - origin.x, ( p.y - offset.y ) - origin.y ), step );', '\tfloat line_dir = ( dot_line < 0.0 ) ? 1.0 : -1.0;', '\tfloat line_scale = ( ( offset_line < threshold ) ? -offset_line : step - offset_line ) * line_dir;', // get closest corner\n  '\tc.normal = n;', '\tc.p1.x = p.x - n.x * normal_scale + n.y * line_scale;', '\tc.p1.y = p.y - n.y * normal_scale - n.x * line_scale;', // scatter\n  '\tif ( scatter != 0.0 ) {', '\t\tfloat off_mag = scatter * threshold * 0.5;', '\t\tfloat off_angle = rand( vec2( floor( c.p1.x ), floor( c.p1.y ) ) ) * PI2;', '\t\tc.p1.x += cos( off_angle ) * off_mag;', '\t\tc.p1.y += sin( off_angle ) * off_mag;', '\t}', // find corners\n  '\tfloat normal_step = normal_dir * ( ( offset_normal < threshold ) ? step : -step );', '\tfloat line_step = line_dir * ( ( offset_line < threshold ) ? step : -step );', '\tc.p2.x = c.p1.x - n.x * normal_step;', '\tc.p2.y = c.p1.y - n.y * normal_step;', '\tc.p3.x = c.p1.x + n.y * line_step;', '\tc.p3.y = c.p1.y - n.x * line_step;', '\tc.p4.x = c.p1.x - n.x * normal_step + n.y * line_step;', '\tc.p4.y = c.p1.y - n.y * normal_step - n.x * line_step;', '\treturn c;', '}', 'float blendColour( float a, float b, float t ) {', // blend colours\n  '\tif ( blendingMode == BLENDING_LINEAR ) {', '\t\treturn blend( a, b, 1.0 - t );', '\t} else if ( blendingMode == BLENDING_ADD ) {', '\t\treturn blend( a, min( 1.0, a + b ), t );', '\t} else if ( blendingMode == BLENDING_MULTIPLY ) {', '\t\treturn blend( a, max( 0.0, a * b ), t );', '\t} else if ( blendingMode == BLENDING_LIGHTER ) {', '\t\treturn blend( a, max( a, b ), t );', '\t} else if ( blendingMode == BLENDING_DARKER ) {', '\t\treturn blend( a, min( a, b ), t );', '\t} else {', '\t\treturn blend( a, b, 1.0 - t );', '\t}', '}', 'void main() {', '\tif ( ! disable ) {', // setup\n  '\t\tvec2 p = vec2( vUV.x * width, vUV.y * height );', '\t\tvec2 origin = vec2( 0, 0 );', '\t\tfloat aa = ( radius < 2.5 ) ? radius * 0.5 : 1.25;', // get channel samples\n  '\t\tCell cell_r = getReferenceCell( p, origin, rotateR, radius );', '\t\tCell cell_g = getReferenceCell( p, origin, rotateG, radius );', '\t\tCell cell_b = getReferenceCell( p, origin, rotateB, radius );', '\t\tfloat r = getDotColour( cell_r, p, 0, rotateR, aa );', '\t\tfloat g = getDotColour( cell_g, p, 1, rotateG, aa );', '\t\tfloat b = getDotColour( cell_b, p, 2, rotateB, aa );', // blend with original\n  '\t\tvec4 colour = texture2D( tDiffuse, vUV );', '\t\tr = blendColour( r, colour.r, blending );', '\t\tg = blendColour( g, colour.g, blending );', '\t\tb = blendColour( b, colour.b, blending );', '\t\tif ( greyscale ) {', '\t\t\tr = g = b = (r + b + g) / 3.0;', '\t\t}', '\t\tgl_FragColor = vec4( r, g, b, 1.0 );', '\t} else {', '\t\tgl_FragColor = texture2D( tDiffuse, vUV );', '\t}', '}'].join('\\n')\n};\n\nexport { HalftoneShader };\n"},"lineCount":null}},"error":null,"hash":"652627104e3bead44f20a50c1ff8caec","cacheData":{"env":{}}}