{"id":"EQZF","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/node_modules/chevrotain/lib/src/scan/lexer_errors_public.js.map","includedInParent":true,"mtime":1724625322573},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/chevrotain/src/scan/lexer_errors_public.ts","includedInParent":true,"mtime":1724625322573},{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/chevrotain/package.json","includedInParent":true,"mtime":1724625322573}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.defaultLexerErrorProvider=void 0,exports.defaultLexerErrorProvider={buildUnableToPopLexerModeMessage:function(e){return\"Unable to pop Lexer Mode after encountering Token ->\".concat(e.image,\"<- The Mode Stack is empty\")},buildUnexpectedCharactersMessage:function(e,r,t,o,a){return\"unexpected character: ->\".concat(e.charAt(r),\"<- at offset: \").concat(r,\",\")+\" skipped \".concat(t,\" characters.\")}};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":1,"column":109}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":1,"column":117}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":3,"column":69},"generated":{"line":1,"column":143}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":1,"column":144}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":1,"column":177}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":4,"column":35},"generated":{"line":1,"column":186}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":1,"column":189}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":5,"column":11},"generated":{"line":1,"column":195}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":5,"column":11},"generated":{"line":1,"column":250}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":5,"column":66},"generated":{"line":1,"column":257}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":5,"column":72},"generated":{"line":1,"column":259}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":5,"column":77},"generated":{"line":1,"column":265}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":1,"column":296}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":1,"column":329}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":1,"column":338}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":1,"column":340}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":1,"column":342}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":1,"column":344}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":1,"column":346}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":1,"column":349}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":1,"column":355}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":1,"column":382}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":16,"column":33},"generated":{"line":1,"column":389}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":16,"column":42},"generated":{"line":1,"column":391}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":1,"column":398}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":18,"column":7},"generated":{"line":1,"column":401}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":18,"column":7},"generated":{"line":1,"column":419}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":18,"column":24},"generated":{"line":1,"column":426}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":18,"column":35},"generated":{"line":1,"column":428}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":18,"column":41},"generated":{"line":1,"column":433}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":18,"column":41},"generated":{"line":1,"column":445}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":18,"column":53},"generated":{"line":1,"column":452}},{"source":"../../../src/scan/lexer_errors_public.ts","name":null,"original":{"line":18,"column":59},"generated":{"line":1,"column":454}}],"sources":{"../../../src/scan/lexer_errors_public.ts":"import { ILexerErrorMessageProvider, IToken } from \"@chevrotain/types\"\n\nexport const defaultLexerErrorProvider: ILexerErrorMessageProvider = {\n  buildUnableToPopLexerModeMessage(token: IToken): string {\n    return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`\n  },\n\n  buildUnexpectedCharactersMessage(\n    fullText: string,\n    startOffset: number,\n    length: number,\n    line?: number,\n    column?: number\n  ): string {\n    return (\n      `unexpected character: ->${fullText.charAt(\n        startOffset\n      )}<- at offset: ${startOffset},` + ` skipped ${length} characters.`\n    )\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"57b4d0ccf0554ce4ab75597bbc45b4b7","cacheData":{"env":{}}}