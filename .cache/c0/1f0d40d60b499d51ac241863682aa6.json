{"id":"apTm","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1724625312988},{"name":"three","loc":{"line":1,"column":31,"index":31},"parent":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/shaders/GodRaysShader.js","resolved":"/home/moh/Desktop/MYPortfolio/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.GodRaysGenerateShader=exports.GodRaysFakeSunShader=exports.GodRaysDepthMaskShader=exports.GodRaysCombineShader=void 0;var e=require(\"three\");const t=exports.GodRaysDepthMaskShader={uniforms:{tInput:{value:null}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\" vUv = uv;\",\" gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"varying vec2 vUv;\",\"uniform sampler2D tInput;\",\"void main() {\",\"\\tgl_FragColor = vec4( 1.0 ) - texture2D( tInput, vUv );\",\"}\"].join(\"\\n\")},o=exports.GodRaysGenerateShader={uniforms:{tInput:{value:null},fStepSize:{value:1},vSunPositionScreenSpace:{value:new e.Vector3}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\" vUv = uv;\",\" gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"#define TAPS_PER_PASS 6.0\",\"varying vec2 vUv;\",\"uniform sampler2D tInput;\",\"uniform vec3 vSunPositionScreenSpace;\",\"uniform float fStepSize;\",\"void main() {\",\"\\tvec2 delta = vSunPositionScreenSpace.xy - vUv;\",\"\\tfloat dist = length( delta );\",\"\\tvec2 stepv = fStepSize * delta / dist;\",\"\\tfloat iters = dist/fStepSize;\",\"\\tvec2 uv = vUv.xy;\",\"\\tfloat col = 0.0;\",\"\\tfloat f = min( 1.0, max( vSunPositionScreenSpace.z / 1000.0, 0.0 ) );\",\"\\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\",\"\\tuv += stepv;\",\"\\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\",\"\\tuv += stepv;\",\"\\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\",\"\\tuv += stepv;\",\"\\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\",\"\\tuv += stepv;\",\"\\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\",\"\\tuv += stepv;\",\"\\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;\",\"\\tuv += stepv;\",\"\\tgl_FragColor = vec4( col/TAPS_PER_PASS );\",\"\\tgl_FragColor.a = 1.0;\",\"}\"].join(\"\\n\")},r=exports.GodRaysCombineShader={uniforms:{tColors:{value:null},tGodRays:{value:null},fGodRayIntensity:{value:.69}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"\\tvUv = uv;\",\"\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"varying vec2 vUv;\",\"uniform sampler2D tColors;\",\"uniform sampler2D tGodRays;\",\"uniform float fGodRayIntensity;\",\"void main() {\",\"\\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\",\"\\tgl_FragColor.a = 1.0;\",\"}\"].join(\"\\n\")},v=exports.GodRaysFakeSunShader={uniforms:{vSunPositionScreenSpace:{value:new e.Vector3},fAspect:{value:1},sunColor:{value:new e.Color(16772608)},bgColor:{value:new e.Color(0)}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"\\tvUv = uv;\",\"\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"varying vec2 vUv;\",\"uniform vec3 vSunPositionScreenSpace;\",\"uniform float fAspect;\",\"uniform vec3 sunColor;\",\"uniform vec3 bgColor;\",\"void main() {\",\"\\tvec2 diff = vUv - vSunPositionScreenSpace.xy;\",\"\\tdiff.x *= fAspect;\",\"\\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\",\"\\tprop = 0.35 * pow( 1.0 - prop, 3.0 );\",\"\\tgl_FragColor.xyz = ( vSunPositionScreenSpace.z > 0.0 ) ? mix( sunColor, bgColor, 1.0 - prop ) : bgColor;\",\"\\tgl_FragColor.w = 1.0;\",\"}\"].join(\"\\n\")};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":13}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":20}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":35}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":43}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":56}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":57}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":64}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":68}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":76}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":98}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":106}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":127}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":135}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":158}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":166}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":135,"column":1},"generated":{"line":1,"column":192}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":194}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"_three","original":{"line":1,"column":0},"generated":{"line":1,"column":198}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"require","original":{"line":1,"column":0},"generated":{"line":1,"column":200}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":208}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":21,"column":0},"generated":{"line":1,"column":217}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"GodRaysDepthMaskShader","original":{"line":21,"column":6},"generated":{"line":1,"column":223}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"exports","original":{"line":21,"column":28},"generated":{"line":1,"column":225}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"GodRaysDepthMaskShader","original":{"line":21,"column":28},"generated":{"line":1,"column":233}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":21,"column":31},"generated":{"line":1,"column":256}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"uniforms","original":{"line":22,"column":2},"generated":{"line":1,"column":257}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":22,"column":12},"generated":{"line":1,"column":266}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"tInput","original":{"line":23,"column":4},"generated":{"line":1,"column":267}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":23,"column":12},"generated":{"line":1,"column":274}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":24,"column":6},"generated":{"line":1,"column":275}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":24,"column":13},"generated":{"line":1,"column":281}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"vertexShader","original":{"line":27,"column":2},"generated":{"line":1,"column":288}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":27,"column":16},"generated":{"line":1,"column":301}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":27,"column":17},"generated":{"line":1,"column":302}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":27,"column":38},"generated":{"line":1,"column":322}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":27,"column":55},"generated":{"line":1,"column":338}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":27,"column":69},"generated":{"line":1,"column":351}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":27,"column":147},"generated":{"line":1,"column":428}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"join","original":{"line":27,"column":152},"generated":{"line":1,"column":433}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":27,"column":157},"generated":{"line":1,"column":438}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"fragmentShader","original":{"line":28,"column":2},"generated":{"line":1,"column":444}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":28,"column":18},"generated":{"line":1,"column":459}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":28,"column":19},"generated":{"line":1,"column":460}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":28,"column":40},"generated":{"line":1,"column":480}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":28,"column":69},"generated":{"line":1,"column":508}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":28,"column":86},"generated":{"line":1,"column":524}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":28,"column":145},"generated":{"line":1,"column":583}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"join","original":{"line":28,"column":150},"generated":{"line":1,"column":588}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":28,"column":155},"generated":{"line":1,"column":593}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"GodRaysGenerateShader","original":{"line":45,"column":6},"generated":{"line":1,"column":600}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"exports","original":{"line":45,"column":27},"generated":{"line":1,"column":602}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"GodRaysGenerateShader","original":{"line":45,"column":27},"generated":{"line":1,"column":610}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":45,"column":30},"generated":{"line":1,"column":632}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"uniforms","original":{"line":46,"column":2},"generated":{"line":1,"column":633}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":46,"column":12},"generated":{"line":1,"column":642}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"tInput","original":{"line":47,"column":4},"generated":{"line":1,"column":643}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":47,"column":12},"generated":{"line":1,"column":650}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":48,"column":6},"generated":{"line":1,"column":651}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":48,"column":13},"generated":{"line":1,"column":657}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"fStepSize","original":{"line":50,"column":4},"generated":{"line":1,"column":663}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":50,"column":15},"generated":{"line":1,"column":673}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":51,"column":6},"generated":{"line":1,"column":674}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":51,"column":13},"generated":{"line":1,"column":680}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"vSunPositionScreenSpace","original":{"line":53,"column":4},"generated":{"line":1,"column":683}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":53,"column":29},"generated":{"line":1,"column":707}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":54,"column":6},"generated":{"line":1,"column":708}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":54,"column":13},"generated":{"line":1,"column":714}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"Vector3","original":{"line":54,"column":17},"generated":{"line":1,"column":718}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":54,"column":24},"generated":{"line":1,"column":720}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"vertexShader","original":{"line":57,"column":2},"generated":{"line":1,"column":730}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":57,"column":16},"generated":{"line":1,"column":743}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":57,"column":17},"generated":{"line":1,"column":744}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":57,"column":38},"generated":{"line":1,"column":764}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":57,"column":55},"generated":{"line":1,"column":780}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":57,"column":69},"generated":{"line":1,"column":793}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":57,"column":147},"generated":{"line":1,"column":870}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"join","original":{"line":57,"column":152},"generated":{"line":1,"column":875}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":57,"column":157},"generated":{"line":1,"column":880}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"fragmentShader","original":{"line":58,"column":2},"generated":{"line":1,"column":886}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":58,"column":18},"generated":{"line":1,"column":901}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":58,"column":19},"generated":{"line":1,"column":902}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":58,"column":48},"generated":{"line":1,"column":930}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":58,"column":69},"generated":{"line":1,"column":950}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":58,"column":98},"generated":{"line":1,"column":978}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":58,"column":139},"generated":{"line":1,"column":1018}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":59,"column":2},"generated":{"line":1,"column":1045}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":60,"column":2},"generated":{"line":1,"column":1061}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":60,"column":53},"generated":{"line":1,"column":1112}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":61,"column":2},"generated":{"line":1,"column":1146}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":62,"column":2},"generated":{"line":1,"column":1189}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":62,"column":36},"generated":{"line":1,"column":1223}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":62,"column":58},"generated":{"line":1,"column":1245}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":80,"column":2},"generated":{"line":1,"column":1266}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":2},"generated":{"line":1,"column":1340}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":78},"generated":{"line":1,"column":1416}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":95},"generated":{"line":1,"column":1433}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":171},"generated":{"line":1,"column":1509}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":188},"generated":{"line":1,"column":1526}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":264},"generated":{"line":1,"column":1602}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":281},"generated":{"line":1,"column":1619}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":357},"generated":{"line":1,"column":1695}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":374},"generated":{"line":1,"column":1712}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":450},"generated":{"line":1,"column":1788}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":467},"generated":{"line":1,"column":1805}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":81,"column":543},"generated":{"line":1,"column":1881}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":87,"column":2},"generated":{"line":1,"column":1898}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":87,"column":48},"generated":{"line":1,"column":1944}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":87,"column":74},"generated":{"line":1,"column":1970}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"join","original":{"line":87,"column":79},"generated":{"line":1,"column":1975}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":87,"column":84},"generated":{"line":1,"column":1980}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"GodRaysCombineShader","original":{"line":94,"column":6},"generated":{"line":1,"column":1987}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"exports","original":{"line":94,"column":26},"generated":{"line":1,"column":1989}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"GodRaysCombineShader","original":{"line":94,"column":26},"generated":{"line":1,"column":1997}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":94,"column":29},"generated":{"line":1,"column":2018}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"uniforms","original":{"line":95,"column":2},"generated":{"line":1,"column":2019}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":95,"column":12},"generated":{"line":1,"column":2028}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"tColors","original":{"line":96,"column":4},"generated":{"line":1,"column":2029}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":96,"column":13},"generated":{"line":1,"column":2037}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":97,"column":6},"generated":{"line":1,"column":2038}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":97,"column":13},"generated":{"line":1,"column":2044}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"tGodRays","original":{"line":99,"column":4},"generated":{"line":1,"column":2050}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":99,"column":14},"generated":{"line":1,"column":2059}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":100,"column":6},"generated":{"line":1,"column":2060}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":100,"column":13},"generated":{"line":1,"column":2066}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"fGodRayIntensity","original":{"line":102,"column":4},"generated":{"line":1,"column":2072}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":102,"column":22},"generated":{"line":1,"column":2089}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":103,"column":6},"generated":{"line":1,"column":2090}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":103,"column":13},"generated":{"line":1,"column":2096}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"vertexShader","original":{"line":106,"column":2},"generated":{"line":1,"column":2102}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":106,"column":16},"generated":{"line":1,"column":2115}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":106,"column":17},"generated":{"line":1,"column":2116}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":106,"column":38},"generated":{"line":1,"column":2136}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":106,"column":55},"generated":{"line":1,"column":2152}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":106,"column":69},"generated":{"line":1,"column":2166}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":106,"column":147},"generated":{"line":1,"column":2244}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"join","original":{"line":106,"column":152},"generated":{"line":1,"column":2249}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":106,"column":157},"generated":{"line":1,"column":2254}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"fragmentShader","original":{"line":107,"column":2},"generated":{"line":1,"column":2260}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":107,"column":18},"generated":{"line":1,"column":2275}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":107,"column":19},"generated":{"line":1,"column":2276}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":107,"column":40},"generated":{"line":1,"column":2296}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":107,"column":70},"generated":{"line":1,"column":2325}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":107,"column":101},"generated":{"line":1,"column":2355}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":107,"column":136},"generated":{"line":1,"column":2389}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":110,"column":2},"generated":{"line":1,"column":2405}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":110,"column":112},"generated":{"line":1,"column":2515}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":110,"column":138},"generated":{"line":1,"column":2541}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"join","original":{"line":110,"column":143},"generated":{"line":1,"column":2546}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":110,"column":148},"generated":{"line":1,"column":2551}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"GodRaysFakeSunShader","original":{"line":117,"column":6},"generated":{"line":1,"column":2558}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"exports","original":{"line":117,"column":26},"generated":{"line":1,"column":2560}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"GodRaysFakeSunShader","original":{"line":117,"column":26},"generated":{"line":1,"column":2568}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":117,"column":29},"generated":{"line":1,"column":2589}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"uniforms","original":{"line":118,"column":2},"generated":{"line":1,"column":2590}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":118,"column":12},"generated":{"line":1,"column":2599}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"vSunPositionScreenSpace","original":{"line":119,"column":4},"generated":{"line":1,"column":2600}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":119,"column":29},"generated":{"line":1,"column":2624}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":120,"column":6},"generated":{"line":1,"column":2625}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":120,"column":13},"generated":{"line":1,"column":2631}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"Vector3","original":{"line":120,"column":17},"generated":{"line":1,"column":2635}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":120,"column":24},"generated":{"line":1,"column":2637}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"fAspect","original":{"line":122,"column":4},"generated":{"line":1,"column":2646}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":122,"column":13},"generated":{"line":1,"column":2654}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":123,"column":6},"generated":{"line":1,"column":2655}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":123,"column":13},"generated":{"line":1,"column":2661}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"sunColor","original":{"line":125,"column":4},"generated":{"line":1,"column":2664}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":125,"column":14},"generated":{"line":1,"column":2673}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":126,"column":6},"generated":{"line":1,"column":2674}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":126,"column":13},"generated":{"line":1,"column":2680}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"Color","original":{"line":126,"column":17},"generated":{"line":1,"column":2684}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":126,"column":22},"generated":{"line":1,"column":2686}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":126,"column":23},"generated":{"line":1,"column":2692}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"bgColor","original":{"line":128,"column":4},"generated":{"line":1,"column":2703}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":128,"column":13},"generated":{"line":1,"column":2711}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"value","original":{"line":129,"column":6},"generated":{"line":1,"column":2712}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":129,"column":13},"generated":{"line":1,"column":2718}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"Color","original":{"line":129,"column":17},"generated":{"line":1,"column":2722}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":129,"column":22},"generated":{"line":1,"column":2724}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":129,"column":23},"generated":{"line":1,"column":2730}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"vertexShader","original":{"line":132,"column":2},"generated":{"line":1,"column":2735}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":132,"column":16},"generated":{"line":1,"column":2748}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":132,"column":17},"generated":{"line":1,"column":2749}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":132,"column":38},"generated":{"line":1,"column":2769}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":132,"column":55},"generated":{"line":1,"column":2785}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":132,"column":69},"generated":{"line":1,"column":2799}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":132,"column":147},"generated":{"line":1,"column":2877}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"join","original":{"line":132,"column":152},"generated":{"line":1,"column":2882}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":132,"column":157},"generated":{"line":1,"column":2887}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"fragmentShader","original":{"line":133,"column":2},"generated":{"line":1,"column":2893}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":133,"column":18},"generated":{"line":1,"column":2908}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":133,"column":19},"generated":{"line":1,"column":2909}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":133,"column":40},"generated":{"line":1,"column":2929}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":133,"column":81},"generated":{"line":1,"column":2969}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":133,"column":107},"generated":{"line":1,"column":2994}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":133,"column":133},"generated":{"line":1,"column":3019}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":133,"column":158},"generated":{"line":1,"column":3043}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":133,"column":175},"generated":{"line":1,"column":3059}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":134,"column":2},"generated":{"line":1,"column":3109}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":134,"column":25},"generated":{"line":1,"column":3132}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":134,"column":83},"generated":{"line":1,"column":3190}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":134,"column":125},"generated":{"line":1,"column":3232}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":134,"column":234},"generated":{"line":1,"column":3341}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":134,"column":260},"generated":{"line":1,"column":3367}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","name":"join","original":{"line":134,"column":265},"generated":{"line":1,"column":3372}},{"source":"node_modules/three-stdlib/shaders/GodRaysShader.js","original":{"line":134,"column":270},"generated":{"line":1,"column":3377}}],"sources":{"node_modules/three-stdlib/shaders/GodRaysShader.js":"import { Vector3, Color } from 'three';\n\n/**\n * God-rays (crepuscular rays)\n *\n * Similar implementation to the one used by Crytek for CryEngine 2 [Sousa2008].\n * Blurs a mask generated from the depth map along radial lines emanating from the light\n * source. The blur repeatedly applies a blur filter of increasing support but constant\n * sample count to produce a blur filter with large support.\n *\n * My implementation performs 3 passes, similar to the implementation from Sousa. I found\n * just 6 samples per pass produced acceptible results. The blur is applied three times,\n * with decreasing filter support. The result is equivalent to a single pass with\n * 6*6*6 = 216 samples.\n *\n * References:\n *\n * Sousa2008 - Crysis Next Gen Effects, GDC2008, http://www.crytek.com/sites/default/files/GDC08_SousaT_CrysisEffects.ppt\n */\n\nconst GodRaysDepthMaskShader = {\n  uniforms: {\n    tInput: {\n      value: null\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', ' vUv = uv;', ' gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['varying vec2 vUv;', 'uniform sampler2D tInput;', 'void main() {', '\tgl_FragColor = vec4( 1.0 ) - texture2D( tInput, vUv );', '}'].join('\\n')\n};\n/**\n * The god-ray generation shader.\n *\n * First pass:\n *\n * The depth map is blurred along radial lines towards the \"sun\". The\n * output is written to a temporary render target (I used a 1/4 sized\n * target).\n *\n * Pass two & three:\n *\n * The results of the previous pass are re-blurred, each time with a\n * decreased distance between samples.\n */\n\nconst GodRaysGenerateShader = {\n  uniforms: {\n    tInput: {\n      value: null\n    },\n    fStepSize: {\n      value: 1.0\n    },\n    vSunPositionScreenSpace: {\n      value: new Vector3()\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', ' vUv = uv;', ' gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['#define TAPS_PER_PASS 6.0', 'varying vec2 vUv;', 'uniform sampler2D tInput;', 'uniform vec3 vSunPositionScreenSpace;', 'uniform float fStepSize;', // filter step size\n  'void main() {', // delta from current pixel to \"sun\" position\n  '\tvec2 delta = vSunPositionScreenSpace.xy - vUv;', '\tfloat dist = length( delta );', // Step vector (uv space)\n  '\tvec2 stepv = fStepSize * delta / dist;', // Number of iterations between pixel and sun\n  '\tfloat iters = dist/fStepSize;', '\tvec2 uv = vUv.xy;', '\tfloat col = 0.0;', // This breaks ANGLE in Chrome 22\n  //\t- see http://code.google.com/p/chromium/issues/detail?id=153105\n\n  /*\n  // Unrolling didnt do much on my hardware (ATI Mobility Radeon 3450),\n  // so i've just left the loop\n  \"for ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {\",\n  // Accumulate samples, making sure we dont walk past the light source.\n  // The check for uv.y < 1 would not be necessary with \"border\" UV wrap\n  // mode, with a black border color. I don't think this is currently\n  // exposed by three.js. As a result there might be artifacts when the\n  // sun is to the left, right or bottom of screen as these cases are\n  // not specifically handled.\n  \"\tcol += ( i <= iters && uv.y < 1.0 ? texture2D( tInput, uv ).r : 0.0 );\",\n  \"\tuv += stepv;\",\n  \"}\",\n  */\n  // Unrolling loop manually makes it work in ANGLE\n  '\tfloat f = min( 1.0, max( vSunPositionScreenSpace.z / 1000.0, 0.0 ) );', // used to fade out godrays\n  '\tif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;', '\tuv += stepv;', '\tif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;', '\tuv += stepv;', '\tif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;', '\tuv += stepv;', '\tif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;', '\tuv += stepv;', '\tif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;', '\tuv += stepv;', '\tif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r * f;', '\tuv += stepv;', // Should technically be dividing by 'iters', but 'TAPS_PER_PASS' smooths out\n  // objectionable artifacts, in particular near the sun position. The side\n  // effect is that the result is darker than it should be around the sun, as\n  // TAPS_PER_PASS is greater than the number of samples actually accumulated.\n  // When the result is inverted (in the shader 'godrays_combine', this produces\n  // a slight bright spot at the position of the sun, even when it is occluded.\n  '\tgl_FragColor = vec4( col/TAPS_PER_PASS );', '\tgl_FragColor.a = 1.0;', '}'].join('\\n')\n};\n/**\n * Additively applies god rays from texture tGodRays to a background (tColors).\n * fGodRayIntensity attenuates the god rays.\n */\n\nconst GodRaysCombineShader = {\n  uniforms: {\n    tColors: {\n      value: null\n    },\n    tGodRays: {\n      value: null\n    },\n    fGodRayIntensity: {\n      value: 0.69\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['varying vec2 vUv;', 'uniform sampler2D tColors;', 'uniform sampler2D tGodRays;', 'uniform float fGodRayIntensity;', 'void main() {', // Since THREE.MeshDepthMaterial renders foreground objects white and background\n  // objects black, the god-rays will be white streaks. Therefore value is inverted\n  // before being combined with tColors\n  '\tgl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );', '\tgl_FragColor.a = 1.0;', '}'].join('\\n')\n};\n/**\n * A dodgy sun/sky shader. Makes a bright spot at the sun location. Would be\n * cheaper/faster/simpler to implement this as a simple sun sprite.\n */\n\nconst GodRaysFakeSunShader = {\n  uniforms: {\n    vSunPositionScreenSpace: {\n      value: new Vector3()\n    },\n    fAspect: {\n      value: 1.0\n    },\n    sunColor: {\n      value: new Color(0xffee00)\n    },\n    bgColor: {\n      value: new Color(0x000000)\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['varying vec2 vUv;', 'uniform vec3 vSunPositionScreenSpace;', 'uniform float fAspect;', 'uniform vec3 sunColor;', 'uniform vec3 bgColor;', 'void main() {', '\tvec2 diff = vUv - vSunPositionScreenSpace.xy;', // Correct for aspect ratio\n  '\tdiff.x *= fAspect;', '\tfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );', '\tprop = 0.35 * pow( 1.0 - prop, 3.0 );', '\tgl_FragColor.xyz = ( vSunPositionScreenSpace.z > 0.0 ) ? mix( sunColor, bgColor, 1.0 - prop ) : bgColor;', '\tgl_FragColor.w = 1.0;', '}'].join('\\n')\n};\n\nexport { GodRaysCombineShader, GodRaysDepthMaskShader, GodRaysFakeSunShader, GodRaysGenerateShader };\n"},"lineCount":null}},"error":null,"hash":"2c4ac56f787f1df2dadfaa0b1ae51b6c","cacheData":{"env":{}}}