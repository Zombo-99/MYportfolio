{"id":"VJVq","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1724625312988},{"name":"three","loc":{"line":1,"column":33,"index":33},"parent":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/shaders/SSAOShader.js","resolved":"/home/moh/Desktop/MYPortfolio/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.SSAOShader=exports.SSAODepthShader=exports.SSAOBlurShader=void 0;var e=require(\"three\");const t=exports.SSAOShader={defines:{PERSPECTIVE_CAMERA:1,KERNEL_SIZE:32},uniforms:{tDiffuse:{value:null},tNormal:{value:null},tDepth:{value:null},tNoise:{value:null},kernel:{value:null},cameraNear:{value:null},cameraFar:{value:null},resolution:{value:new e.Vector2},cameraProjectionMatrix:{value:new e.Matrix4},cameraInverseProjectionMatrix:{value:new e.Matrix4},kernelRadius:{value:8},minDistance:{value:.005},maxDistance:{value:.05}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"\\tvUv = uv;\",\"\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform sampler2D tNormal;\",\"uniform sampler2D tDepth;\",\"uniform sampler2D tNoise;\",\"uniform vec3 kernel[ KERNEL_SIZE ];\",\"uniform vec2 resolution;\",\"uniform float cameraNear;\",\"uniform float cameraFar;\",\"uniform mat4 cameraProjectionMatrix;\",\"uniform mat4 cameraInverseProjectionMatrix;\",\"uniform float kernelRadius;\",\"uniform float minDistance;\",\"uniform float maxDistance;\",\"varying vec2 vUv;\",\"#include <packing>\",\"float getDepth( const in vec2 screenPosition ) {\",\"\\treturn texture2D( tDepth, screenPosition ).x;\",\"}\",\"float getLinearDepth( const in vec2 screenPosition ) {\",\"\\t#if PERSPECTIVE_CAMERA == 1\",\"\\t\\tfloat fragCoordZ = texture2D( tDepth, screenPosition ).x;\",\"\\t\\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\",\"\\t\\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\",\"\\t#else\",\"\\t\\treturn texture2D( tDepth, screenPosition ).x;\",\"\\t#endif\",\"}\",\"float getViewZ( const in float depth ) {\",\"\\t#if PERSPECTIVE_CAMERA == 1\",\"\\t\\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\",\"\\t#else\",\"\\t\\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\",\"\\t#endif\",\"}\",\"vec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ ) {\",\"\\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ + cameraProjectionMatrix[3][3];\",\"\\tvec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );\",\"\\tclipPosition *= clipW; // unprojection.\",\"\\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;\",\"}\",\"vec3 getViewNormal( const in vec2 screenPosition ) {\",\"\\treturn unpackRGBToNormal( texture2D( tNormal, screenPosition ).xyz );\",\"}\",\"void main() {\",\"\\tfloat depth = getDepth( vUv );\",\"\\tfloat viewZ = getViewZ( depth );\",\"\\tvec3 viewPosition = getViewPosition( vUv, depth, viewZ );\",\"\\tvec3 viewNormal = getViewNormal( vUv );\",\" vec2 noiseScale = vec2( resolution.x / 4.0, resolution.y / 4.0 );\",\"\\tvec3 random = texture2D( tNoise, vUv * noiseScale ).xyz;\",\"\\tvec3 tangent = normalize( random - viewNormal * dot( random, viewNormal ) );\",\"\\tvec3 bitangent = cross( viewNormal, tangent );\",\"\\tmat3 kernelMatrix = mat3( tangent, bitangent, viewNormal );\",\" float occlusion = 0.0;\",\" for ( int i = 0; i < KERNEL_SIZE; i ++ ) {\",\"\\t\\tvec3 sampleVector = kernelMatrix * kernel[ i ];\",\"\\t\\tvec3 samplePoint = viewPosition + ( sampleVector * kernelRadius );\",\"\\t\\tvec4 samplePointNDC = cameraProjectionMatrix * vec4( samplePoint, 1.0 );\",\"\\t\\tsamplePointNDC /= samplePointNDC.w;\",\"\\t\\tvec2 samplePointUv = samplePointNDC.xy * 0.5 + 0.5;\",\"\\t\\tfloat realDepth = getLinearDepth( samplePointUv );\",\"\\t\\tfloat sampleDepth = viewZToOrthographicDepth( samplePoint.z, cameraNear, cameraFar );\",\"\\t\\tfloat delta = sampleDepth - realDepth;\",\"\\t\\tif ( delta > minDistance && delta < maxDistance ) {\",\"\\t\\t\\tocclusion += 1.0;\",\"\\t\\t}\",\"\\t}\",\"\\tocclusion = clamp( occlusion / float( KERNEL_SIZE ), 0.0, 1.0 );\",\"\\tgl_FragColor = vec4( vec3( 1.0 - occlusion ), 1.0 );\",\"}\"].join(\"\\n\")},r=exports.SSAODepthShader={defines:{PERSPECTIVE_CAMERA:1},uniforms:{tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"\\tvUv = uv;\",\"\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDepth;\",\"uniform float cameraNear;\",\"uniform float cameraFar;\",\"varying vec2 vUv;\",\"#include <packing>\",\"float getLinearDepth( const in vec2 screenPosition ) {\",\"\\t#if PERSPECTIVE_CAMERA == 1\",\"\\t\\tfloat fragCoordZ = texture2D( tDepth, screenPosition ).x;\",\"\\t\\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\",\"\\t\\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\",\"\\t#else\",\"\\t\\treturn texture2D( tDepth, screenPosition ).x;\",\"\\t#endif\",\"}\",\"void main() {\",\"\\tfloat depth = getLinearDepth( vUv );\",\"\\tgl_FragColor = vec4( vec3( 1.0 - depth ), 1.0 );\",\"}\"].join(\"\\n\")},a=exports.SSAOBlurShader={uniforms:{tDiffuse:{value:null},resolution:{value:new e.Vector2}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"\\tvUv = uv;\",\"\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform vec2 resolution;\",\"varying vec2 vUv;\",\"void main() {\",\"\\tvec2 texelSize = ( 1.0 / resolution );\",\"\\tfloat result = 0.0;\",\"\\tfor ( int i = - 2; i <= 2; i ++ ) {\",\"\\t\\tfor ( int j = - 2; j <= 2; j ++ ) {\",\"\\t\\t\\tvec2 offset = ( vec2( float( i ), float( j ) ) ) * texelSize;\",\"\\t\\t\\tresult += texture2D( tDiffuse, vUv + offset ).r;\",\"\\t\\t}\",\"\\t}\",\"\\tgl_FragColor = vec4( vec3( result / ( 5.0 * 5.0 ) ), 1.0 );\",\"}\"].join(\"\\n\")};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":13}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":20}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":35}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":43}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":56}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":57}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":64}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":68}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":76}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":87}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":95}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":111}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":119}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":98,"column":1},"generated":{"line":1,"column":139}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":141}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"_three","original":{"line":1,"column":0},"generated":{"line":1,"column":145}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"require","original":{"line":1,"column":0},"generated":{"line":1,"column":147}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":155}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":10,"column":0},"generated":{"line":1,"column":164}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"SSAOShader","original":{"line":10,"column":6},"generated":{"line":1,"column":170}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"exports","original":{"line":10,"column":16},"generated":{"line":1,"column":172}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"SSAOShader","original":{"line":10,"column":16},"generated":{"line":1,"column":180}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":10,"column":19},"generated":{"line":1,"column":191}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"defines","original":{"line":11,"column":2},"generated":{"line":1,"column":192}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":11,"column":11},"generated":{"line":1,"column":200}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"PERSPECTIVE_CAMERA","original":{"line":12,"column":4},"generated":{"line":1,"column":201}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":12,"column":24},"generated":{"line":1,"column":220}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"KERNEL_SIZE","original":{"line":13,"column":4},"generated":{"line":1,"column":222}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":13,"column":17},"generated":{"line":1,"column":234}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"uniforms","original":{"line":15,"column":2},"generated":{"line":1,"column":238}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":15,"column":12},"generated":{"line":1,"column":247}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"tDiffuse","original":{"line":16,"column":4},"generated":{"line":1,"column":248}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":16,"column":14},"generated":{"line":1,"column":257}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":17,"column":6},"generated":{"line":1,"column":258}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":17,"column":13},"generated":{"line":1,"column":264}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"tNormal","original":{"line":19,"column":4},"generated":{"line":1,"column":270}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":19,"column":13},"generated":{"line":1,"column":278}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":20,"column":6},"generated":{"line":1,"column":279}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":20,"column":13},"generated":{"line":1,"column":285}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"tDepth","original":{"line":22,"column":4},"generated":{"line":1,"column":291}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":22,"column":12},"generated":{"line":1,"column":298}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":23,"column":6},"generated":{"line":1,"column":299}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":23,"column":13},"generated":{"line":1,"column":305}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"tNoise","original":{"line":25,"column":4},"generated":{"line":1,"column":311}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":25,"column":12},"generated":{"line":1,"column":318}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":26,"column":6},"generated":{"line":1,"column":319}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":26,"column":13},"generated":{"line":1,"column":325}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"kernel","original":{"line":28,"column":4},"generated":{"line":1,"column":331}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":28,"column":12},"generated":{"line":1,"column":338}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":29,"column":6},"generated":{"line":1,"column":339}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":29,"column":13},"generated":{"line":1,"column":345}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"cameraNear","original":{"line":31,"column":4},"generated":{"line":1,"column":351}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":31,"column":16},"generated":{"line":1,"column":362}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":32,"column":6},"generated":{"line":1,"column":363}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":32,"column":13},"generated":{"line":1,"column":369}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"cameraFar","original":{"line":34,"column":4},"generated":{"line":1,"column":375}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":34,"column":15},"generated":{"line":1,"column":385}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":35,"column":6},"generated":{"line":1,"column":386}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":35,"column":13},"generated":{"line":1,"column":392}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"resolution","original":{"line":37,"column":4},"generated":{"line":1,"column":398}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":37,"column":16},"generated":{"line":1,"column":409}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":38,"column":6},"generated":{"line":1,"column":410}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":38,"column":13},"generated":{"line":1,"column":416}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"Vector2","original":{"line":38,"column":17},"generated":{"line":1,"column":420}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":38,"column":24},"generated":{"line":1,"column":422}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"cameraProjectionMatrix","original":{"line":40,"column":4},"generated":{"line":1,"column":431}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":40,"column":28},"generated":{"line":1,"column":454}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":41,"column":6},"generated":{"line":1,"column":455}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":41,"column":13},"generated":{"line":1,"column":461}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"Matrix4","original":{"line":41,"column":17},"generated":{"line":1,"column":465}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":41,"column":24},"generated":{"line":1,"column":467}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"cameraInverseProjectionMatrix","original":{"line":43,"column":4},"generated":{"line":1,"column":476}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":43,"column":35},"generated":{"line":1,"column":506}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":44,"column":6},"generated":{"line":1,"column":507}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":44,"column":13},"generated":{"line":1,"column":513}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"Matrix4","original":{"line":44,"column":17},"generated":{"line":1,"column":517}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":44,"column":24},"generated":{"line":1,"column":519}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"kernelRadius","original":{"line":46,"column":4},"generated":{"line":1,"column":528}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":46,"column":18},"generated":{"line":1,"column":541}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":47,"column":6},"generated":{"line":1,"column":542}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":47,"column":13},"generated":{"line":1,"column":548}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"minDistance","original":{"line":49,"column":4},"generated":{"line":1,"column":551}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":49,"column":17},"generated":{"line":1,"column":563}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":50,"column":6},"generated":{"line":1,"column":564}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":50,"column":13},"generated":{"line":1,"column":570}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"maxDistance","original":{"line":52,"column":4},"generated":{"line":1,"column":576}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":52,"column":17},"generated":{"line":1,"column":588}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":53,"column":6},"generated":{"line":1,"column":589}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":53,"column":13},"generated":{"line":1,"column":595}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"vertexShader","original":{"line":56,"column":2},"generated":{"line":1,"column":601}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":56,"column":16},"generated":{"line":1,"column":614}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":56,"column":17},"generated":{"line":1,"column":615}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":56,"column":38},"generated":{"line":1,"column":635}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":56,"column":55},"generated":{"line":1,"column":651}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":56,"column":69},"generated":{"line":1,"column":665}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":56,"column":147},"generated":{"line":1,"column":743}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"join","original":{"line":56,"column":152},"generated":{"line":1,"column":748}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":56,"column":157},"generated":{"line":1,"column":753}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"fragmentShader","original":{"line":57,"column":2},"generated":{"line":1,"column":759}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":18},"generated":{"line":1,"column":774}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":19},"generated":{"line":1,"column":775}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":50},"generated":{"line":1,"column":805}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":80},"generated":{"line":1,"column":834}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":109},"generated":{"line":1,"column":862}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":138},"generated":{"line":1,"column":890}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":177},"generated":{"line":1,"column":928}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":205},"generated":{"line":1,"column":955}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":234},"generated":{"line":1,"column":983}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":262},"generated":{"line":1,"column":1010}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":302},"generated":{"line":1,"column":1049}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":349},"generated":{"line":1,"column":1095}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":57,"column":380},"generated":{"line":1,"column":1125}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":58,"column":2},"generated":{"line":1,"column":1154}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":2},"generated":{"line":1,"column":1183}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":23},"generated":{"line":1,"column":1203}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":45},"generated":{"line":1,"column":1224}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":97},"generated":{"line":1,"column":1275}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":147},"generated":{"line":1,"column":1325}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":152},"generated":{"line":1,"column":1329}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":210},"generated":{"line":1,"column":1386}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":242},"generated":{"line":1,"column":1418}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":305},"generated":{"line":1,"column":1482}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":386},"generated":{"line":1,"column":1564}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":456},"generated":{"line":1,"column":1635}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":466},"generated":{"line":1,"column":1645}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":517},"generated":{"line":1,"column":1697}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":528},"generated":{"line":1,"column":1708}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":533},"generated":{"line":1,"column":1712}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":577},"generated":{"line":1,"column":1755}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":609},"generated":{"line":1,"column":1787}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":678},"generated":{"line":1,"column":1857}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":688},"generated":{"line":1,"column":1867}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":758},"generated":{"line":1,"column":1938}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":769},"generated":{"line":1,"column":1949}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":774},"generated":{"line":1,"column":1953}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":876},"generated":{"line":1,"column":2054}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":963},"generated":{"line":1,"column":2141}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1047},"generated":{"line":1,"column":2225}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1091},"generated":{"line":1,"column":2269}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1156},"generated":{"line":1,"column":2334}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1161},"generated":{"line":1,"column":2338}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1217},"generated":{"line":1,"column":2393}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1291},"generated":{"line":1,"column":2467}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1296},"generated":{"line":1,"column":2471}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1313},"generated":{"line":1,"column":2487}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1348},"generated":{"line":1,"column":2522}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1385},"generated":{"line":1,"column":2559}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1447},"generated":{"line":1,"column":2621}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1491},"generated":{"line":1,"column":2665}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":59,"column":1561},"generated":{"line":1,"column":2734}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":60,"column":2},"generated":{"line":1,"column":2795}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":60,"column":83},"generated":{"line":1,"column":2876}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":60,"column":134},"generated":{"line":1,"column":2927}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":60,"column":198},"generated":{"line":1,"column":2991}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":60,"column":225},"generated":{"line":1,"column":3017}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":60,"column":272},"generated":{"line":1,"column":3063}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":61,"column":2},"generated":{"line":1,"column":3117}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":62,"column":2},"generated":{"line":1,"column":3190}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":63,"column":2},"generated":{"line":1,"column":3269}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":63,"column":43},"generated":{"line":1,"column":3311}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":64,"column":2},"generated":{"line":1,"column":3369}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":65,"column":2},"generated":{"line":1,"column":3426}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":66,"column":2},"generated":{"line":1,"column":3518}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":66,"column":46},"generated":{"line":1,"column":3563}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":67,"column":2},"generated":{"line":1,"column":3621}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":67,"column":26},"generated":{"line":1,"column":3647}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":67,"column":33},"generated":{"line":1,"column":3655}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":67,"column":39},"generated":{"line":1,"column":3661}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":67,"column":108},"generated":{"line":1,"column":3730}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":67,"column":165},"generated":{"line":1,"column":3787}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"join","original":{"line":67,"column":170},"generated":{"line":1,"column":3792}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":67,"column":175},"generated":{"line":1,"column":3797}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"SSAODepthShader","original":{"line":69,"column":6},"generated":{"line":1,"column":3804}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"exports","original":{"line":69,"column":21},"generated":{"line":1,"column":3806}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"SSAODepthShader","original":{"line":69,"column":21},"generated":{"line":1,"column":3814}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":69,"column":24},"generated":{"line":1,"column":3830}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"defines","original":{"line":70,"column":2},"generated":{"line":1,"column":3831}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":70,"column":11},"generated":{"line":1,"column":3839}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"PERSPECTIVE_CAMERA","original":{"line":71,"column":4},"generated":{"line":1,"column":3840}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":71,"column":24},"generated":{"line":1,"column":3859}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"uniforms","original":{"line":73,"column":2},"generated":{"line":1,"column":3862}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":73,"column":12},"generated":{"line":1,"column":3871}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"tDepth","original":{"line":74,"column":4},"generated":{"line":1,"column":3872}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":74,"column":12},"generated":{"line":1,"column":3879}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":75,"column":6},"generated":{"line":1,"column":3880}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":75,"column":13},"generated":{"line":1,"column":3886}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"cameraNear","original":{"line":77,"column":4},"generated":{"line":1,"column":3892}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":77,"column":16},"generated":{"line":1,"column":3903}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":78,"column":6},"generated":{"line":1,"column":3904}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":78,"column":13},"generated":{"line":1,"column":3910}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"cameraFar","original":{"line":80,"column":4},"generated":{"line":1,"column":3916}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":80,"column":15},"generated":{"line":1,"column":3926}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":81,"column":6},"generated":{"line":1,"column":3927}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":81,"column":13},"generated":{"line":1,"column":3933}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"vertexShader","original":{"line":84,"column":2},"generated":{"line":1,"column":3940}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":84,"column":16},"generated":{"line":1,"column":3953}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":84,"column":17},"generated":{"line":1,"column":3954}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":84,"column":38},"generated":{"line":1,"column":3974}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":84,"column":55},"generated":{"line":1,"column":3990}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":84,"column":69},"generated":{"line":1,"column":4004}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":84,"column":147},"generated":{"line":1,"column":4082}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"join","original":{"line":84,"column":152},"generated":{"line":1,"column":4087}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":84,"column":157},"generated":{"line":1,"column":4092}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"fragmentShader","original":{"line":85,"column":2},"generated":{"line":1,"column":4098}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":18},"generated":{"line":1,"column":4113}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":19},"generated":{"line":1,"column":4114}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":48},"generated":{"line":1,"column":4142}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":77},"generated":{"line":1,"column":4170}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":105},"generated":{"line":1,"column":4197}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":126},"generated":{"line":1,"column":4217}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":148},"generated":{"line":1,"column":4238}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":206},"generated":{"line":1,"column":4295}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":238},"generated":{"line":1,"column":4327}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":301},"generated":{"line":1,"column":4391}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":382},"generated":{"line":1,"column":4473}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":452},"generated":{"line":1,"column":4544}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":462},"generated":{"line":1,"column":4554}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":513},"generated":{"line":1,"column":4606}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":524},"generated":{"line":1,"column":4617}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":529},"generated":{"line":1,"column":4621}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":546},"generated":{"line":1,"column":4637}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":587},"generated":{"line":1,"column":4678}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":640},"generated":{"line":1,"column":4731}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"join","original":{"line":85,"column":645},"generated":{"line":1,"column":4736}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":85,"column":650},"generated":{"line":1,"column":4741}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"SSAOBlurShader","original":{"line":87,"column":6},"generated":{"line":1,"column":4748}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"exports","original":{"line":87,"column":20},"generated":{"line":1,"column":4750}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"SSAOBlurShader","original":{"line":87,"column":20},"generated":{"line":1,"column":4758}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":87,"column":23},"generated":{"line":1,"column":4773}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"uniforms","original":{"line":88,"column":2},"generated":{"line":1,"column":4774}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":88,"column":12},"generated":{"line":1,"column":4783}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"tDiffuse","original":{"line":89,"column":4},"generated":{"line":1,"column":4784}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":89,"column":14},"generated":{"line":1,"column":4793}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":90,"column":6},"generated":{"line":1,"column":4794}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":90,"column":13},"generated":{"line":1,"column":4800}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"resolution","original":{"line":92,"column":4},"generated":{"line":1,"column":4806}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":92,"column":16},"generated":{"line":1,"column":4817}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"value","original":{"line":93,"column":6},"generated":{"line":1,"column":4818}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":93,"column":13},"generated":{"line":1,"column":4824}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"Vector2","original":{"line":93,"column":17},"generated":{"line":1,"column":4828}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":93,"column":24},"generated":{"line":1,"column":4830}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"vertexShader","original":{"line":96,"column":2},"generated":{"line":1,"column":4840}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":96,"column":16},"generated":{"line":1,"column":4853}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":96,"column":17},"generated":{"line":1,"column":4854}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":96,"column":38},"generated":{"line":1,"column":4874}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":96,"column":55},"generated":{"line":1,"column":4890}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":96,"column":69},"generated":{"line":1,"column":4904}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":96,"column":147},"generated":{"line":1,"column":4982}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"join","original":{"line":96,"column":152},"generated":{"line":1,"column":4987}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":96,"column":157},"generated":{"line":1,"column":4992}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"fragmentShader","original":{"line":97,"column":2},"generated":{"line":1,"column":4998}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":18},"generated":{"line":1,"column":5013}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":19},"generated":{"line":1,"column":5014}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":50},"generated":{"line":1,"column":5044}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":78},"generated":{"line":1,"column":5071}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":99},"generated":{"line":1,"column":5091}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":116},"generated":{"line":1,"column":5107}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":159},"generated":{"line":1,"column":5150}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":183},"generated":{"line":1,"column":5174}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":223},"generated":{"line":1,"column":5214}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":264},"generated":{"line":1,"column":5256}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":332},"generated":{"line":1,"column":5326}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":387},"generated":{"line":1,"column":5383}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":394},"generated":{"line":1,"column":5391}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":400},"generated":{"line":1,"column":5397}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":464},"generated":{"line":1,"column":5461}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","name":"join","original":{"line":97,"column":469},"generated":{"line":1,"column":5466}},{"source":"node_modules/three-stdlib/shaders/SSAOShader.js","original":{"line":97,"column":474},"generated":{"line":1,"column":5471}}],"sources":{"node_modules/three-stdlib/shaders/SSAOShader.js":"import { Vector2, Matrix4 } from 'three';\n\n/**\n * References:\n * http://john-chapman-graphics.blogspot.com/2013/01/ssao-tutorial.html\n * https://learnopengl.com/Advanced-Lighting/SSAO\n * https://github.com/McNopper/OpenGL/blob/master/Example28/shader/ssao.frag.glsl\n */\n\nconst SSAOShader = {\n  defines: {\n    PERSPECTIVE_CAMERA: 1,\n    KERNEL_SIZE: 32\n  },\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    tNormal: {\n      value: null\n    },\n    tDepth: {\n      value: null\n    },\n    tNoise: {\n      value: null\n    },\n    kernel: {\n      value: null\n    },\n    cameraNear: {\n      value: null\n    },\n    cameraFar: {\n      value: null\n    },\n    resolution: {\n      value: new Vector2()\n    },\n    cameraProjectionMatrix: {\n      value: new Matrix4()\n    },\n    cameraInverseProjectionMatrix: {\n      value: new Matrix4()\n    },\n    kernelRadius: {\n      value: 8\n    },\n    minDistance: {\n      value: 0.005\n    },\n    maxDistance: {\n      value: 0.05\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform sampler2D tDiffuse;', 'uniform sampler2D tNormal;', 'uniform sampler2D tDepth;', 'uniform sampler2D tNoise;', 'uniform vec3 kernel[ KERNEL_SIZE ];', 'uniform vec2 resolution;', 'uniform float cameraNear;', 'uniform float cameraFar;', 'uniform mat4 cameraProjectionMatrix;', 'uniform mat4 cameraInverseProjectionMatrix;', 'uniform float kernelRadius;', 'uniform float minDistance;', // avoid artifacts caused by neighbour fragments with minimal depth difference\n  'uniform float maxDistance;', // avoid the influence of fragments which are too far away\n  'varying vec2 vUv;', '#include <packing>', 'float getDepth( const in vec2 screenPosition ) {', '\treturn texture2D( tDepth, screenPosition ).x;', '}', 'float getLinearDepth( const in vec2 screenPosition ) {', '\t#if PERSPECTIVE_CAMERA == 1', '\t\tfloat fragCoordZ = texture2D( tDepth, screenPosition ).x;', '\t\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );', '\t\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );', '\t#else', '\t\treturn texture2D( tDepth, screenPosition ).x;', '\t#endif', '}', 'float getViewZ( const in float depth ) {', '\t#if PERSPECTIVE_CAMERA == 1', '\t\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );', '\t#else', '\t\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );', '\t#endif', '}', 'vec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ ) {', '\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ + cameraProjectionMatrix[3][3];', '\tvec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );', '\tclipPosition *= clipW; // unprojection.', '\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;', '}', 'vec3 getViewNormal( const in vec2 screenPosition ) {', '\treturn unpackRGBToNormal( texture2D( tNormal, screenPosition ).xyz );', '}', 'void main() {', '\tfloat depth = getDepth( vUv );', '\tfloat viewZ = getViewZ( depth );', '\tvec3 viewPosition = getViewPosition( vUv, depth, viewZ );', '\tvec3 viewNormal = getViewNormal( vUv );', ' vec2 noiseScale = vec2( resolution.x / 4.0, resolution.y / 4.0 );', '\tvec3 random = texture2D( tNoise, vUv * noiseScale ).xyz;', // compute matrix used to reorient a kernel vector\n  '\tvec3 tangent = normalize( random - viewNormal * dot( random, viewNormal ) );', '\tvec3 bitangent = cross( viewNormal, tangent );', '\tmat3 kernelMatrix = mat3( tangent, bitangent, viewNormal );', ' float occlusion = 0.0;', ' for ( int i = 0; i < KERNEL_SIZE; i ++ ) {', '\t\tvec3 sampleVector = kernelMatrix * kernel[ i ];', // reorient sample vector in view space\n  '\t\tvec3 samplePoint = viewPosition + ( sampleVector * kernelRadius );', // calculate sample point\n  '\t\tvec4 samplePointNDC = cameraProjectionMatrix * vec4( samplePoint, 1.0 );', // project point and calculate NDC\n  '\t\tsamplePointNDC /= samplePointNDC.w;', '\t\tvec2 samplePointUv = samplePointNDC.xy * 0.5 + 0.5;', // compute uv coordinates\n  '\t\tfloat realDepth = getLinearDepth( samplePointUv );', // get linear depth from depth texture\n  '\t\tfloat sampleDepth = viewZToOrthographicDepth( samplePoint.z, cameraNear, cameraFar );', // compute linear depth of the sample view Z value\n  '\t\tfloat delta = sampleDepth - realDepth;', '\t\tif ( delta > minDistance && delta < maxDistance ) {', // if fragment is before sample point, increase occlusion\n  '\t\t\tocclusion += 1.0;', '\t\t}', '\t}', '\tocclusion = clamp( occlusion / float( KERNEL_SIZE ), 0.0, 1.0 );', '\tgl_FragColor = vec4( vec3( 1.0 - occlusion ), 1.0 );', '}'].join('\\n')\n};\nconst SSAODepthShader = {\n  defines: {\n    PERSPECTIVE_CAMERA: 1\n  },\n  uniforms: {\n    tDepth: {\n      value: null\n    },\n    cameraNear: {\n      value: null\n    },\n    cameraFar: {\n      value: null\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform sampler2D tDepth;', 'uniform float cameraNear;', 'uniform float cameraFar;', 'varying vec2 vUv;', '#include <packing>', 'float getLinearDepth( const in vec2 screenPosition ) {', '\t#if PERSPECTIVE_CAMERA == 1', '\t\tfloat fragCoordZ = texture2D( tDepth, screenPosition ).x;', '\t\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );', '\t\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );', '\t#else', '\t\treturn texture2D( tDepth, screenPosition ).x;', '\t#endif', '}', 'void main() {', '\tfloat depth = getLinearDepth( vUv );', '\tgl_FragColor = vec4( vec3( 1.0 - depth ), 1.0 );', '}'].join('\\n')\n};\nconst SSAOBlurShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    resolution: {\n      value: new Vector2()\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform sampler2D tDiffuse;', 'uniform vec2 resolution;', 'varying vec2 vUv;', 'void main() {', '\tvec2 texelSize = ( 1.0 / resolution );', '\tfloat result = 0.0;', '\tfor ( int i = - 2; i <= 2; i ++ ) {', '\t\tfor ( int j = - 2; j <= 2; j ++ ) {', '\t\t\tvec2 offset = ( vec2( float( i ), float( j ) ) ) * texelSize;', '\t\t\tresult += texture2D( tDiffuse, vUv + offset ).r;', '\t\t}', '\t}', '\tgl_FragColor = vec4( vec3( result / ( 5.0 * 5.0 ) ), 1.0 );', '}'].join('\\n')\n};\n\nexport { SSAOBlurShader, SSAODepthShader, SSAOShader };\n"},"lineCount":null}},"error":null,"hash":"314ff120f44b10c5ef523a81f89a8ba6","cacheData":{"env":{}}}