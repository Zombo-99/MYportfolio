{"id":"NgPb","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/@react-three/drei/package.json","includedInParent":true,"mtime":1724625309342},{"name":"three","loc":{"line":1,"column":23,"index":23},"parent":"/home/moh/Desktop/MYPortfolio/node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","resolved":"/home/moh/Desktop/MYPortfolio/node_modules/three/build/three.module.js"},{"name":"../core/shaderMaterial.js","loc":{"line":2,"column":31,"index":63},"parent":"/home/moh/Desktop/MYPortfolio/node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","resolved":"/home/moh/Desktop/MYPortfolio/node_modules/@react-three/drei/core/shaderMaterial.js"},{"name":"three-mesh-bvh","loc":{"line":3,"column":77,"index":169},"parent":"/home/moh/Desktop/MYPortfolio/node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","resolved":"/home/moh/Desktop/MYPortfolio/node_modules/three-mesh-bvh/src/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.MeshRefractionMaterial=void 0;var e=o(require(\"three\")),r=require(\"../core/shaderMaterial.js\"),n=require(\"three-mesh-bvh\");function i(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap,n=new WeakMap;return(i=function(e){return e?n:r})(e)}function o(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var n=i(r);if(n&&n.has(e))return n.get(e);var o={__proto__:null},t=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(\"default\"!==a&&{}.hasOwnProperty.call(e,a)){var c=t?Object.getOwnPropertyDescriptor(e,a):null;c&&(c.get||c.set)?Object.defineProperty(o,a,c):o[a]=e[a]}return o.default=e,n&&n.set(e,o),o}const t=exports.MeshRefractionMaterial=(0,r.shaderMaterial)({envMap:null,bounces:3,ior:2.4,correctMips:!0,aberrationStrength:.01,fresnel:0,bvh:new n.MeshBVHUniformStruct,color:new e.Color(\"white\"),resolution:new e.Vector2,viewMatrixInverse:new e.Matrix4,projectionMatrixInverse:new e.Matrix4},\"\\n  uniform mat4 viewMatrixInverse;\\n\\n  varying vec3 vWorldPosition;  \\n  varying vec3 vNormal;\\n  varying mat4 vModelMatrixInverse;\\n\\n  #ifdef USE_INSTANCING_COLOR\\n    varying vec3 vInstanceColor;\\n  #endif\\n\\n  void main() {        \\n    vec4 transformedNormal = vec4(normal, 0.0);\\n    vec4 transformedPosition = vec4(position, 1.0);\\n    #ifdef USE_INSTANCING\\n      transformedNormal = instanceMatrix * transformedNormal;\\n      transformedPosition = instanceMatrix * transformedPosition;\\n    #endif\\n\\n    #ifdef USE_INSTANCING\\n      vModelMatrixInverse = inverse(modelMatrix * instanceMatrix);\\n    #else\\n      vModelMatrixInverse = inverse(modelMatrix);\\n    #endif\\n\\n    #ifdef USE_INSTANCING_COLOR\\n      vInstanceColor = instanceColor.rgb;\\n    #endif\\n\\n    vWorldPosition = (modelMatrix * transformedPosition).xyz;\\n    vNormal = normalize((viewMatrixInverse * vec4(normalMatrix * transformedNormal.xyz, 0.0)).xyz);\\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * transformedPosition;\\n  }\",`\\n  #define ENVMAP_TYPE_CUBE_UV\\n  precision highp isampler2D;\\n  precision highp usampler2D;\\n  varying vec3 vWorldPosition;\\n  varying vec3 vNormal;\\n  varying mat4 vModelMatrixInverse;\\n\\n  #ifdef USE_INSTANCING_COLOR\\n    varying vec3 vInstanceColor;\\n  #endif\\n    \\n  #ifdef ENVMAP_TYPE_CUBEM\\n    uniform samplerCube envMap;\\n  #else\\n    uniform sampler2D envMap;\\n  #endif\\n    \\n  uniform float bounces;\\n  ${n.shaderStructs}\\n  ${n.shaderIntersectFunction}\\n  uniform BVH bvh;\\n  uniform float ior;\\n  uniform bool correctMips;\\n  uniform vec2 resolution;\\n  uniform float fresnel;\\n  uniform mat4 modelMatrix;\\n  uniform mat4 projectionMatrixInverse;\\n  uniform mat4 viewMatrixInverse;\\n  uniform float aberrationStrength;\\n  uniform vec3 color;\\n  \\n  float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\\n    return pow( 1.0 + dot( viewDirection, worldNormal), 10.0 );\\n  }\\n    \\n  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 normal, float ior, mat4 modelMatrixInverse) {\\n    vec3 rayOrigin = ro;\\n    vec3 rayDirection = rd;\\n    rayDirection = refract(rayDirection, normal, 1.0 / ior);\\n    rayOrigin = vWorldPosition + rayDirection * 0.001;\\n    rayOrigin = (modelMatrixInverse * vec4(rayOrigin, 1.0)).xyz;\\n    rayDirection = normalize((modelMatrixInverse * vec4(rayDirection, 0.0)).xyz);\\n    for(float i = 0.0; i < bounces; i++) {\\n      uvec4 faceIndices = uvec4( 0u );\\n      vec3 faceNormal = vec3( 0.0, 0.0, 1.0 );\\n      vec3 barycoord = vec3( 0.0 );\\n      float side = 1.0;\\n      float dist = 0.0;\\n      bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist );\\n      vec3 hitPos = rayOrigin + rayDirection * max(dist - 0.001, 0.0);      \\n      vec3 tempDir = refract(rayDirection, faceNormal, ior);\\n      if (length(tempDir) != 0.0) {\\n        rayDirection = tempDir;\\n        break;\\n      }\\n      rayDirection = reflect(rayDirection, faceNormal);\\n      rayOrigin = hitPos + rayDirection * 0.01;\\n    }\\n    rayDirection = normalize((modelMatrix * vec4(rayDirection, 0.0)).xyz);\\n    return rayDirection;\\n  }\\n    \\n  #include <common>\\n  #include <cube_uv_reflection_fragment>\\n    \\n  #ifdef ENVMAP_TYPE_CUBEM\\n    vec4 textureGradient(samplerCube envMap, vec3 rayDirection, vec3 directionCamPerfect) {\\n      return textureGrad(envMap, rayDirection, dFdx(correctMips ? directionCamPerfect: rayDirection), dFdy(correctMips ? directionCamPerfect: rayDirection));\\n    }\\n  #else\\n    vec4 textureGradient(sampler2D envMap, vec3 rayDirection, vec3 directionCamPerfect) {\\n      vec2 uvv = equirectUv( rayDirection );\\n      vec2 smoothUv = equirectUv( directionCamPerfect );\\n      return textureGrad(envMap, uvv, dFdx(correctMips ? smoothUv : uvv), dFdy(correctMips ? smoothUv : uvv));\\n    }\\n  #endif\\n  \\n  void main() {\\n    vec2 uv = gl_FragCoord.xy / resolution;\\n    vec3 directionCamPerfect = (projectionMatrixInverse * vec4(uv * 2.0 - 1.0, 0.0, 1.0)).xyz;\\n    directionCamPerfect = (viewMatrixInverse * vec4(directionCamPerfect, 0.0)).xyz;\\n    directionCamPerfect = normalize(directionCamPerfect);\\n    vec3 normal = vNormal;\\n    vec3 rayOrigin = cameraPosition;\\n    vec3 rayDirection = normalize(vWorldPosition - cameraPosition);\\n    vec3 finalColor;\\n    #ifdef CHROMATIC_ABERRATIONS\\n      vec3 rayDirectionG = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\\n      #ifdef FAST_CHROMA \\n        vec3 rayDirectionR = normalize(rayDirectionG + 1.0 * vec3(aberrationStrength / 2.0));\\n        vec3 rayDirectionB = normalize(rayDirectionG - 1.0 * vec3(aberrationStrength / 2.0));\\n      #else\\n        vec3 rayDirectionR = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 - aberrationStrength), 1.0), vModelMatrixInverse);\\n        vec3 rayDirectionB = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 + aberrationStrength), 1.0), vModelMatrixInverse);\\n      #endif\\n      float finalColorR = textureGradient(envMap, rayDirectionR, directionCamPerfect).r;\\n      float finalColorG = textureGradient(envMap, rayDirectionG, directionCamPerfect).g;\\n      float finalColorB = textureGradient(envMap, rayDirectionB, directionCamPerfect).b;\\n      finalColor = vec3(finalColorR, finalColorG, finalColorB);\\n    #else\\n      rayDirection = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\\n      finalColor = textureGradient(envMap, rayDirection, directionCamPerfect).rgb;    \\n    #endif\\n\\n    finalColor *= color;\\n    #ifdef USE_INSTANCING_COLOR\\n      finalColor *= vInstanceColor;\\n    #endif\\n\\n    vec3 viewDirection = normalize(vWorldPosition - cameraPosition);\\n    float nFresnel = fresnelFunc(viewDirection, normal) * fresnel;\\n    gl_FragColor = vec4(mix(finalColor, vec3(1.0), nFresnel), 1.0);      \\n    #include <tonemapping_fragment>\\n    #include <encodings_fragment>\\n  }`);"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":0}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":13}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":20}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":35}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":43}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":56}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":57}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":64}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":68}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":76}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":169,"column":5},"generated":{"line":1,"column":104}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":1,"column":0},"generated":{"line":1,"column":106}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"THREE","original":{"line":1,"column":0},"generated":{"line":1,"column":110}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"_interopRequireWildcard","original":{"line":1,"column":0},"generated":{"line":1,"column":112}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"require","original":{"line":1,"column":0},"generated":{"line":1,"column":114}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":1,"column":0},"generated":{"line":1,"column":122}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"_shaderMaterial","original":{"line":2,"column":0},"generated":{"line":1,"column":132}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"require","original":{"line":2,"column":0},"generated":{"line":1,"column":134}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":2,"column":0},"generated":{"line":1,"column":142}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"_threeMeshBvh","original":{"line":3,"column":0},"generated":{"line":1,"column":171}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"require","original":{"line":3,"column":0},"generated":{"line":1,"column":173}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":3,"column":0},"generated":{"line":1,"column":181}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":3,"column":94},"generated":{"line":1,"column":199}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"_getRequireWildcardCache","original":{"line":3,"column":94},"generated":{"line":1,"column":208}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":210}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"WeakMap","original":{"line":3,"column":94},"generated":{"line":1,"column":213}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"WeakMap","original":{"line":3,"column":94},"generated":{"line":1,"column":216}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"WeakMap","original":{"line":3,"column":94},"generated":{"line":1,"column":235}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"r","original":{"line":3,"column":94},"generated":{"line":1,"column":243}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"r","original":{"line":3,"column":94},"generated":{"line":1,"column":250}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"r","original":{"line":3,"column":94},"generated":{"line":1,"column":255}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"r","original":{"line":3,"column":94},"generated":{"line":1,"column":259}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"WeakMap","original":{"line":3,"column":94},"generated":{"line":1,"column":261}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"WeakMap","original":{"line":3,"column":94},"generated":{"line":1,"column":265}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":273}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"WeakMap","original":{"line":3,"column":94},"generated":{"line":1,"column":275}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"WeakMap","original":{"line":3,"column":94},"generated":{"line":1,"column":279}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"_getRequireWildcardCache","original":{"line":3,"column":94},"generated":{"line":1,"column":287}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"_getRequireWildcardCache","original":{"line":3,"column":94},"generated":{"line":1,"column":294}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"_getRequireWildcardCache","original":{"line":3,"column":94},"generated":{"line":1,"column":296}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":305}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":308}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":315}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":317}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"r","original":{"line":3,"column":94},"generated":{"line":1,"column":319}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":323}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":3,"column":94},"generated":{"line":1,"column":326}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"_interopRequireWildcard","original":{"line":3,"column":94},"generated":{"line":1,"column":335}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":337}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"r","original":{"line":3,"column":94},"generated":{"line":1,"column":339}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"r","original":{"line":3,"column":94},"generated":{"line":1,"column":342}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"r","original":{"line":3,"column":94},"generated":{"line":1,"column":346}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":349}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":352}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"__esModule","original":{"line":3,"column":94},"generated":{"line":1,"column":354}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":365}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":372}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":374}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":377}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":384}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":387}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":404}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":407}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":426}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"default","original":{"line":3,"column":94},"generated":{"line":1,"column":428}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"default","original":{"line":3,"column":94},"generated":{"line":1,"column":434}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"default","original":{"line":3,"column":94},"generated":{"line":1,"column":435}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":443}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":446}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":450}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"_getRequireWildcardCache","original":{"line":3,"column":94},"generated":{"line":1,"column":452}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"r","original":{"line":3,"column":94},"generated":{"line":1,"column":454}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":457}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":460}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":463}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"has","original":{"line":3,"column":94},"generated":{"line":1,"column":465}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":469}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":472}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":479}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"get","original":{"line":3,"column":94},"generated":{"line":1,"column":481}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":485}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"n","original":{"line":3,"column":94},"generated":{"line":1,"column":488}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"n","original":{"line":3,"column":94},"generated":{"line":1,"column":492}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"__proto__","original":{"line":3,"column":94},"generated":{"line":1,"column":494}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"__proto__","original":{"line":3,"column":94},"generated":{"line":1,"column":495}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"a","original":{"line":3,"column":94},"generated":{"line":1,"column":505}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"a","original":{"line":3,"column":94},"generated":{"line":1,"column":511}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"Object","original":{"line":3,"column":94},"generated":{"line":1,"column":513}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"defineProperty","original":{"line":3,"column":94},"generated":{"line":1,"column":520}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"Object","original":{"line":3,"column":94},"generated":{"line":1,"column":536}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"getOwnPropertyDescriptor","original":{"line":3,"column":94},"generated":{"line":1,"column":543}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":568}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":572}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":576}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":581}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":583}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":586}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":598}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"hasOwnProperty","original":{"line":3,"column":94},"generated":{"line":1,"column":601}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"hasOwnProperty","original":{"line":3,"column":94},"generated":{"line":1,"column":604}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"call","original":{"line":3,"column":94},"generated":{"line":1,"column":619}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":624}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":626}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"i","original":{"line":3,"column":94},"generated":{"line":1,"column":629}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"i","original":{"line":3,"column":94},"generated":{"line":1,"column":630}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"i","original":{"line":3,"column":94},"generated":{"line":1,"column":634}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"a","original":{"line":3,"column":94},"generated":{"line":1,"column":636}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"Object","original":{"line":3,"column":94},"generated":{"line":1,"column":638}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"getOwnPropertyDescriptor","original":{"line":3,"column":94},"generated":{"line":1,"column":645}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":670}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":672}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"i","original":{"line":3,"column":94},"generated":{"line":1,"column":675}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"i","original":{"line":3,"column":94},"generated":{"line":1,"column":680}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"i","original":{"line":3,"column":94},"generated":{"line":1,"column":684}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"get","original":{"line":3,"column":94},"generated":{"line":1,"column":686}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"i","original":{"line":3,"column":94},"generated":{"line":1,"column":691}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"set","original":{"line":3,"column":94},"generated":{"line":1,"column":693}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"Object","original":{"line":3,"column":94},"generated":{"line":1,"column":698}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"defineProperty","original":{"line":3,"column":94},"generated":{"line":1,"column":705}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"n","original":{"line":3,"column":94},"generated":{"line":1,"column":720}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":722}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"i","original":{"line":3,"column":94},"generated":{"line":1,"column":724}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"n","original":{"line":3,"column":94},"generated":{"line":1,"column":727}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":729}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":732}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"u","original":{"line":3,"column":94},"generated":{"line":1,"column":734}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"n","original":{"line":3,"column":94},"generated":{"line":1,"column":737}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"n","original":{"line":3,"column":94},"generated":{"line":1,"column":744}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"default","original":{"line":3,"column":94},"generated":{"line":1,"column":746}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":754}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":756}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"t","original":{"line":3,"column":94},"generated":{"line":1,"column":759}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"set","original":{"line":3,"column":94},"generated":{"line":1,"column":761}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"e","original":{"line":3,"column":94},"generated":{"line":1,"column":765}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"n","original":{"line":3,"column":94},"generated":{"line":1,"column":767}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"n","original":{"line":3,"column":94},"generated":{"line":1,"column":770}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":6,"column":0},"generated":{"line":1,"column":772}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"MeshRefractionMaterial","original":{"line":6,"column":6},"generated":{"line":1,"column":778}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"exports","original":{"line":6,"column":28},"generated":{"line":1,"column":780}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"MeshRefractionMaterial","original":{"line":6,"column":28},"generated":{"line":1,"column":788}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":6,"column":31},"generated":{"line":1,"column":812}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"shaderMaterial","original":{"line":6,"column":31},"generated":{"line":1,"column":814}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":6,"column":45},"generated":{"line":1,"column":816}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":6,"column":46},"generated":{"line":1,"column":832}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"envMap","original":{"line":7,"column":2},"generated":{"line":1,"column":833}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":7,"column":10},"generated":{"line":1,"column":840}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"bounces","original":{"line":8,"column":2},"generated":{"line":1,"column":845}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":8,"column":11},"generated":{"line":1,"column":853}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"ior","original":{"line":9,"column":2},"generated":{"line":1,"column":855}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":9,"column":7},"generated":{"line":1,"column":859}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"correctMips","original":{"line":10,"column":2},"generated":{"line":1,"column":863}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":10,"column":15},"generated":{"line":1,"column":876}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"aberrationStrength","original":{"line":11,"column":2},"generated":{"line":1,"column":878}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":11,"column":22},"generated":{"line":1,"column":897}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"fresnel","original":{"line":12,"column":2},"generated":{"line":1,"column":901}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":12,"column":11},"generated":{"line":1,"column":909}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"bvh","original":{"line":13,"column":2},"generated":{"line":1,"column":911}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":13,"column":7},"generated":{"line":1,"column":915}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"MeshBVHUniformStruct","original":{"line":13,"column":11},"generated":{"line":1,"column":919}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":13,"column":31},"generated":{"line":1,"column":921}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"color","original":{"line":14,"column":2},"generated":{"line":1,"column":942}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":14,"column":9},"generated":{"line":1,"column":948}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"THREE","original":{"line":14,"column":13},"generated":{"line":1,"column":952}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"Color","original":{"line":14,"column":19},"generated":{"line":1,"column":954}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":14,"column":25},"generated":{"line":1,"column":960}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"resolution","original":{"line":15,"column":2},"generated":{"line":1,"column":969}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":15,"column":14},"generated":{"line":1,"column":980}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"THREE","original":{"line":15,"column":18},"generated":{"line":1,"column":984}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"Vector2","original":{"line":15,"column":24},"generated":{"line":1,"column":986}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"viewMatrixInverse","original":{"line":16,"column":2},"generated":{"line":1,"column":994}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":16,"column":21},"generated":{"line":1,"column":1012}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"THREE","original":{"line":16,"column":25},"generated":{"line":1,"column":1016}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"Matrix4","original":{"line":16,"column":31},"generated":{"line":1,"column":1018}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"projectionMatrixInverse","original":{"line":17,"column":2},"generated":{"line":1,"column":1026}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":17,"column":27},"generated":{"line":1,"column":1050}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"THREE","original":{"line":17,"column":31},"generated":{"line":1,"column":1054}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"Matrix4","original":{"line":17,"column":37},"generated":{"line":1,"column":1056}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":20,"column":0},"generated":{"line":1,"column":1065}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"shaderStructs","original":{"line":73,"column":4},"generated":{"line":1,"column":2514}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":73,"column":17},"generated":{"line":1,"column":2516}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","name":"shaderIntersectFunction","original":{"line":74,"column":4},"generated":{"line":1,"column":2536}},{"source":"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js","original":{"line":74,"column":27},"generated":{"line":1,"column":2538}}],"sources":{"node_modules/@react-three/drei/materials/MeshRefractionMaterial.js":"import * as THREE from 'three';\nimport { shaderMaterial } from '../core/shaderMaterial.js';\nimport { shaderStructs, shaderIntersectFunction, MeshBVHUniformStruct } from 'three-mesh-bvh';\n\n// Author: N8Programs\nconst MeshRefractionMaterial = shaderMaterial({\n  envMap: null,\n  bounces: 3,\n  ior: 2.4,\n  correctMips: true,\n  aberrationStrength: 0.01,\n  fresnel: 0,\n  bvh: new MeshBVHUniformStruct(),\n  color: new THREE.Color('white'),\n  resolution: new THREE.Vector2(),\n  viewMatrixInverse: new THREE.Matrix4(),\n  projectionMatrixInverse: new THREE.Matrix4()\n},\n/*glsl*/\n`\n  uniform mat4 viewMatrixInverse;\n\n  varying vec3 vWorldPosition;  \n  varying vec3 vNormal;\n  varying mat4 vModelMatrixInverse;\n\n  #ifdef USE_INSTANCING_COLOR\n    varying vec3 vInstanceColor;\n  #endif\n\n  void main() {        \n    vec4 transformedNormal = vec4(normal, 0.0);\n    vec4 transformedPosition = vec4(position, 1.0);\n    #ifdef USE_INSTANCING\n      transformedNormal = instanceMatrix * transformedNormal;\n      transformedPosition = instanceMatrix * transformedPosition;\n    #endif\n\n    #ifdef USE_INSTANCING\n      vModelMatrixInverse = inverse(modelMatrix * instanceMatrix);\n    #else\n      vModelMatrixInverse = inverse(modelMatrix);\n    #endif\n\n    #ifdef USE_INSTANCING_COLOR\n      vInstanceColor = instanceColor.rgb;\n    #endif\n\n    vWorldPosition = (modelMatrix * transformedPosition).xyz;\n    vNormal = normalize((viewMatrixInverse * vec4(normalMatrix * transformedNormal.xyz, 0.0)).xyz);\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * transformedPosition;\n  }`,\n/*glsl*/\n`\n  #define ENVMAP_TYPE_CUBE_UV\n  precision highp isampler2D;\n  precision highp usampler2D;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n  varying mat4 vModelMatrixInverse;\n\n  #ifdef USE_INSTANCING_COLOR\n    varying vec3 vInstanceColor;\n  #endif\n    \n  #ifdef ENVMAP_TYPE_CUBEM\n    uniform samplerCube envMap;\n  #else\n    uniform sampler2D envMap;\n  #endif\n    \n  uniform float bounces;\n  ${shaderStructs}\n  ${shaderIntersectFunction}\n  uniform BVH bvh;\n  uniform float ior;\n  uniform bool correctMips;\n  uniform vec2 resolution;\n  uniform float fresnel;\n  uniform mat4 modelMatrix;\n  uniform mat4 projectionMatrixInverse;\n  uniform mat4 viewMatrixInverse;\n  uniform float aberrationStrength;\n  uniform vec3 color;\n  \n  float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n    return pow( 1.0 + dot( viewDirection, worldNormal), 10.0 );\n  }\n    \n  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 normal, float ior, mat4 modelMatrixInverse) {\n    vec3 rayOrigin = ro;\n    vec3 rayDirection = rd;\n    rayDirection = refract(rayDirection, normal, 1.0 / ior);\n    rayOrigin = vWorldPosition + rayDirection * 0.001;\n    rayOrigin = (modelMatrixInverse * vec4(rayOrigin, 1.0)).xyz;\n    rayDirection = normalize((modelMatrixInverse * vec4(rayDirection, 0.0)).xyz);\n    for(float i = 0.0; i < bounces; i++) {\n      uvec4 faceIndices = uvec4( 0u );\n      vec3 faceNormal = vec3( 0.0, 0.0, 1.0 );\n      vec3 barycoord = vec3( 0.0 );\n      float side = 1.0;\n      float dist = 0.0;\n      bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist );\n      vec3 hitPos = rayOrigin + rayDirection * max(dist - 0.001, 0.0);      \n      vec3 tempDir = refract(rayDirection, faceNormal, ior);\n      if (length(tempDir) != 0.0) {\n        rayDirection = tempDir;\n        break;\n      }\n      rayDirection = reflect(rayDirection, faceNormal);\n      rayOrigin = hitPos + rayDirection * 0.01;\n    }\n    rayDirection = normalize((modelMatrix * vec4(rayDirection, 0.0)).xyz);\n    return rayDirection;\n  }\n    \n  #include <common>\n  #include <cube_uv_reflection_fragment>\n    \n  #ifdef ENVMAP_TYPE_CUBEM\n    vec4 textureGradient(samplerCube envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n      return textureGrad(envMap, rayDirection, dFdx(correctMips ? directionCamPerfect: rayDirection), dFdy(correctMips ? directionCamPerfect: rayDirection));\n    }\n  #else\n    vec4 textureGradient(sampler2D envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n      vec2 uvv = equirectUv( rayDirection );\n      vec2 smoothUv = equirectUv( directionCamPerfect );\n      return textureGrad(envMap, uvv, dFdx(correctMips ? smoothUv : uvv), dFdy(correctMips ? smoothUv : uvv));\n    }\n  #endif\n  \n  void main() {\n    vec2 uv = gl_FragCoord.xy / resolution;\n    vec3 directionCamPerfect = (projectionMatrixInverse * vec4(uv * 2.0 - 1.0, 0.0, 1.0)).xyz;\n    directionCamPerfect = (viewMatrixInverse * vec4(directionCamPerfect, 0.0)).xyz;\n    directionCamPerfect = normalize(directionCamPerfect);\n    vec3 normal = vNormal;\n    vec3 rayOrigin = cameraPosition;\n    vec3 rayDirection = normalize(vWorldPosition - cameraPosition);\n    vec3 finalColor;\n    #ifdef CHROMATIC_ABERRATIONS\n      vec3 rayDirectionG = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\n      #ifdef FAST_CHROMA \n        vec3 rayDirectionR = normalize(rayDirectionG + 1.0 * vec3(aberrationStrength / 2.0));\n        vec3 rayDirectionB = normalize(rayDirectionG - 1.0 * vec3(aberrationStrength / 2.0));\n      #else\n        vec3 rayDirectionR = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 - aberrationStrength), 1.0), vModelMatrixInverse);\n        vec3 rayDirectionB = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 + aberrationStrength), 1.0), vModelMatrixInverse);\n      #endif\n      float finalColorR = textureGradient(envMap, rayDirectionR, directionCamPerfect).r;\n      float finalColorG = textureGradient(envMap, rayDirectionG, directionCamPerfect).g;\n      float finalColorB = textureGradient(envMap, rayDirectionB, directionCamPerfect).b;\n      finalColor = vec3(finalColorR, finalColorG, finalColorB);\n    #else\n      rayDirection = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\n      finalColor = textureGradient(envMap, rayDirection, directionCamPerfect).rgb;    \n    #endif\n\n    finalColor *= color;\n    #ifdef USE_INSTANCING_COLOR\n      finalColor *= vInstanceColor;\n    #endif\n\n    vec3 viewDirection = normalize(vWorldPosition - cameraPosition);\n    float nFresnel = fresnelFunc(viewDirection, normal) * fresnel;\n    gl_FragColor = vec4(mix(finalColor, vec3(1.0), nFresnel), 1.0);      \n    #include <tonemapping_fragment>\n    #include <encodings_fragment>\n  }`);\n\nexport { MeshRefractionMaterial };\n"},"lineCount":null}},"error":null,"hash":"39c45af7c386810e9c731b24fe5d8fd5","cacheData":{"env":{}}}