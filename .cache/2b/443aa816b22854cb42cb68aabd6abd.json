{"id":"h97h","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1724625312988},{"name":"three","loc":{"line":1,"column":24,"index":24},"parent":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/shaders/FXAAShader.js","resolved":"/home/moh/Desktop/MYPortfolio/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.FXAAShader=void 0;var e=require(\"three\");const a=exports.FXAAShader={uniforms:{tDiffuse:{value:null},resolution:{value:new e.Vector2(1/1024,1/512)}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"\\tvUv = uv;\",\"\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"precision highp float;\",\"\",\"uniform sampler2D tDiffuse;\",\"\",\"uniform vec2 resolution;\",\"\",\"varying vec2 vUv;\",\"\",\"// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\",\"\",\"//----------------------------------------------------------------------------------\",\"// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag\",\"// SDK Version: v3.00\",\"// Email:       gameworks@nvidia.com\",\"// Site:        http://developer.nvidia.com/\",\"//\",\"// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\",\"//\",\"// Redistribution and use in source and binary forms, with or without\",\"// modification, are permitted provided that the following conditions\",\"// are met:\",\"//  * Redistributions of source code must retain the above copyright\",\"//    notice, this list of conditions and the following disclaimer.\",\"//  * Redistributions in binary form must reproduce the above copyright\",\"//    notice, this list of conditions and the following disclaimer in the\",\"//    documentation and/or other materials provided with the distribution.\",\"//  * Neither the name of NVIDIA CORPORATION nor the names of its\",\"//    contributors may be used to endorse or promote products derived\",\"//    from this software without specific prior written permission.\",\"//\",\"// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\",\"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\",\"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\",\"// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\",\"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\",\"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\",\"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\",\"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\",\"// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\",\"// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\",\"// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\",\"//\",\"//----------------------------------------------------------------------------------\",\"\",\"#define FXAA_PC 1\",\"#define FXAA_GLSL_100 1\",\"#define FXAA_QUALITY_PRESET 12\",\"\",\"#define FXAA_GREEN_AS_LUMA 1\",\"\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_PC_CONSOLE\",\"    //\",\"    // The console algorithm for PC is included\",\"    // for developers targeting really low spec machines.\",\"    // Likely better to just run FXAA_PC, and use a really low preset.\",\"    //\",\"    #define FXAA_PC_CONSOLE 0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_GLSL_120\",\"    #define FXAA_GLSL_120 0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_GLSL_130\",\"    #define FXAA_GLSL_130 0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_HLSL_3\",\"    #define FXAA_HLSL_3 0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_HLSL_4\",\"    #define FXAA_HLSL_4 0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_HLSL_5\",\"    #define FXAA_HLSL_5 0\",\"#endif\",\"/*==========================================================================*/\",\"#ifndef FXAA_GREEN_AS_LUMA\",\"    //\",\"    // For those using non-linear color,\",\"    // and either not able to get luma in alpha, or not wanting to,\",\"    // this enables FXAA to run using green as a proxy for luma.\",\"    // So with this enabled, no need to pack luma in alpha.\",\"    //\",\"    // This will turn off AA on anything which lacks some amount of green.\",\"    // Pure red and blue or combination of only R and B, will get no AA.\",\"    //\",\"    // Might want to lower the settings for both,\",\"    //    fxaaConsoleEdgeThresholdMin\",\"    //    fxaaQualityEdgeThresholdMin\",\"    // In order to insure AA does not get turned off on colors\",\"    // which contain a minor amount of green.\",\"    //\",\"    // 1 = On.\",\"    // 0 = Off.\",\"    //\",\"    #define FXAA_GREEN_AS_LUMA 0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_EARLY_EXIT\",\"    //\",\"    // Controls algorithm's early exit path.\",\"    // On PS3 turning this ON adds 2 cycles to the shader.\",\"    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\",\"    // Turning this off on console will result in a more blurry image.\",\"    // So this defaults to on.\",\"    //\",\"    // 1 = On.\",\"    // 0 = Off.\",\"    //\",\"    #define FXAA_EARLY_EXIT 1\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_DISCARD\",\"    //\",\"    // Only valid for PC OpenGL currently.\",\"    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\",\"    //\",\"    // 1 = Use discard on pixels which don't need AA.\",\"    //     For APIs which enable concurrent TEX+ROP from same surface.\",\"    // 0 = Return unchanged color on pixels which don't need AA.\",\"    //\",\"    #define FXAA_DISCARD 0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_FAST_PIXEL_OFFSET\",\"    //\",\"    // Used for GLSL 120 only.\",\"    //\",\"    // 1 = GL API supports fast pixel offsets\",\"    // 0 = do not use fast pixel offsets\",\"    //\",\"    #ifdef GL_EXT_gpu_shader4\",\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\"    #endif\",\"    #ifdef GL_NV_gpu_shader5\",\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\"    #endif\",\"    #ifdef GL_ARB_gpu_shader5\",\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\"    #endif\",\"    #ifndef FXAA_FAST_PIXEL_OFFSET\",\"        #define FXAA_FAST_PIXEL_OFFSET 0\",\"    #endif\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#ifndef FXAA_GATHER4_ALPHA\",\"    //\",\"    // 1 = API supports gather4 on alpha channel.\",\"    // 0 = API does not support gather4 on alpha channel.\",\"    //\",\"    #if (FXAA_HLSL_5 == 1)\",\"        #define FXAA_GATHER4_ALPHA 1\",\"    #endif\",\"    #ifdef GL_ARB_gpu_shader5\",\"        #define FXAA_GATHER4_ALPHA 1\",\"    #endif\",\"    #ifdef GL_NV_gpu_shader5\",\"        #define FXAA_GATHER4_ALPHA 1\",\"    #endif\",\"    #ifndef FXAA_GATHER4_ALPHA\",\"        #define FXAA_GATHER4_ALPHA 0\",\"    #endif\",\"#endif\",\"\",\"\",\"/*============================================================================\",\"                        FXAA QUALITY - TUNING KNOBS\",\"------------------------------------------------------------------------------\",\"NOTE the other tuning knobs are now in the shader function inputs!\",\"============================================================================*/\",\"#ifndef FXAA_QUALITY_PRESET\",\"    //\",\"    // Choose the quality preset.\",\"    // This needs to be compiled into the shader as it effects code.\",\"    // Best option to include multiple presets is to\",\"    // in each shader define the preset, then include this file.\",\"    //\",\"    // OPTIONS\",\"    // -----------------------------------------------------------------------\",\"    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\",\"    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\",\"    // 39       - no dither, very expensive\",\"    //\",\"    // NOTES\",\"    // -----------------------------------------------------------------------\",\"    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\",\"    // 13 = about same speed as FXAA 3.9 and better than 12\",\"    // 23 = closest to FXAA 3.9 visually and performance wise\",\"    //  _ = the lowest digit is directly related to performance\",\"    // _  = the highest digit is directly related to style\",\"    //\",\"    #define FXAA_QUALITY_PRESET 12\",\"#endif\",\"\",\"\",\"/*============================================================================\",\"\",\"                           FXAA QUALITY - PRESETS\",\"\",\"============================================================================*/\",\"\",\"/*============================================================================\",\"                     FXAA QUALITY - MEDIUM DITHER PRESETS\",\"============================================================================*/\",\"#if (FXAA_QUALITY_PRESET == 10)\",\"    #define FXAA_QUALITY_PS 3\",\"    #define FXAA_QUALITY_P0 1.5\",\"    #define FXAA_QUALITY_P1 3.0\",\"    #define FXAA_QUALITY_P2 12.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 11)\",\"    #define FXAA_QUALITY_PS 4\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 3.0\",\"    #define FXAA_QUALITY_P3 12.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 12)\",\"    #define FXAA_QUALITY_PS 5\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 4.0\",\"    #define FXAA_QUALITY_P4 12.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 13)\",\"    #define FXAA_QUALITY_PS 6\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 4.0\",\"    #define FXAA_QUALITY_P5 12.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 14)\",\"    #define FXAA_QUALITY_PS 7\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 2.0\",\"    #define FXAA_QUALITY_P5 4.0\",\"    #define FXAA_QUALITY_P6 12.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 15)\",\"    #define FXAA_QUALITY_PS 8\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 2.0\",\"    #define FXAA_QUALITY_P5 2.0\",\"    #define FXAA_QUALITY_P6 4.0\",\"    #define FXAA_QUALITY_P7 12.0\",\"#endif\",\"\",\"/*============================================================================\",\"                     FXAA QUALITY - LOW DITHER PRESETS\",\"============================================================================*/\",\"#if (FXAA_QUALITY_PRESET == 20)\",\"    #define FXAA_QUALITY_PS 3\",\"    #define FXAA_QUALITY_P0 1.5\",\"    #define FXAA_QUALITY_P1 2.0\",\"    #define FXAA_QUALITY_P2 8.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 21)\",\"    #define FXAA_QUALITY_PS 4\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 8.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 22)\",\"    #define FXAA_QUALITY_PS 5\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 8.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 23)\",\"    #define FXAA_QUALITY_PS 6\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 2.0\",\"    #define FXAA_QUALITY_P5 8.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 24)\",\"    #define FXAA_QUALITY_PS 7\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 2.0\",\"    #define FXAA_QUALITY_P5 3.0\",\"    #define FXAA_QUALITY_P6 8.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 25)\",\"    #define FXAA_QUALITY_PS 8\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 2.0\",\"    #define FXAA_QUALITY_P5 2.0\",\"    #define FXAA_QUALITY_P6 4.0\",\"    #define FXAA_QUALITY_P7 8.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 26)\",\"    #define FXAA_QUALITY_PS 9\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 2.0\",\"    #define FXAA_QUALITY_P5 2.0\",\"    #define FXAA_QUALITY_P6 2.0\",\"    #define FXAA_QUALITY_P7 4.0\",\"    #define FXAA_QUALITY_P8 8.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 27)\",\"    #define FXAA_QUALITY_PS 10\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 2.0\",\"    #define FXAA_QUALITY_P5 2.0\",\"    #define FXAA_QUALITY_P6 2.0\",\"    #define FXAA_QUALITY_P7 2.0\",\"    #define FXAA_QUALITY_P8 4.0\",\"    #define FXAA_QUALITY_P9 8.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 28)\",\"    #define FXAA_QUALITY_PS 11\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 2.0\",\"    #define FXAA_QUALITY_P5 2.0\",\"    #define FXAA_QUALITY_P6 2.0\",\"    #define FXAA_QUALITY_P7 2.0\",\"    #define FXAA_QUALITY_P8 2.0\",\"    #define FXAA_QUALITY_P9 4.0\",\"    #define FXAA_QUALITY_P10 8.0\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_QUALITY_PRESET == 29)\",\"    #define FXAA_QUALITY_PS 12\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.5\",\"    #define FXAA_QUALITY_P2 2.0\",\"    #define FXAA_QUALITY_P3 2.0\",\"    #define FXAA_QUALITY_P4 2.0\",\"    #define FXAA_QUALITY_P5 2.0\",\"    #define FXAA_QUALITY_P6 2.0\",\"    #define FXAA_QUALITY_P7 2.0\",\"    #define FXAA_QUALITY_P8 2.0\",\"    #define FXAA_QUALITY_P9 2.0\",\"    #define FXAA_QUALITY_P10 4.0\",\"    #define FXAA_QUALITY_P11 8.0\",\"#endif\",\"\",\"/*============================================================================\",\"                     FXAA QUALITY - EXTREME QUALITY\",\"============================================================================*/\",\"#if (FXAA_QUALITY_PRESET == 39)\",\"    #define FXAA_QUALITY_PS 12\",\"    #define FXAA_QUALITY_P0 1.0\",\"    #define FXAA_QUALITY_P1 1.0\",\"    #define FXAA_QUALITY_P2 1.0\",\"    #define FXAA_QUALITY_P3 1.0\",\"    #define FXAA_QUALITY_P4 1.0\",\"    #define FXAA_QUALITY_P5 1.5\",\"    #define FXAA_QUALITY_P6 2.0\",\"    #define FXAA_QUALITY_P7 2.0\",\"    #define FXAA_QUALITY_P8 2.0\",\"    #define FXAA_QUALITY_P9 2.0\",\"    #define FXAA_QUALITY_P10 4.0\",\"    #define FXAA_QUALITY_P11 8.0\",\"#endif\",\"\",\"\",\"\",\"/*============================================================================\",\"\",\"                                API PORTING\",\"\",\"============================================================================*/\",\"#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\",\"    #define FxaaBool bool\",\"    #define FxaaDiscard discard\",\"    #define FxaaFloat float\",\"    #define FxaaFloat2 vec2\",\"    #define FxaaFloat3 vec3\",\"    #define FxaaFloat4 vec4\",\"    #define FxaaHalf float\",\"    #define FxaaHalf2 vec2\",\"    #define FxaaHalf3 vec3\",\"    #define FxaaHalf4 vec4\",\"    #define FxaaInt2 ivec2\",\"    #define FxaaSat(x) clamp(x, 0.0, 1.0)\",\"    #define FxaaTex sampler2D\",\"#else\",\"    #define FxaaBool bool\",\"    #define FxaaDiscard clip(-1)\",\"    #define FxaaFloat float\",\"    #define FxaaFloat2 float2\",\"    #define FxaaFloat3 float3\",\"    #define FxaaFloat4 float4\",\"    #define FxaaHalf half\",\"    #define FxaaHalf2 half2\",\"    #define FxaaHalf3 half3\",\"    #define FxaaHalf4 half4\",\"    #define FxaaSat(x) saturate(x)\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_GLSL_100 == 1)\",\"  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\",\"  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_GLSL_120 == 1)\",\"    // Requires,\",\"    //  #version 120\",\"    // And at least,\",\"    //  #extension GL_EXT_gpu_shader4 : enable\",\"    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\",\"    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\",\"    #if (FXAA_FAST_PIXEL_OFFSET == 1)\",\"        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\",\"    #else\",\"        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\",\"    #endif\",\"    #if (FXAA_GATHER4_ALPHA == 1)\",\"        // use #extension GL_ARB_gpu_shader5 : enable\",\"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\"    #endif\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_GLSL_130 == 1)\",'    // Requires \"#version 130\" or better',\"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\",\"    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\",\"    #if (FXAA_GATHER4_ALPHA == 1)\",\"        // use #extension GL_ARB_gpu_shader5 : enable\",\"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\"    #endif\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_HLSL_3 == 1)\",\"    #define FxaaInt2 float2\",\"    #define FxaaTex sampler2D\",\"    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\",\"    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_HLSL_4 == 1)\",\"    #define FxaaInt2 int2\",\"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\"#endif\",\"/*--------------------------------------------------------------------------*/\",\"#if (FXAA_HLSL_5 == 1)\",\"    #define FxaaInt2 int2\",\"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\"    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\",\"    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\",\"    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\",\"    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\",\"#endif\",\"\",\"\",\"/*============================================================================\",\"                   GREEN AS LUMA OPTION SUPPORT FUNCTION\",\"============================================================================*/\",\"#if (FXAA_GREEN_AS_LUMA == 0)\",\"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\",\"#else\",\"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\",\"#endif\",\"\",\"\",\"\",\"\",\"/*============================================================================\",\"\",\"                             FXAA3 QUALITY - PC\",\"\",\"============================================================================*/\",\"#if (FXAA_PC == 1)\",\"/*--------------------------------------------------------------------------*/\",\"FxaaFloat4 FxaaPixelShader(\",\"    //\",\"    // Use noperspective interpolation here (turn off perspective interpolation).\",\"    // {xy} = center of pixel\",\"    FxaaFloat2 pos,\",\"    //\",\"    // Used only for FXAA Console, and not used on the 360 version.\",\"    // Use noperspective interpolation here (turn off perspective interpolation).\",\"    // {xy_} = upper left of pixel\",\"    // {_zw} = lower right of pixel\",\"    FxaaFloat4 fxaaConsolePosPos,\",\"    //\",\"    // Input color texture.\",\"    // {rgb_} = color in linear or perceptual color space\",\"    // if (FXAA_GREEN_AS_LUMA == 0)\",\"    //     {__a} = luma in perceptual color space (not linear)\",\"    FxaaTex tex,\",\"    //\",\"    // Only used on the optimized 360 version of FXAA Console.\",'    // For everything but 360, just use the same input here as for \"tex\".',\"    // For 360, same texture, just alias with a 2nd sampler.\",\"    // This sampler needs to have an exponent bias of -1.\",\"    FxaaTex fxaaConsole360TexExpBiasNegOne,\",\"    //\",\"    // Only used on the optimized 360 version of FXAA Console.\",'    // For everything but 360, just use the same input here as for \"tex\".',\"    // For 360, same texture, just alias with a 3nd sampler.\",\"    // This sampler needs to have an exponent bias of -2.\",\"    FxaaTex fxaaConsole360TexExpBiasNegTwo,\",\"    //\",\"    // Only used on FXAA Quality.\",\"    // This must be from a constant/uniform.\",\"    // {x_} = 1.0/screenWidthInPixels\",\"    // {_y} = 1.0/screenHeightInPixels\",\"    FxaaFloat2 fxaaQualityRcpFrame,\",\"    //\",\"    // Only used on FXAA Console.\",\"    // This must be from a constant/uniform.\",\"    // This effects sub-pixel AA quality and inversely sharpness.\",\"    //   Where N ranges between,\",\"    //     N = 0.50 (default)\",\"    //     N = 0.33 (sharper)\",\"    // {x__} = -N/screenWidthInPixels\",\"    // {_y_} = -N/screenHeightInPixels\",\"    // {_z_} =  N/screenWidthInPixels\",\"    // {__w} =  N/screenHeightInPixels\",\"    FxaaFloat4 fxaaConsoleRcpFrameOpt,\",\"    //\",\"    // Only used on FXAA Console.\",\"    // Not used on 360, but used on PS3 and PC.\",\"    // This must be from a constant/uniform.\",\"    // {x__} = -2.0/screenWidthInPixels\",\"    // {_y_} = -2.0/screenHeightInPixels\",\"    // {_z_} =  2.0/screenWidthInPixels\",\"    // {__w} =  2.0/screenHeightInPixels\",\"    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\",\"    //\",\"    // Only used on FXAA Console.\",\"    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\",\"    // This must be from a constant/uniform.\",\"    // {x__} =  8.0/screenWidthInPixels\",\"    // {_y_} =  8.0/screenHeightInPixels\",\"    // {_z_} = -4.0/screenWidthInPixels\",\"    // {__w} = -4.0/screenHeightInPixels\",\"    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\",\"    //\",\"    // Only used on FXAA Quality.\",\"    // This used to be the FXAA_QUALITY_SUBPIX define.\",\"    // It is here now to allow easier tuning.\",\"    // Choose the amount of sub-pixel aliasing removal.\",\"    // This can effect sharpness.\",\"    //   1.00 - upper limit (softer)\",\"    //   0.75 - default amount of filtering\",\"    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\",\"    //   0.25 - almost off\",\"    //   0.00 - completely off\",\"    FxaaFloat fxaaQualitySubpix,\",\"    //\",\"    // Only used on FXAA Quality.\",\"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\",\"    // It is here now to allow easier tuning.\",\"    // The minimum amount of local contrast required to apply algorithm.\",\"    //   0.333 - too little (faster)\",\"    //   0.250 - low quality\",\"    //   0.166 - default\",\"    //   0.125 - high quality\",\"    //   0.063 - overkill (slower)\",\"    FxaaFloat fxaaQualityEdgeThreshold,\",\"    //\",\"    // Only used on FXAA Quality.\",\"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\",\"    // It is here now to allow easier tuning.\",\"    // Trims the algorithm from processing darks.\",\"    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\",\"    //   0.0625 - high quality (faster)\",\"    //   0.0312 - visible limit (slower)\",\"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\"    //   Likely want to set this to zero.\",\"    //   As colors that are mostly not-green\",\"    //   will appear very dark in the green channel!\",\"    //   Tune by looking at mostly non-green content,\",\"    //   then start at zero and increase until aliasing is a problem.\",\"    FxaaFloat fxaaQualityEdgeThresholdMin,\",\"    //\",\"    // Only used on FXAA Console.\",\"    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\",\"    // It is here now to allow easier tuning.\",\"    // This does not effect PS3, as this needs to be compiled in.\",\"    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\",\"    //   Due to the PS3 being ALU bound,\",\"    //   there are only three safe values here: 2 and 4 and 8.\",\"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\"    // For all other platforms can be a non-power of two.\",\"    //   8.0 is sharper (default!!!)\",\"    //   4.0 is softer\",\"    //   2.0 is really soft (good only for vector graphics inputs)\",\"    FxaaFloat fxaaConsoleEdgeSharpness,\",\"    //\",\"    // Only used on FXAA Console.\",\"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\",\"    // It is here now to allow easier tuning.\",\"    // This does not effect PS3, as this needs to be compiled in.\",\"    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\",\"    //   Due to the PS3 being ALU bound,\",\"    //   there are only two safe values here: 1/4 and 1/8.\",\"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\"    // The console setting has a different mapping than the quality setting.\",\"    // Other platforms can use other values.\",\"    //   0.125 leaves less aliasing, but is softer (default!!!)\",\"    //   0.25 leaves more aliasing, and is sharper\",\"    FxaaFloat fxaaConsoleEdgeThreshold,\",\"    //\",\"    // Only used on FXAA Console.\",\"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\",\"    // It is here now to allow easier tuning.\",\"    // Trims the algorithm from processing darks.\",\"    // The console setting has a different mapping than the quality setting.\",\"    // This only applies when FXAA_EARLY_EXIT is 1.\",\"    // This does not apply to PS3,\",\"    // PS3 was simplified to avoid more shader instructions.\",\"    //   0.06 - faster but more aliasing in darks\",\"    //   0.05 - default\",\"    //   0.04 - slower and less aliasing in darks\",\"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\"    //   Likely want to set this to zero.\",\"    //   As colors that are mostly not-green\",\"    //   will appear very dark in the green channel!\",\"    //   Tune by looking at mostly non-green content,\",\"    //   then start at zero and increase until aliasing is a problem.\",\"    FxaaFloat fxaaConsoleEdgeThresholdMin,\",\"    //\",\"    // Extra constants for 360 FXAA Console only.\",\"    // Use zeros or anything else for other platforms.\",\"    // These must be in physical constant registers and NOT immediates.\",\"    // Immediates will result in compiler un-optimizing.\",\"    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\",\"    FxaaFloat4 fxaaConsole360ConstDir\",\") {\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat2 posM;\",\"    posM.x = pos.x;\",\"    posM.y = pos.y;\",\"    #if (FXAA_GATHER4_ALPHA == 1)\",\"        #if (FXAA_DISCARD == 0)\",\"            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\"            #if (FXAA_GREEN_AS_LUMA == 0)\",\"                #define lumaM rgbyM.w\",\"            #else\",\"                #define lumaM rgbyM.y\",\"            #endif\",\"        #endif\",\"        #if (FXAA_GREEN_AS_LUMA == 0)\",\"            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\",\"            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\",\"        #else\",\"            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\",\"            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\",\"        #endif\",\"        #if (FXAA_DISCARD == 1)\",\"            #define lumaM luma4A.w\",\"        #endif\",\"        #define lumaE luma4A.z\",\"        #define lumaS luma4A.x\",\"        #define lumaSE luma4A.y\",\"        #define lumaNW luma4B.w\",\"        #define lumaN luma4B.z\",\"        #define lumaW luma4B.x\",\"    #else\",\"        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\"        #if (FXAA_GREEN_AS_LUMA == 0)\",\"            #define lumaM rgbyM.w\",\"        #else\",\"            #define lumaM rgbyM.y\",\"        #endif\",\"        #if (FXAA_GLSL_100 == 1)\",\"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\",\"        #else\",\"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\",\"        #endif\",\"    #endif\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat maxSM = max(lumaS, lumaM);\",\"    FxaaFloat minSM = min(lumaS, lumaM);\",\"    FxaaFloat maxESM = max(lumaE, maxSM);\",\"    FxaaFloat minESM = min(lumaE, minSM);\",\"    FxaaFloat maxWN = max(lumaN, lumaW);\",\"    FxaaFloat minWN = min(lumaN, lumaW);\",\"    FxaaFloat rangeMax = max(maxWN, maxESM);\",\"    FxaaFloat rangeMin = min(minWN, minESM);\",\"    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\",\"    FxaaFloat range = rangeMax - rangeMin;\",\"    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\",\"    FxaaBool earlyExit = range < rangeMaxClamped;\",\"/*--------------------------------------------------------------------------*/\",\"    if(earlyExit)\",\"        #if (FXAA_DISCARD == 1)\",\"            FxaaDiscard;\",\"        #else\",\"            return rgbyM;\",\"        #endif\",\"/*--------------------------------------------------------------------------*/\",\"    #if (FXAA_GATHER4_ALPHA == 0)\",\"        #if (FXAA_GLSL_100 == 1)\",\"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\",\"        #else\",\"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\",\"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\"        #endif\",\"    #else\",\"        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\",\"        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\"    #endif\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat lumaNS = lumaN + lumaS;\",\"    FxaaFloat lumaWE = lumaW + lumaE;\",\"    FxaaFloat subpixRcpRange = 1.0/range;\",\"    FxaaFloat subpixNSWE = lumaNS + lumaWE;\",\"    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\",\"    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat lumaNESE = lumaNE + lumaSE;\",\"    FxaaFloat lumaNWNE = lumaNW + lumaNE;\",\"    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\",\"    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat lumaNWSW = lumaNW + lumaSW;\",\"    FxaaFloat lumaSWSE = lumaSW + lumaSE;\",\"    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\",\"    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\",\"    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\",\"    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\",\"    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\",\"    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\",\"    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\",\"    FxaaBool horzSpan = edgeHorz >= edgeVert;\",\"    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\",\"/*--------------------------------------------------------------------------*/\",\"    if(!horzSpan) lumaN = lumaW;\",\"    if(!horzSpan) lumaS = lumaE;\",\"    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\",\"    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat gradientN = lumaN - lumaM;\",\"    FxaaFloat gradientS = lumaS - lumaM;\",\"    FxaaFloat lumaNN = lumaN + lumaM;\",\"    FxaaFloat lumaSS = lumaS + lumaM;\",\"    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\",\"    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\",\"    if(pairN) lengthSign = -lengthSign;\",\"    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat2 posB;\",\"    posB.x = posM.x;\",\"    posB.y = posM.y;\",\"    FxaaFloat2 offNP;\",\"    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\",\"    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\",\"    if(!horzSpan) posB.x += lengthSign * 0.5;\",\"    if( horzSpan) posB.y += lengthSign * 0.5;\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat2 posN;\",\"    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\",\"    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\",\"    FxaaFloat2 posP;\",\"    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\",\"    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\",\"    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\",\"    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\",\"    FxaaFloat subpixE = subpixC * subpixC;\",\"    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\",\"/*--------------------------------------------------------------------------*/\",\"    if(!pairN) lumaNN = lumaSS;\",\"    FxaaFloat gradientScaled = gradient * 1.0/4.0;\",\"    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\",\"    FxaaFloat subpixF = subpixD * subpixE;\",\"    FxaaBool lumaMLTZero = lumaMM < 0.0;\",\"/*--------------------------------------------------------------------------*/\",\"    lumaEndN -= lumaNN * 0.5;\",\"    lumaEndP -= lumaNN * 0.5;\",\"    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\",\"    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\",\"    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\",\"    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\",\"    FxaaBool doneNP = (!doneN) || (!doneP);\",\"    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\",\"    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\",\"/*--------------------------------------------------------------------------*/\",\"    if(doneNP) {\",\"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"        doneN = abs(lumaEndN) >= gradientScaled;\",\"        doneP = abs(lumaEndP) >= gradientScaled;\",\"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\",\"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\",\"        doneNP = (!doneN) || (!doneP);\",\"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\",\"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\",\"/*--------------------------------------------------------------------------*/\",\"        #if (FXAA_QUALITY_PS > 3)\",\"        if(doneNP) {\",\"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"            doneN = abs(lumaEndN) >= gradientScaled;\",\"            doneP = abs(lumaEndP) >= gradientScaled;\",\"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\",\"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\",\"            doneNP = (!doneN) || (!doneP);\",\"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\",\"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\",\"/*--------------------------------------------------------------------------*/\",\"            #if (FXAA_QUALITY_PS > 4)\",\"            if(doneNP) {\",\"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"                doneN = abs(lumaEndN) >= gradientScaled;\",\"                doneP = abs(lumaEndP) >= gradientScaled;\",\"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\",\"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\",\"                doneNP = (!doneN) || (!doneP);\",\"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\",\"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\",\"/*--------------------------------------------------------------------------*/\",\"                #if (FXAA_QUALITY_PS > 5)\",\"                if(doneNP) {\",\"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"                    doneN = abs(lumaEndN) >= gradientScaled;\",\"                    doneP = abs(lumaEndP) >= gradientScaled;\",\"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\",\"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\",\"                    doneNP = (!doneN) || (!doneP);\",\"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\",\"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\",\"/*--------------------------------------------------------------------------*/\",\"                    #if (FXAA_QUALITY_PS > 6)\",\"                    if(doneNP) {\",\"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"                        doneN = abs(lumaEndN) >= gradientScaled;\",\"                        doneP = abs(lumaEndP) >= gradientScaled;\",\"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\",\"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\",\"                        doneNP = (!doneN) || (!doneP);\",\"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\",\"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\",\"/*--------------------------------------------------------------------------*/\",\"                        #if (FXAA_QUALITY_PS > 7)\",\"                        if(doneNP) {\",\"                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"                            doneN = abs(lumaEndN) >= gradientScaled;\",\"                            doneP = abs(lumaEndP) >= gradientScaled;\",\"                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\",\"                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\",\"                            doneNP = (!doneN) || (!doneP);\",\"                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\",\"                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\",\"/*--------------------------------------------------------------------------*/\",\"    #if (FXAA_QUALITY_PS > 8)\",\"    if(doneNP) {\",\"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"        doneN = abs(lumaEndN) >= gradientScaled;\",\"        doneP = abs(lumaEndP) >= gradientScaled;\",\"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\",\"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\",\"        doneNP = (!doneN) || (!doneP);\",\"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\",\"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\",\"/*--------------------------------------------------------------------------*/\",\"        #if (FXAA_QUALITY_PS > 9)\",\"        if(doneNP) {\",\"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"            doneN = abs(lumaEndN) >= gradientScaled;\",\"            doneP = abs(lumaEndP) >= gradientScaled;\",\"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\",\"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\",\"            doneNP = (!doneN) || (!doneP);\",\"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\",\"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\",\"/*--------------------------------------------------------------------------*/\",\"            #if (FXAA_QUALITY_PS > 10)\",\"            if(doneNP) {\",\"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"                doneN = abs(lumaEndN) >= gradientScaled;\",\"                doneP = abs(lumaEndP) >= gradientScaled;\",\"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\",\"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\",\"                doneNP = (!doneN) || (!doneP);\",\"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\",\"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\",\"/*--------------------------------------------------------------------------*/\",\"                #if (FXAA_QUALITY_PS > 11)\",\"                if(doneNP) {\",\"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"                    doneN = abs(lumaEndN) >= gradientScaled;\",\"                    doneP = abs(lumaEndP) >= gradientScaled;\",\"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\",\"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\",\"                    doneNP = (!doneN) || (!doneP);\",\"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\",\"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\",\"/*--------------------------------------------------------------------------*/\",\"                    #if (FXAA_QUALITY_PS > 12)\",\"                    if(doneNP) {\",\"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\"                        doneN = abs(lumaEndN) >= gradientScaled;\",\"                        doneP = abs(lumaEndP) >= gradientScaled;\",\"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\",\"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\",\"                        doneNP = (!doneN) || (!doneP);\",\"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\",\"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\",\"/*--------------------------------------------------------------------------*/\",\"                    }\",\"                    #endif\",\"/*--------------------------------------------------------------------------*/\",\"                }\",\"                #endif\",\"/*--------------------------------------------------------------------------*/\",\"            }\",\"            #endif\",\"/*--------------------------------------------------------------------------*/\",\"        }\",\"        #endif\",\"/*--------------------------------------------------------------------------*/\",\"    }\",\"    #endif\",\"/*--------------------------------------------------------------------------*/\",\"                        }\",\"                        #endif\",\"/*--------------------------------------------------------------------------*/\",\"                    }\",\"                    #endif\",\"/*--------------------------------------------------------------------------*/\",\"                }\",\"                #endif\",\"/*--------------------------------------------------------------------------*/\",\"            }\",\"            #endif\",\"/*--------------------------------------------------------------------------*/\",\"        }\",\"        #endif\",\"/*--------------------------------------------------------------------------*/\",\"    }\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat dstN = posM.x - posN.x;\",\"    FxaaFloat dstP = posP.x - posM.x;\",\"    if(!horzSpan) dstN = posM.y - posN.y;\",\"    if(!horzSpan) dstP = posP.y - posM.y;\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\",\"    FxaaFloat spanLength = (dstP + dstN);\",\"    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\",\"    FxaaFloat spanLengthRcp = 1.0/spanLength;\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaBool directionN = dstN < dstP;\",\"    FxaaFloat dst = min(dstN, dstP);\",\"    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\",\"    FxaaFloat subpixG = subpixF * subpixF;\",\"    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\",\"    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\",\"/*--------------------------------------------------------------------------*/\",\"    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\",\"    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\",\"    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\",\"    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\",\"    #if (FXAA_DISCARD == 1)\",\"        return FxaaTexTop(tex, posM);\",\"    #else\",\"        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\",\"    #endif\",\"}\",\"/*==========================================================================*/\",\"#endif\",\"\",\"void main() {\",\"  gl_FragColor = FxaaPixelShader(\",\"    vUv,\",\"    vec4(0.0),\",\"    tDiffuse,\",\"    tDiffuse,\",\"    tDiffuse,\",\"    resolution,\",\"    vec4(0.0),\",\"    vec4(0.0),\",\"    vec4(0.0),\",\"    0.75,\",\"    0.166,\",\"    0.0833,\",\"    0.0,\",\"    0.0,\",\"    0.0,\",\"    vec4(0.0)\",\"  );\",\"\",\"  // TODO avoid querying texture twice for same texel\",\"  gl_FragColor.a = texture2D(tDiffuse, vUv).a;\",\"}\"].join(\"\\n\")};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":13}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":20}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":35}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":43}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":56}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":57}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":64}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":68}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":76}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":21,"column":1},"generated":{"line":1,"column":92}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"_three","original":{"line":1,"column":0},"generated":{"line":1,"column":98}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"require","original":{"line":1,"column":0},"generated":{"line":1,"column":100}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":108}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":10,"column":0},"generated":{"line":1,"column":117}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"FXAAShader","original":{"line":10,"column":6},"generated":{"line":1,"column":123}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"exports","original":{"line":10,"column":16},"generated":{"line":1,"column":125}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"FXAAShader","original":{"line":10,"column":16},"generated":{"line":1,"column":133}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":10,"column":19},"generated":{"line":1,"column":144}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"uniforms","original":{"line":11,"column":2},"generated":{"line":1,"column":145}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":11,"column":12},"generated":{"line":1,"column":154}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"tDiffuse","original":{"line":12,"column":4},"generated":{"line":1,"column":155}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":12,"column":14},"generated":{"line":1,"column":164}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"value","original":{"line":13,"column":6},"generated":{"line":1,"column":165}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":13,"column":13},"generated":{"line":1,"column":171}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"resolution","original":{"line":15,"column":4},"generated":{"line":1,"column":177}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":15,"column":16},"generated":{"line":1,"column":188}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"value","original":{"line":16,"column":6},"generated":{"line":1,"column":189}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":16,"column":13},"generated":{"line":1,"column":195}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"Vector2","original":{"line":16,"column":17},"generated":{"line":1,"column":199}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":16,"column":24},"generated":{"line":1,"column":201}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":16,"column":25},"generated":{"line":1,"column":209}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":16,"column":29},"generated":{"line":1,"column":211}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":16,"column":35},"generated":{"line":1,"column":216}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":16,"column":39},"generated":{"line":1,"column":218}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"vertexShader","original":{"line":19,"column":2},"generated":{"line":1,"column":225}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":19,"column":16},"generated":{"line":1,"column":238}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":19,"column":17},"generated":{"line":1,"column":239}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":19,"column":38},"generated":{"line":1,"column":259}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":19,"column":55},"generated":{"line":1,"column":275}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":19,"column":69},"generated":{"line":1,"column":289}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":19,"column":147},"generated":{"line":1,"column":367}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"join","original":{"line":19,"column":152},"generated":{"line":1,"column":372}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":19,"column":157},"generated":{"line":1,"column":377}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"fragmentShader","original":{"line":20,"column":2},"generated":{"line":1,"column":383}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18},"generated":{"line":1,"column":398}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19},"generated":{"line":1,"column":399}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45},"generated":{"line":1,"column":424}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49},"generated":{"line":1,"column":427}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":80},"generated":{"line":1,"column":457}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":84},"generated":{"line":1,"column":460}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":112},"generated":{"line":1,"column":487}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":116},"generated":{"line":1,"column":490}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":137},"generated":{"line":1,"column":510}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":141},"generated":{"line":1,"column":513}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":235},"generated":{"line":1,"column":606}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":239},"generated":{"line":1,"column":609}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":327},"generated":{"line":1,"column":696}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":394},"generated":{"line":1,"column":762}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":419},"generated":{"line":1,"column":786}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":459},"generated":{"line":1,"column":825}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":507},"generated":{"line":1,"column":872}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":513},"generated":{"line":1,"column":877}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":585},"generated":{"line":1,"column":948}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":591},"generated":{"line":1,"column":953}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":664},"generated":{"line":1,"column":1025}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":737},"generated":{"line":1,"column":1097}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":752},"generated":{"line":1,"column":1111}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":824},"generated":{"line":1,"column":1182}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":895},"generated":{"line":1,"column":1252}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":970},"generated":{"line":1,"column":1326}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1047},"generated":{"line":1,"column":1402}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1125},"generated":{"line":1,"column":1479}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1194},"generated":{"line":1,"column":1547}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1267},"generated":{"line":1,"column":1619}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1338},"generated":{"line":1,"column":1689}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1344},"generated":{"line":1,"column":1694}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1419},"generated":{"line":1,"column":1768}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1491},"generated":{"line":1,"column":1839}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1564},"generated":{"line":1,"column":1911}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1636},"generated":{"line":1,"column":1982}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1712},"generated":{"line":1,"column":2057}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1786},"generated":{"line":1,"column":2130}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1859},"generated":{"line":1,"column":2202}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":1933},"generated":{"line":1,"column":2275}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2000},"generated":{"line":1,"column":2341}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2076},"generated":{"line":1,"column":2416}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2151},"generated":{"line":1,"column":2490}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2157},"generated":{"line":1,"column":2495}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2245},"generated":{"line":1,"column":2582}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2249},"generated":{"line":1,"column":2585}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2270},"generated":{"line":1,"column":2605}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2297},"generated":{"line":1,"column":2631}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2331},"generated":{"line":1,"column":2664}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2335},"generated":{"line":1,"column":2667}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2367},"generated":{"line":1,"column":2698}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2371},"generated":{"line":1,"column":2701}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2453},"generated":{"line":1,"column":2782}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2480},"generated":{"line":1,"column":2808}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2490},"generated":{"line":1,"column":2817}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2541},"generated":{"line":1,"column":2867}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2602},"generated":{"line":1,"column":2927}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2676},"generated":{"line":1,"column":3000}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2686},"generated":{"line":1,"column":3009}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2719},"generated":{"line":1,"column":3041}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2729},"generated":{"line":1,"column":3050}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2811},"generated":{"line":1,"column":3131}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2836},"generated":{"line":1,"column":3155}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2867},"generated":{"line":1,"column":3185}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2877},"generated":{"line":1,"column":3194}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2959},"generated":{"line":1,"column":3275}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":2984},"generated":{"line":1,"column":3299}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3015},"generated":{"line":1,"column":3329}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3025},"generated":{"line":1,"column":3338}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3107},"generated":{"line":1,"column":3419}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3130},"generated":{"line":1,"column":3441}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3159},"generated":{"line":1,"column":3469}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3169},"generated":{"line":1,"column":3478}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3251},"generated":{"line":1,"column":3559}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3274},"generated":{"line":1,"column":3581}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3303},"generated":{"line":1,"column":3609}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3313},"generated":{"line":1,"column":3618}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3395},"generated":{"line":1,"column":3699}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3418},"generated":{"line":1,"column":3721}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3447},"generated":{"line":1,"column":3749}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3457},"generated":{"line":1,"column":3758}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3539},"generated":{"line":1,"column":3839}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3569},"generated":{"line":1,"column":3868}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3579},"generated":{"line":1,"column":3877}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3623},"generated":{"line":1,"column":3920}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3694},"generated":{"line":1,"column":3990}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3762},"generated":{"line":1,"column":4057}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3825},"generated":{"line":1,"column":4119}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3835},"generated":{"line":1,"column":4128}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3913},"generated":{"line":1,"column":4205}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3989},"generated":{"line":1,"column":4280}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":3999},"generated":{"line":1,"column":4289}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4052},"generated":{"line":1,"column":4341}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4093},"generated":{"line":1,"column":4381}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4134},"generated":{"line":1,"column":4421}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4200},"generated":{"line":1,"column":4486}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4249},"generated":{"line":1,"column":4534}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4259},"generated":{"line":1,"column":4543}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4277},"generated":{"line":1,"column":4560}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4296},"generated":{"line":1,"column":4578}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4306},"generated":{"line":1,"column":4587}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4342},"generated":{"line":1,"column":4622}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4352},"generated":{"line":1,"column":4631}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4434},"generated":{"line":1,"column":4712}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4461},"generated":{"line":1,"column":4738}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4471},"generated":{"line":1,"column":4747}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4519},"generated":{"line":1,"column":4794}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4581},"generated":{"line":1,"column":4855}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4658},"generated":{"line":1,"column":4931}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4732},"generated":{"line":1,"column":5004}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4766},"generated":{"line":1,"column":5037}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4776},"generated":{"line":1,"column":5046}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4794},"generated":{"line":1,"column":5063}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4813},"generated":{"line":1,"column":5081}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4823},"generated":{"line":1,"column":5090}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4856},"generated":{"line":1,"column":5122}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4866},"generated":{"line":1,"column":5131}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4948},"generated":{"line":1,"column":5212}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4972},"generated":{"line":1,"column":5235}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":4982},"generated":{"line":1,"column":5244}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5028},"generated":{"line":1,"column":5289}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5090},"generated":{"line":1,"column":5350}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5100},"generated":{"line":1,"column":5359}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5157},"generated":{"line":1,"column":5415}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5231},"generated":{"line":1,"column":5488}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5299},"generated":{"line":1,"column":5555}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5309},"generated":{"line":1,"column":5564}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5339},"generated":{"line":1,"column":5593}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5349},"generated":{"line":1,"column":5602}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5431},"generated":{"line":1,"column":5683}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5465},"generated":{"line":1,"column":5716}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5475},"generated":{"line":1,"column":5725}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5509},"generated":{"line":1,"column":5758}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5519},"generated":{"line":1,"column":5767}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5568},"generated":{"line":1,"column":5815}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5612},"generated":{"line":1,"column":5858}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5622},"generated":{"line":1,"column":5867}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5655},"generated":{"line":1,"column":5899}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5699},"generated":{"line":1,"column":5942}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5713},"generated":{"line":1,"column":5955}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5745},"generated":{"line":1,"column":5986}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5789},"generated":{"line":1,"column":6029}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5803},"generated":{"line":1,"column":6042}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5836},"generated":{"line":1,"column":6074}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5880},"generated":{"line":1,"column":6117}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5894},"generated":{"line":1,"column":6130}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5932},"generated":{"line":1,"column":6167}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5976},"generated":{"line":1,"column":6210}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":5990},"generated":{"line":1,"column":6223}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6000},"generated":{"line":1,"column":6232}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6082},"generated":{"line":1,"column":6313}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6112},"generated":{"line":1,"column":6342}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6122},"generated":{"line":1,"column":6351}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6175},"generated":{"line":1,"column":6403}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6236},"generated":{"line":1,"column":6463}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6246},"generated":{"line":1,"column":6472}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6276},"generated":{"line":1,"column":6501}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6316},"generated":{"line":1,"column":6540}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6330},"generated":{"line":1,"column":6553}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6363},"generated":{"line":1,"column":6585}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6403},"generated":{"line":1,"column":6624}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6417},"generated":{"line":1,"column":6637}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6449},"generated":{"line":1,"column":6668}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6489},"generated":{"line":1,"column":6707}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6503},"generated":{"line":1,"column":6720}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6537},"generated":{"line":1,"column":6753}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6577},"generated":{"line":1,"column":6792}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6591},"generated":{"line":1,"column":6805}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6601},"generated":{"line":1,"column":6814}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6605},"generated":{"line":1,"column":6817}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6609},"generated":{"line":1,"column":6820}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6691},"generated":{"line":1,"column":6901}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6746},"generated":{"line":1,"column":6955}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6828},"generated":{"line":1,"column":7036}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6898},"generated":{"line":1,"column":7105}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":6980},"generated":{"line":1,"column":7186}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7011},"generated":{"line":1,"column":7216}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7021},"generated":{"line":1,"column":7225}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7058},"generated":{"line":1,"column":7261}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7130},"generated":{"line":1,"column":7332}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7186},"generated":{"line":1,"column":7387}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7254},"generated":{"line":1,"column":7454}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7264},"generated":{"line":1,"column":7463}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7282},"generated":{"line":1,"column":7480}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7364},"generated":{"line":1,"column":7561}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7440},"generated":{"line":1,"column":7636}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7522},"generated":{"line":1,"column":7717}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7569},"generated":{"line":1,"column":7763}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7579},"generated":{"line":1,"column":7772}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7595},"generated":{"line":1,"column":7787}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7677},"generated":{"line":1,"column":7868}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7756},"generated":{"line":1,"column":7946}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7819},"generated":{"line":1,"column":8008}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7884},"generated":{"line":1,"column":8072}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":7951},"generated":{"line":1,"column":8138}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8013},"generated":{"line":1,"column":8199}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8023},"generated":{"line":1,"column":8208}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8061},"generated":{"line":1,"column":8245}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8071},"generated":{"line":1,"column":8254}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8075},"generated":{"line":1,"column":8257}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8079},"generated":{"line":1,"column":8260}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8161},"generated":{"line":1,"column":8341}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8165},"generated":{"line":1,"column":8344}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8218},"generated":{"line":1,"column":8396}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8222},"generated":{"line":1,"column":8399}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8304},"generated":{"line":1,"column":8480}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8308},"generated":{"line":1,"column":8483}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8390},"generated":{"line":1,"column":8564}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8451},"generated":{"line":1,"column":8624}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8533},"generated":{"line":1,"column":8705}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8568},"generated":{"line":1,"column":8739}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8601},"generated":{"line":1,"column":8771}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8636},"generated":{"line":1,"column":8805}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8671},"generated":{"line":1,"column":8839}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8707},"generated":{"line":1,"column":8874}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8717},"generated":{"line":1,"column":8883}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8799},"generated":{"line":1,"column":8964}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8834},"generated":{"line":1,"column":8998}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8867},"generated":{"line":1,"column":9030}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8902},"generated":{"line":1,"column":9064}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8937},"generated":{"line":1,"column":9098}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":8972},"generated":{"line":1,"column":9132}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9008},"generated":{"line":1,"column":9167}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9018},"generated":{"line":1,"column":9176}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9100},"generated":{"line":1,"column":9257}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9135},"generated":{"line":1,"column":9291}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9168},"generated":{"line":1,"column":9323}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9203},"generated":{"line":1,"column":9357}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9238},"generated":{"line":1,"column":9391}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9273},"generated":{"line":1,"column":9425}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9308},"generated":{"line":1,"column":9459}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9344},"generated":{"line":1,"column":9494}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9354},"generated":{"line":1,"column":9503}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9436},"generated":{"line":1,"column":9584}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9471},"generated":{"line":1,"column":9618}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9504},"generated":{"line":1,"column":9650}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9539},"generated":{"line":1,"column":9684}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9574},"generated":{"line":1,"column":9718}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9609},"generated":{"line":1,"column":9752}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9644},"generated":{"line":1,"column":9786}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9679},"generated":{"line":1,"column":9820}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9715},"generated":{"line":1,"column":9855}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9725},"generated":{"line":1,"column":9864}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9807},"generated":{"line":1,"column":9945}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9842},"generated":{"line":1,"column":9979}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9875},"generated":{"line":1,"column":10011}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9910},"generated":{"line":1,"column":10045}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9945},"generated":{"line":1,"column":10079}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":9980},"generated":{"line":1,"column":10113}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10015},"generated":{"line":1,"column":10147}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10050},"generated":{"line":1,"column":10181}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10085},"generated":{"line":1,"column":10215}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10121},"generated":{"line":1,"column":10250}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10131},"generated":{"line":1,"column":10259}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10213},"generated":{"line":1,"column":10340}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10248},"generated":{"line":1,"column":10374}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10281},"generated":{"line":1,"column":10406}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10316},"generated":{"line":1,"column":10440}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10351},"generated":{"line":1,"column":10474}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10386},"generated":{"line":1,"column":10508}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10421},"generated":{"line":1,"column":10542}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10456},"generated":{"line":1,"column":10576}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10491},"generated":{"line":1,"column":10610}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10526},"generated":{"line":1,"column":10644}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10562},"generated":{"line":1,"column":10679}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10572},"generated":{"line":1,"column":10688}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10576},"generated":{"line":1,"column":10691}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10658},"generated":{"line":1,"column":10772}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10716},"generated":{"line":1,"column":10829}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10798},"generated":{"line":1,"column":10910}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10833},"generated":{"line":1,"column":10944}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10866},"generated":{"line":1,"column":10976}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10901},"generated":{"line":1,"column":11010}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10936},"generated":{"line":1,"column":11044}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10971},"generated":{"line":1,"column":11078}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":10981},"generated":{"line":1,"column":11087}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11063},"generated":{"line":1,"column":11168}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11098},"generated":{"line":1,"column":11202}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11131},"generated":{"line":1,"column":11234}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11166},"generated":{"line":1,"column":11268}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11201},"generated":{"line":1,"column":11302}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11236},"generated":{"line":1,"column":11336}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11271},"generated":{"line":1,"column":11370}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11281},"generated":{"line":1,"column":11379}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11363},"generated":{"line":1,"column":11460}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11398},"generated":{"line":1,"column":11494}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11431},"generated":{"line":1,"column":11526}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11466},"generated":{"line":1,"column":11560}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11501},"generated":{"line":1,"column":11594}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11536},"generated":{"line":1,"column":11628}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11571},"generated":{"line":1,"column":11662}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11606},"generated":{"line":1,"column":11696}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11616},"generated":{"line":1,"column":11705}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11698},"generated":{"line":1,"column":11786}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11733},"generated":{"line":1,"column":11820}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11766},"generated":{"line":1,"column":11852}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11801},"generated":{"line":1,"column":11886}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11836},"generated":{"line":1,"column":11920}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11871},"generated":{"line":1,"column":11954}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11906},"generated":{"line":1,"column":11988}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11941},"generated":{"line":1,"column":12022}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11976},"generated":{"line":1,"column":12056}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":11986},"generated":{"line":1,"column":12065}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12068},"generated":{"line":1,"column":12146}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12103},"generated":{"line":1,"column":12180}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12136},"generated":{"line":1,"column":12212}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12171},"generated":{"line":1,"column":12246}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12206},"generated":{"line":1,"column":12280}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12241},"generated":{"line":1,"column":12314}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12276},"generated":{"line":1,"column":12348}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12311},"generated":{"line":1,"column":12382}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12346},"generated":{"line":1,"column":12416}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12381},"generated":{"line":1,"column":12450}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12391},"generated":{"line":1,"column":12459}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12473},"generated":{"line":1,"column":12540}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12508},"generated":{"line":1,"column":12574}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12541},"generated":{"line":1,"column":12606}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12576},"generated":{"line":1,"column":12640}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12611},"generated":{"line":1,"column":12674}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12646},"generated":{"line":1,"column":12708}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12681},"generated":{"line":1,"column":12742}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12716},"generated":{"line":1,"column":12776}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12751},"generated":{"line":1,"column":12810}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12786},"generated":{"line":1,"column":12844}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12821},"generated":{"line":1,"column":12878}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12831},"generated":{"line":1,"column":12887}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12913},"generated":{"line":1,"column":12968}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12948},"generated":{"line":1,"column":13002}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":12981},"generated":{"line":1,"column":13034}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13016},"generated":{"line":1,"column":13068}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13051},"generated":{"line":1,"column":13102}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13086},"generated":{"line":1,"column":13136}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13121},"generated":{"line":1,"column":13170}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13156},"generated":{"line":1,"column":13204}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13191},"generated":{"line":1,"column":13238}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13226},"generated":{"line":1,"column":13272}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13261},"generated":{"line":1,"column":13306}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13296},"generated":{"line":1,"column":13340}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13306},"generated":{"line":1,"column":13349}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13388},"generated":{"line":1,"column":13430}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13423},"generated":{"line":1,"column":13464}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13457},"generated":{"line":1,"column":13497}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13492},"generated":{"line":1,"column":13531}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13527},"generated":{"line":1,"column":13565}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13562},"generated":{"line":1,"column":13599}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13597},"generated":{"line":1,"column":13633}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13632},"generated":{"line":1,"column":13667}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13667},"generated":{"line":1,"column":13701}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13702},"generated":{"line":1,"column":13735}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13737},"generated":{"line":1,"column":13769}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13772},"generated":{"line":1,"column":13803}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13807},"generated":{"line":1,"column":13837}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13817},"generated":{"line":1,"column":13846}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13899},"generated":{"line":1,"column":13927}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13934},"generated":{"line":1,"column":13961}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":13968},"generated":{"line":1,"column":13994}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14003},"generated":{"line":1,"column":14028}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14038},"generated":{"line":1,"column":14062}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14073},"generated":{"line":1,"column":14096}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14108},"generated":{"line":1,"column":14130}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14143},"generated":{"line":1,"column":14164}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14178},"generated":{"line":1,"column":14198}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14213},"generated":{"line":1,"column":14232}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14248},"generated":{"line":1,"column":14266}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14283},"generated":{"line":1,"column":14300}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14318},"generated":{"line":1,"column":14334}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14354},"generated":{"line":1,"column":14369}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14364},"generated":{"line":1,"column":14378}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14446},"generated":{"line":1,"column":14459}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14481},"generated":{"line":1,"column":14493}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14515},"generated":{"line":1,"column":14526}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14550},"generated":{"line":1,"column":14560}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14585},"generated":{"line":1,"column":14594}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14620},"generated":{"line":1,"column":14628}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14655},"generated":{"line":1,"column":14662}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14690},"generated":{"line":1,"column":14696}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14725},"generated":{"line":1,"column":14730}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14760},"generated":{"line":1,"column":14764}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14795},"generated":{"line":1,"column":14798}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14830},"generated":{"line":1,"column":14832}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14865},"generated":{"line":1,"column":14866}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14901},"generated":{"line":1,"column":14901}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14937},"generated":{"line":1,"column":14936}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14947},"generated":{"line":1,"column":14945}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":14951},"generated":{"line":1,"column":14948}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15033},"generated":{"line":1,"column":15029}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15088},"generated":{"line":1,"column":15083}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15170},"generated":{"line":1,"column":15164}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15205},"generated":{"line":1,"column":15198}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15239},"generated":{"line":1,"column":15231}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15274},"generated":{"line":1,"column":15265}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15309},"generated":{"line":1,"column":15299}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15344},"generated":{"line":1,"column":15333}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15379},"generated":{"line":1,"column":15367}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15414},"generated":{"line":1,"column":15401}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15449},"generated":{"line":1,"column":15435}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15484},"generated":{"line":1,"column":15469}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15519},"generated":{"line":1,"column":15503}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15554},"generated":{"line":1,"column":15537}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15589},"generated":{"line":1,"column":15571}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15625},"generated":{"line":1,"column":15606}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15661},"generated":{"line":1,"column":15641}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15671},"generated":{"line":1,"column":15650}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15675},"generated":{"line":1,"column":15653}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15679},"generated":{"line":1,"column":15656}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15683},"generated":{"line":1,"column":15659}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15765},"generated":{"line":1,"column":15740}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15769},"generated":{"line":1,"column":15743}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15816},"generated":{"line":1,"column":15789}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15820},"generated":{"line":1,"column":15792}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15902},"generated":{"line":1,"column":15873}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":15978},"generated":{"line":1,"column":15948}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16007},"generated":{"line":1,"column":15976}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16042},"generated":{"line":1,"column":16010}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16073},"generated":{"line":1,"column":16040}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16104},"generated":{"line":1,"column":16070}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16135},"generated":{"line":1,"column":16100}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16166},"generated":{"line":1,"column":16130}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16196},"generated":{"line":1,"column":16159}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16226},"generated":{"line":1,"column":16188}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16256},"generated":{"line":1,"column":16217}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16286},"generated":{"line":1,"column":16246}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16316},"generated":{"line":1,"column":16275}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16361},"generated":{"line":1,"column":16319}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16394},"generated":{"line":1,"column":16351}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16403},"generated":{"line":1,"column":16359}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16432},"generated":{"line":1,"column":16387}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16468},"generated":{"line":1,"column":16422}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16499},"generated":{"line":1,"column":16452}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16532},"generated":{"line":1,"column":16484}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16565},"generated":{"line":1,"column":16516}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16598},"generated":{"line":1,"column":16548}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16627},"generated":{"line":1,"column":16576}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16658},"generated":{"line":1,"column":16606}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16689},"generated":{"line":1,"column":16636}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16720},"generated":{"line":1,"column":16666}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16758},"generated":{"line":1,"column":16703}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16768},"generated":{"line":1,"column":16712}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16850},"generated":{"line":1,"column":16793}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16878},"generated":{"line":1,"column":16820}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16929},"generated":{"line":1,"column":16870}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":16996},"generated":{"line":1,"column":16936}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17006},"generated":{"line":1,"column":16945}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17088},"generated":{"line":1,"column":17026}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17116},"generated":{"line":1,"column":17053}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17136},"generated":{"line":1,"column":17072}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17160},"generated":{"line":1,"column":17095}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17184},"generated":{"line":1,"column":17118}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17234},"generated":{"line":1,"column":17167}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17296},"generated":{"line":1,"column":17228}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17352},"generated":{"line":1,"column":17283}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17393},"generated":{"line":1,"column":17323}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17468},"generated":{"line":1,"column":17397}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17481},"generated":{"line":1,"column":17409}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17557},"generated":{"line":1,"column":17484}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17571},"generated":{"line":1,"column":17497}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17608},"generated":{"line":1,"column":17533}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17665},"generated":{"line":1,"column":17589}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17727},"generated":{"line":1,"column":17650}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17804},"generated":{"line":1,"column":17726}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17866},"generated":{"line":1,"column":17787}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17943},"generated":{"line":1,"column":17863}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17957},"generated":{"line":1,"column":17876}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":17967},"generated":{"line":1,"column":17885}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18049},"generated":{"line":1,"column":17966}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18077},"generated":{"line":1,"column":17993}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18121},"generated":{"line":1,"column":18036}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18175},"generated":{"line":1,"column":18089}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18244},"generated":{"line":1,"column":18157}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18281},"generated":{"line":1,"column":18193}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18338},"generated":{"line":1,"column":18249}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18400},"generated":{"line":1,"column":18310}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18477},"generated":{"line":1,"column":18386}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18539},"generated":{"line":1,"column":18447}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18616},"generated":{"line":1,"column":18523}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18630},"generated":{"line":1,"column":18536}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18640},"generated":{"line":1,"column":18545}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18722},"generated":{"line":1,"column":18626}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18748},"generated":{"line":1,"column":18651}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18779},"generated":{"line":1,"column":18681}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18812},"generated":{"line":1,"column":18713}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18877},"generated":{"line":1,"column":18777}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18954},"generated":{"line":1,"column":18853}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":18964},"generated":{"line":1,"column":18862}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19046},"generated":{"line":1,"column":18943}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19072},"generated":{"line":1,"column":18968}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19101},"generated":{"line":1,"column":18996}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19162},"generated":{"line":1,"column":19056}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19228},"generated":{"line":1,"column":19121}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19303},"generated":{"line":1,"column":19195}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19313},"generated":{"line":1,"column":19204}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19395},"generated":{"line":1,"column":19285}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19421},"generated":{"line":1,"column":19310}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19450},"generated":{"line":1,"column":19338}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19511},"generated":{"line":1,"column":19398}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19577},"generated":{"line":1,"column":19463}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19652},"generated":{"line":1,"column":19537}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19716},"generated":{"line":1,"column":19600}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19789},"generated":{"line":1,"column":19672}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19853},"generated":{"line":1,"column":19735}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19926},"generated":{"line":1,"column":19807}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19936},"generated":{"line":1,"column":19816}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19940},"generated":{"line":1,"column":19819}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":19944},"generated":{"line":1,"column":19822}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20026},"generated":{"line":1,"column":19903}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20086},"generated":{"line":1,"column":19962}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20168},"generated":{"line":1,"column":20043}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20201},"generated":{"line":1,"column":20075}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20263},"generated":{"line":1,"column":20136}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20272},"generated":{"line":1,"column":20144}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20334},"generated":{"line":1,"column":20205}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20344},"generated":{"line":1,"column":20214}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20348},"generated":{"line":1,"column":20217}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20352},"generated":{"line":1,"column":20220}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20356},"generated":{"line":1,"column":20223}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20360},"generated":{"line":1,"column":20226}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20442},"generated":{"line":1,"column":20307}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20446},"generated":{"line":1,"column":20310}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20497},"generated":{"line":1,"column":20360}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20501},"generated":{"line":1,"column":20363}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20583},"generated":{"line":1,"column":20444}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20605},"generated":{"line":1,"column":20465}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20687},"generated":{"line":1,"column":20546}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20718},"generated":{"line":1,"column":20576}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20728},"generated":{"line":1,"column":20585}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20813},"generated":{"line":1,"column":20669}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20846},"generated":{"line":1,"column":20701}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20869},"generated":{"line":1,"column":20723}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20879},"generated":{"line":1,"column":20732}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":20950},"generated":{"line":1,"column":20802}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21035},"generated":{"line":1,"column":20886}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21073},"generated":{"line":1,"column":20923}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21112},"generated":{"line":1,"column":20961}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21149},"generated":{"line":1,"column":20997}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21159},"generated":{"line":1,"column":21006}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21190},"generated":{"line":1,"column":21036}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21251},"generated":{"line":1,"column":21096}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21290},"generated":{"line":1,"column":21134}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21356},"generated":{"line":1,"column":21199}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21376},"generated":{"line":1,"column":21218}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21386},"generated":{"line":1,"column":21227}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21452},"generated":{"line":1,"column":21292}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21529},"generated":{"line":1,"column":21368}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21593},"generated":{"line":1,"column":21431}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21654},"generated":{"line":1,"column":21491}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21701},"generated":{"line":1,"column":21537}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21711},"generated":{"line":1,"column":21546}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21777},"generated":{"line":1,"column":21611}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21854},"generated":{"line":1,"column":21687}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21918},"generated":{"line":1,"column":21750}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":21979},"generated":{"line":1,"column":21810}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22026},"generated":{"line":1,"column":21856}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22036},"generated":{"line":1,"column":21865}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22073},"generated":{"line":1,"column":21901}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22121},"generated":{"line":1,"column":21948}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22162},"generated":{"line":1,"column":21988}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22204},"generated":{"line":1,"column":22029}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22243},"generated":{"line":1,"column":22067}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22253},"generated":{"line":1,"column":22076}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22290},"generated":{"line":1,"column":22112}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22338},"generated":{"line":1,"column":22159}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22407},"generated":{"line":1,"column":22227}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22443},"generated":{"line":1,"column":22262}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22476},"generated":{"line":1,"column":22294}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22509},"generated":{"line":1,"column":22326}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22550},"generated":{"line":1,"column":22366}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22592},"generated":{"line":1,"column":22407}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22633},"generated":{"line":1,"column":22447}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22675},"generated":{"line":1,"column":22488}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22717},"generated":{"line":1,"column":22529}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22727},"generated":{"line":1,"column":22538}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22764},"generated":{"line":1,"column":22574}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22815},"generated":{"line":1,"column":22624}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22863},"generated":{"line":1,"column":22671}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22906},"generated":{"line":1,"column":22713}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22950},"generated":{"line":1,"column":22756}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":22993},"generated":{"line":1,"column":22798}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23037},"generated":{"line":1,"column":22841}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23080},"generated":{"line":1,"column":22883}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23090},"generated":{"line":1,"column":22892}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23127},"generated":{"line":1,"column":22928}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23191},"generated":{"line":1,"column":22991}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23239},"generated":{"line":1,"column":23038}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23282},"generated":{"line":1,"column":23080}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23326},"generated":{"line":1,"column":23123}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23369},"generated":{"line":1,"column":23165}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23413},"generated":{"line":1,"column":23208}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23459},"generated":{"line":1,"column":23253}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23469},"generated":{"line":1,"column":23262}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23506},"generated":{"line":1,"column":23298}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23564},"generated":{"line":1,"column":23355}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23613},"generated":{"line":1,"column":23403}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23672},"generated":{"line":1,"column":23461}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23709},"generated":{"line":1,"column":23497}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23749},"generated":{"line":1,"column":23536}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23796},"generated":{"line":1,"column":23582}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23870},"generated":{"line":1,"column":23655}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23900},"generated":{"line":1,"column":23684}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23934},"generated":{"line":1,"column":23717}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23970},"generated":{"line":1,"column":23752}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":23980},"generated":{"line":1,"column":23761}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24017},"generated":{"line":1,"column":23797}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24083},"generated":{"line":1,"column":23862}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24132},"generated":{"line":1,"column":23910}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24208},"generated":{"line":1,"column":23985}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24248},"generated":{"line":1,"column":24024}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24280},"generated":{"line":1,"column":24055}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24308},"generated":{"line":1,"column":24082}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24341},"generated":{"line":1,"column":24114}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24379},"generated":{"line":1,"column":24151}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24422},"generated":{"line":1,"column":24193}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24432},"generated":{"line":1,"column":24202}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24469},"generated":{"line":1,"column":24238}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24539},"generated":{"line":1,"column":24307}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24588},"generated":{"line":1,"column":24355}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24641},"generated":{"line":1,"column":24407}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24723},"generated":{"line":1,"column":24488}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24766},"generated":{"line":1,"column":24530}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24810},"generated":{"line":1,"column":24573}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24865},"generated":{"line":1,"column":24627}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24910},"generated":{"line":1,"column":24671}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":24958},"generated":{"line":1,"column":24718}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25014},"generated":{"line":1,"column":24773}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25071},"generated":{"line":1,"column":24829}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25144},"generated":{"line":1,"column":24901}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25190},"generated":{"line":1,"column":24946}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25200},"generated":{"line":1,"column":24955}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25237},"generated":{"line":1,"column":24991}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25303},"generated":{"line":1,"column":25056}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25352},"generated":{"line":1,"column":25104}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25421},"generated":{"line":1,"column":25172}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25478},"generated":{"line":1,"column":25228}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25522},"generated":{"line":1,"column":25271}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25588},"generated":{"line":1,"column":25336}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25662},"generated":{"line":1,"column":25409}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25723},"generated":{"line":1,"column":25469}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25763},"generated":{"line":1,"column":25508}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25789},"generated":{"line":1,"column":25533}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25859},"generated":{"line":1,"column":25602}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25902},"generated":{"line":1,"column":25644}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25912},"generated":{"line":1,"column":25653}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":25949},"generated":{"line":1,"column":25689}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26015},"generated":{"line":1,"column":25754}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26064},"generated":{"line":1,"column":25802}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26133},"generated":{"line":1,"column":25870}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26190},"generated":{"line":1,"column":25926}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26234},"generated":{"line":1,"column":25969}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26296},"generated":{"line":1,"column":26030}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26370},"generated":{"line":1,"column":26103}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26450},"generated":{"line":1,"column":26182}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26498},"generated":{"line":1,"column":26229}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26565},"generated":{"line":1,"column":26295}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26619},"generated":{"line":1,"column":26348}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26662},"generated":{"line":1,"column":26390}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26672},"generated":{"line":1,"column":26399}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26709},"generated":{"line":1,"column":26435}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26779},"generated":{"line":1,"column":26504}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26828},"generated":{"line":1,"column":26552}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26881},"generated":{"line":1,"column":26604}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":26961},"generated":{"line":1,"column":26683}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27016},"generated":{"line":1,"column":26737}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27054},"generated":{"line":1,"column":26774}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27118},"generated":{"line":1,"column":26837}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27171},"generated":{"line":1,"column":26889}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27198},"generated":{"line":1,"column":26915}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27251},"generated":{"line":1,"column":26967}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27306},"generated":{"line":1,"column":27021}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27351},"generated":{"line":1,"column":27065}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27399},"generated":{"line":1,"column":27112}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27455},"generated":{"line":1,"column":27167}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27512},"generated":{"line":1,"column":27223}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27585},"generated":{"line":1,"column":27295}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27631},"generated":{"line":1,"column":27340}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27641},"generated":{"line":1,"column":27349}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27694},"generated":{"line":1,"column":27401}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27752},"generated":{"line":1,"column":27458}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27827},"generated":{"line":1,"column":27532}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27887},"generated":{"line":1,"column":27591}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27937},"generated":{"line":1,"column":27640}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27978},"generated":{"line":1,"column":27680}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":27985},"generated":{"line":1,"column":27686}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28067},"generated":{"line":1,"column":27767}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28091},"generated":{"line":1,"column":27790}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28114},"generated":{"line":1,"column":27812}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28137},"generated":{"line":1,"column":27834}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28174},"generated":{"line":1,"column":27870}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28209},"generated":{"line":1,"column":27904}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28266},"generated":{"line":1,"column":27960}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28311},"generated":{"line":1,"column":28004}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28352},"generated":{"line":1,"column":28044}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28373},"generated":{"line":1,"column":28064}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28414},"generated":{"line":1,"column":28104}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28436},"generated":{"line":1,"column":28125}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28454},"generated":{"line":1,"column":28142}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28495},"generated":{"line":1,"column":28182}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28556},"generated":{"line":1,"column":28242}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28638},"generated":{"line":1,"column":28323}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28655},"generated":{"line":1,"column":28339}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28716},"generated":{"line":1,"column":28399}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28798},"generated":{"line":1,"column":28480}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28816},"generated":{"line":1,"column":28497}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28851},"generated":{"line":1,"column":28531}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28889},"generated":{"line":1,"column":28568}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28907},"generated":{"line":1,"column":28585}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28941},"generated":{"line":1,"column":28618}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":28975},"generated":{"line":1,"column":28651}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29010},"generated":{"line":1,"column":28685}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29045},"generated":{"line":1,"column":28719}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29079},"generated":{"line":1,"column":28752}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29113},"generated":{"line":1,"column":28785}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29126},"generated":{"line":1,"column":28797}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29179},"generated":{"line":1,"column":28849}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29220},"generated":{"line":1,"column":28889}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29257},"generated":{"line":1,"column":28925}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29274},"generated":{"line":1,"column":28941}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29311},"generated":{"line":1,"column":28977}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29329},"generated":{"line":1,"column":28994}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29365},"generated":{"line":1,"column":29029}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29476},"generated":{"line":1,"column":29139}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29587},"generated":{"line":1,"column":29249}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29698},"generated":{"line":1,"column":29359}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29809},"generated":{"line":1,"column":29469}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29826},"generated":{"line":1,"column":29485}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":29931},"generated":{"line":1,"column":29589}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30036},"generated":{"line":1,"column":29693}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30141},"generated":{"line":1,"column":29797}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30246},"generated":{"line":1,"column":29901}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30264},"generated":{"line":1,"column":29918}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30278},"generated":{"line":1,"column":29931}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30360},"generated":{"line":1,"column":30012}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30404},"generated":{"line":1,"column":30055}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30448},"generated":{"line":1,"column":30098}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30493},"generated":{"line":1,"column":30142}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30538},"generated":{"line":1,"column":30186}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30582},"generated":{"line":1,"column":30229}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30626},"generated":{"line":1,"column":30272}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30674},"generated":{"line":1,"column":30319}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30722},"generated":{"line":1,"column":30366}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30793},"generated":{"line":1,"column":30436}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30839},"generated":{"line":1,"column":30481}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30924},"generated":{"line":1,"column":30565}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":30977},"generated":{"line":1,"column":30617}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31059},"generated":{"line":1,"column":30698}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31080},"generated":{"line":1,"column":30718}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31115},"generated":{"line":1,"column":30752}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31143},"generated":{"line":1,"column":30779}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31160},"generated":{"line":1,"column":30795}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31189},"generated":{"line":1,"column":30823}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31207},"generated":{"line":1,"column":30840}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31289},"generated":{"line":1,"column":30921}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31326},"generated":{"line":1,"column":30957}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31362},"generated":{"line":1,"column":30992}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31474},"generated":{"line":1,"column":31103}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31586},"generated":{"line":1,"column":31214}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31698},"generated":{"line":1,"column":31325}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31810},"generated":{"line":1,"column":31436}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31827},"generated":{"line":1,"column":31452}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":31933},"generated":{"line":1,"column":31557}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32039},"generated":{"line":1,"column":31662}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32145},"generated":{"line":1,"column":31767}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32251},"generated":{"line":1,"column":31872}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32269},"generated":{"line":1,"column":31889}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32282},"generated":{"line":1,"column":31901}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32386},"generated":{"line":1,"column":32004}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32490},"generated":{"line":1,"column":32107}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32504},"generated":{"line":1,"column":32120}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32586},"generated":{"line":1,"column":32201}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32627},"generated":{"line":1,"column":32241}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32668},"generated":{"line":1,"column":32281}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32713},"generated":{"line":1,"column":32325}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32760},"generated":{"line":1,"column":32371}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32814},"generated":{"line":1,"column":32424}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32868},"generated":{"line":1,"column":32477}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32950},"generated":{"line":1,"column":32558}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":32995},"generated":{"line":1,"column":32602}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33040},"generated":{"line":1,"column":32646}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33096},"generated":{"line":1,"column":32701}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33152},"generated":{"line":1,"column":32756}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33234},"generated":{"line":1,"column":32837}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33279},"generated":{"line":1,"column":32881}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33324},"generated":{"line":1,"column":32925}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33394},"generated":{"line":1,"column":32994}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33464},"generated":{"line":1,"column":33063}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33520},"generated":{"line":1,"column":33118}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33576},"generated":{"line":1,"column":33173}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33632},"generated":{"line":1,"column":33228}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33688},"generated":{"line":1,"column":33283}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33770},"generated":{"line":1,"column":33364}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33825},"generated":{"line":1,"column":33418}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33878},"generated":{"line":1,"column":33470}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33927},"generated":{"line":1,"column":33518}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":33989},"generated":{"line":1,"column":33579}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34071},"generated":{"line":1,"column":33660}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34107},"generated":{"line":1,"column":33695}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34143},"generated":{"line":1,"column":33730}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34199},"generated":{"line":1,"column":33785}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34258},"generated":{"line":1,"column":33843}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34340},"generated":{"line":1,"column":33924}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34384},"generated":{"line":1,"column":33967}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34428},"generated":{"line":1,"column":34010}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34469},"generated":{"line":1,"column":34050}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34510},"generated":{"line":1,"column":34090}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34568},"generated":{"line":1,"column":34147}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34633},"generated":{"line":1,"column":34211}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34676},"generated":{"line":1,"column":34253}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34743},"generated":{"line":1,"column":34319}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34825},"generated":{"line":1,"column":34400}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34849},"generated":{"line":1,"column":34423}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34873},"generated":{"line":1,"column":34446}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34897},"generated":{"line":1,"column":34469}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34922},"generated":{"line":1,"column":34493}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":34982},"generated":{"line":1,"column":34552}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35042},"generated":{"line":1,"column":34611}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35091},"generated":{"line":1,"column":34659}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35140},"generated":{"line":1,"column":34707}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35222},"generated":{"line":1,"column":34788}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35246},"generated":{"line":1,"column":34811}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35298},"generated":{"line":1,"column":34862}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35350},"generated":{"line":1,"column":34913}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35374},"generated":{"line":1,"column":34936}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35426},"generated":{"line":1,"column":34987}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35478},"generated":{"line":1,"column":35038}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35529},"generated":{"line":1,"column":35088}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35590},"generated":{"line":1,"column":35148}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35636},"generated":{"line":1,"column":35193}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35697},"generated":{"line":1,"column":35253}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35779},"generated":{"line":1,"column":35334}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35814},"generated":{"line":1,"column":35368}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35868},"generated":{"line":1,"column":35421}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35916},"generated":{"line":1,"column":35468}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":35962},"generated":{"line":1,"column":35513}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36006},"generated":{"line":1,"column":35556}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36088},"generated":{"line":1,"column":35637}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36121},"generated":{"line":1,"column":35669}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36154},"generated":{"line":1,"column":35701}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36211},"generated":{"line":1,"column":35757}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36268},"generated":{"line":1,"column":35813}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36323},"generated":{"line":1,"column":35867}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36378},"generated":{"line":1,"column":35921}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36425},"generated":{"line":1,"column":35967}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36480},"generated":{"line":1,"column":36021}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36535},"generated":{"line":1,"column":36075}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36617},"generated":{"line":1,"column":36156}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36637},"generated":{"line":1,"column":36175}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36706},"generated":{"line":1,"column":36243}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36775},"generated":{"line":1,"column":36311}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36833},"generated":{"line":1,"column":36368}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36891},"generated":{"line":1,"column":36425}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36943},"generated":{"line":1,"column":36476}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":36995},"generated":{"line":1,"column":36527}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37054},"generated":{"line":1,"column":36585}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37113},"generated":{"line":1,"column":36643}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37155},"generated":{"line":1,"column":36684}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37214},"generated":{"line":1,"column":36742}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37273},"generated":{"line":1,"column":36800}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37355},"generated":{"line":1,"column":36881}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37392},"generated":{"line":1,"column":36917}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37416},"generated":{"line":1,"column":36940}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37489},"generated":{"line":1,"column":37012}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37562},"generated":{"line":1,"column":37084}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37624},"generated":{"line":1,"column":37145}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37686},"generated":{"line":1,"column":37206}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37742},"generated":{"line":1,"column":37261}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37798},"generated":{"line":1,"column":37316}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37861},"generated":{"line":1,"column":37378}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37924},"generated":{"line":1,"column":37440}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":37970},"generated":{"line":1,"column":37485}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38033},"generated":{"line":1,"column":37547}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38096},"generated":{"line":1,"column":37609}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38178},"generated":{"line":1,"column":37690}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38219},"generated":{"line":1,"column":37730}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38247},"generated":{"line":1,"column":37757}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38324},"generated":{"line":1,"column":37833}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38401},"generated":{"line":1,"column":37909}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38467},"generated":{"line":1,"column":37974}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38533},"generated":{"line":1,"column":38039}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38593},"generated":{"line":1,"column":38098}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38653},"generated":{"line":1,"column":38157}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38720},"generated":{"line":1,"column":38223}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38787},"generated":{"line":1,"column":38289}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38837},"generated":{"line":1,"column":38338}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38904},"generated":{"line":1,"column":38404}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":38971},"generated":{"line":1,"column":38470}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39053},"generated":{"line":1,"column":38551}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39098},"generated":{"line":1,"column":38595}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39130},"generated":{"line":1,"column":38626}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39211},"generated":{"line":1,"column":38706}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39292},"generated":{"line":1,"column":38786}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39362},"generated":{"line":1,"column":38855}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39432},"generated":{"line":1,"column":38924}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39496},"generated":{"line":1,"column":38987}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39560},"generated":{"line":1,"column":39050}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39631},"generated":{"line":1,"column":39120}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39702},"generated":{"line":1,"column":39190}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39756},"generated":{"line":1,"column":39243}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39827},"generated":{"line":1,"column":39313}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39898},"generated":{"line":1,"column":39383}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":39980},"generated":{"line":1,"column":39464}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40029},"generated":{"line":1,"column":39512}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40065},"generated":{"line":1,"column":39547}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40150},"generated":{"line":1,"column":39631}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40235},"generated":{"line":1,"column":39715}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40309},"generated":{"line":1,"column":39788}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40383},"generated":{"line":1,"column":39861}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40451},"generated":{"line":1,"column":39928}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40519},"generated":{"line":1,"column":39995}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40594},"generated":{"line":1,"column":40069}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40669},"generated":{"line":1,"column":40143}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40727},"generated":{"line":1,"column":40200}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40802},"generated":{"line":1,"column":40274}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40877},"generated":{"line":1,"column":40348}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":40959},"generated":{"line":1,"column":40429}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41012},"generated":{"line":1,"column":40481}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41052},"generated":{"line":1,"column":40520}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41141},"generated":{"line":1,"column":40608}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41230},"generated":{"line":1,"column":40696}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41308},"generated":{"line":1,"column":40773}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41386},"generated":{"line":1,"column":40850}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41458},"generated":{"line":1,"column":40921}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41530},"generated":{"line":1,"column":40992}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41609},"generated":{"line":1,"column":41070}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41688},"generated":{"line":1,"column":41148}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41750},"generated":{"line":1,"column":41209}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41829},"generated":{"line":1,"column":41287}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41908},"generated":{"line":1,"column":41365}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":41990},"generated":{"line":1,"column":41446}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42023},"generated":{"line":1,"column":41478}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42043},"generated":{"line":1,"column":41497}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42112},"generated":{"line":1,"column":41565}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42181},"generated":{"line":1,"column":41633}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42239},"generated":{"line":1,"column":41690}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42297},"generated":{"line":1,"column":41747}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42349},"generated":{"line":1,"column":41798}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42401},"generated":{"line":1,"column":41849}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42460},"generated":{"line":1,"column":41907}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42519},"generated":{"line":1,"column":41965}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42561},"generated":{"line":1,"column":42006}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42620},"generated":{"line":1,"column":42064}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42679},"generated":{"line":1,"column":42122}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42761},"generated":{"line":1,"column":42203}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42798},"generated":{"line":1,"column":42239}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42822},"generated":{"line":1,"column":42262}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42895},"generated":{"line":1,"column":42334}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":42968},"generated":{"line":1,"column":42406}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43030},"generated":{"line":1,"column":42467}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43092},"generated":{"line":1,"column":42528}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43148},"generated":{"line":1,"column":42583}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43204},"generated":{"line":1,"column":42638}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43267},"generated":{"line":1,"column":42700}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43330},"generated":{"line":1,"column":42762}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43376},"generated":{"line":1,"column":42807}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43439},"generated":{"line":1,"column":42869}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43502},"generated":{"line":1,"column":42931}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43584},"generated":{"line":1,"column":43012}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43626},"generated":{"line":1,"column":43053}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43654},"generated":{"line":1,"column":43080}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43731},"generated":{"line":1,"column":43156}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43808},"generated":{"line":1,"column":43232}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43874},"generated":{"line":1,"column":43297}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":43940},"generated":{"line":1,"column":43362}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44000},"generated":{"line":1,"column":43421}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44060},"generated":{"line":1,"column":43480}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44128},"generated":{"line":1,"column":43547}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44196},"generated":{"line":1,"column":43614}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44246},"generated":{"line":1,"column":43663}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44314},"generated":{"line":1,"column":43730}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44382},"generated":{"line":1,"column":43797}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44464},"generated":{"line":1,"column":43878}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44510},"generated":{"line":1,"column":43923}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44542},"generated":{"line":1,"column":43954}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44623},"generated":{"line":1,"column":44034}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44704},"generated":{"line":1,"column":44114}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44774},"generated":{"line":1,"column":44183}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44844},"generated":{"line":1,"column":44252}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44908},"generated":{"line":1,"column":44315}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":44972},"generated":{"line":1,"column":44378}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45044},"generated":{"line":1,"column":44449}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45116},"generated":{"line":1,"column":44520}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45170},"generated":{"line":1,"column":44573}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45242},"generated":{"line":1,"column":44644}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45314},"generated":{"line":1,"column":44715}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45396},"generated":{"line":1,"column":44796}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45446},"generated":{"line":1,"column":44845}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45482},"generated":{"line":1,"column":44880}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45567},"generated":{"line":1,"column":44964}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45652},"generated":{"line":1,"column":45048}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45726},"generated":{"line":1,"column":45121}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45800},"generated":{"line":1,"column":45194}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45868},"generated":{"line":1,"column":45261}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":45936},"generated":{"line":1,"column":45328}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46012},"generated":{"line":1,"column":45403}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46088},"generated":{"line":1,"column":45478}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46146},"generated":{"line":1,"column":45535}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46222},"generated":{"line":1,"column":45610}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46298},"generated":{"line":1,"column":45685}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46380},"generated":{"line":1,"column":45766}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46405},"generated":{"line":1,"column":45790}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46435},"generated":{"line":1,"column":45819}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46517},"generated":{"line":1,"column":45900}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46538},"generated":{"line":1,"column":45920}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46564},"generated":{"line":1,"column":45945}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46646},"generated":{"line":1,"column":46026}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46663},"generated":{"line":1,"column":46042}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46685},"generated":{"line":1,"column":46063}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46767},"generated":{"line":1,"column":46144}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46780},"generated":{"line":1,"column":46156}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46798},"generated":{"line":1,"column":46173}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46880},"generated":{"line":1,"column":46254}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46889},"generated":{"line":1,"column":46262}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46903},"generated":{"line":1,"column":46275}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":46985},"generated":{"line":1,"column":46356}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47014},"generated":{"line":1,"column":46384}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47048},"generated":{"line":1,"column":46417}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47130},"generated":{"line":1,"column":46498}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47155},"generated":{"line":1,"column":46522}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47185},"generated":{"line":1,"column":46551}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47267},"generated":{"line":1,"column":46632}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47288},"generated":{"line":1,"column":46652}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47314},"generated":{"line":1,"column":46677}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47396},"generated":{"line":1,"column":46758}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47413},"generated":{"line":1,"column":46774}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47435},"generated":{"line":1,"column":46795}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47517},"generated":{"line":1,"column":46876}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47530},"generated":{"line":1,"column":46888}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47548},"generated":{"line":1,"column":46905}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47630},"generated":{"line":1,"column":46986}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47639},"generated":{"line":1,"column":46994}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47721},"generated":{"line":1,"column":47075}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47762},"generated":{"line":1,"column":47115}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47803},"generated":{"line":1,"column":47155}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47848},"generated":{"line":1,"column":47199}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47893},"generated":{"line":1,"column":47243}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":47975},"generated":{"line":1,"column":47324}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48036},"generated":{"line":1,"column":47384}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48081},"generated":{"line":1,"column":47428}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48142},"generated":{"line":1,"column":47488}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48191},"generated":{"line":1,"column":47536}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48273},"generated":{"line":1,"column":47617}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48315},"generated":{"line":1,"column":47658}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48355},"generated":{"line":1,"column":47697}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48418},"generated":{"line":1,"column":47759}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48464},"generated":{"line":1,"column":47804}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48527},"generated":{"line":1,"column":47866}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48583},"generated":{"line":1,"column":47921}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48665},"generated":{"line":1,"column":48002}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48730},"generated":{"line":1,"column":48066}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48798},"generated":{"line":1,"column":48133}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48861},"generated":{"line":1,"column":48195}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48924},"generated":{"line":1,"column":48257}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48955},"generated":{"line":1,"column":48287}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":48996},"generated":{"line":1,"column":48327}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49009},"generated":{"line":1,"column":48339}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49073},"generated":{"line":1,"column":48402}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49087},"generated":{"line":1,"column":48415}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49092},"generated":{"line":1,"column":48419}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49174},"generated":{"line":1,"column":48500}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49184},"generated":{"line":1,"column":48509}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49188},"generated":{"line":1,"column":48512}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49205},"generated":{"line":1,"column":48528}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49242},"generated":{"line":1,"column":48564}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49254},"generated":{"line":1,"column":48575}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49272},"generated":{"line":1,"column":48592}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49289},"generated":{"line":1,"column":48608}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49306},"generated":{"line":1,"column":48624}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49323},"generated":{"line":1,"column":48640}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49342},"generated":{"line":1,"column":48658}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49360},"generated":{"line":1,"column":48675}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49378},"generated":{"line":1,"column":48692}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49396},"generated":{"line":1,"column":48709}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49409},"generated":{"line":1,"column":48721}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49423},"generated":{"line":1,"column":48734}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49438},"generated":{"line":1,"column":48748}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49450},"generated":{"line":1,"column":48759}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49462},"generated":{"line":1,"column":48770}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49474},"generated":{"line":1,"column":48781}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49491},"generated":{"line":1,"column":48797}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49499},"generated":{"line":1,"column":48804}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49503},"generated":{"line":1,"column":48807}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49560},"generated":{"line":1,"column":48863}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49610},"generated":{"line":1,"column":48912}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","name":"join","original":{"line":20,"column":49615},"generated":{"line":1,"column":48917}},{"source":"node_modules/three-stdlib/shaders/FXAAShader.js","original":{"line":20,"column":49620},"generated":{"line":1,"column":48922}}],"sources":{"node_modules/three-stdlib/shaders/FXAAShader.js":"import { Vector2 } from 'three';\n\n/**\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\n\nconst FXAAShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    resolution: {\n      value: new Vector2(1 / 1024, 1 / 512)\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['precision highp float;', '', 'uniform sampler2D tDiffuse;', '', 'uniform vec2 resolution;', '', 'varying vec2 vUv;', '', '// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)', '', '//----------------------------------------------------------------------------------', '// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag', '// SDK Version: v3.00', '// Email:       gameworks@nvidia.com', '// Site:        http://developer.nvidia.com/', '//', '// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.', '//', '// Redistribution and use in source and binary forms, with or without', '// modification, are permitted provided that the following conditions', '// are met:', '//  * Redistributions of source code must retain the above copyright', '//    notice, this list of conditions and the following disclaimer.', '//  * Redistributions in binary form must reproduce the above copyright', '//    notice, this list of conditions and the following disclaimer in the', '//    documentation and/or other materials provided with the distribution.', '//  * Neither the name of NVIDIA CORPORATION nor the names of its', '//    contributors may be used to endorse or promote products derived', '//    from this software without specific prior written permission.', '//', \"// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\", '// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE', '// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR', '// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR', '// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,', '// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,', '// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR', '// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY', '// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT', '// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE', '// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.', '//', '//----------------------------------------------------------------------------------', '', '#define FXAA_PC 1', '#define FXAA_GLSL_100 1', '#define FXAA_QUALITY_PRESET 12', '', '#define FXAA_GREEN_AS_LUMA 1', '', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_PC_CONSOLE', '    //', '    // The console algorithm for PC is included', '    // for developers targeting really low spec machines.', '    // Likely better to just run FXAA_PC, and use a really low preset.', '    //', '    #define FXAA_PC_CONSOLE 0', '#endif', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_GLSL_120', '    #define FXAA_GLSL_120 0', '#endif', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_GLSL_130', '    #define FXAA_GLSL_130 0', '#endif', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_HLSL_3', '    #define FXAA_HLSL_3 0', '#endif', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_HLSL_4', '    #define FXAA_HLSL_4 0', '#endif', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_HLSL_5', '    #define FXAA_HLSL_5 0', '#endif', '/*==========================================================================*/', '#ifndef FXAA_GREEN_AS_LUMA', '    //', '    // For those using non-linear color,', '    // and either not able to get luma in alpha, or not wanting to,', '    // this enables FXAA to run using green as a proxy for luma.', '    // So with this enabled, no need to pack luma in alpha.', '    //', '    // This will turn off AA on anything which lacks some amount of green.', '    // Pure red and blue or combination of only R and B, will get no AA.', '    //', '    // Might want to lower the settings for both,', '    //    fxaaConsoleEdgeThresholdMin', '    //    fxaaQualityEdgeThresholdMin', '    // In order to insure AA does not get turned off on colors', '    // which contain a minor amount of green.', '    //', '    // 1 = On.', '    // 0 = Off.', '    //', '    #define FXAA_GREEN_AS_LUMA 0', '#endif', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_EARLY_EXIT', '    //', \"    // Controls algorithm's early exit path.\", '    // On PS3 turning this ON adds 2 cycles to the shader.', '    // On 360 turning this OFF adds 10ths of a millisecond to the shader.', '    // Turning this off on console will result in a more blurry image.', '    // So this defaults to on.', '    //', '    // 1 = On.', '    // 0 = Off.', '    //', '    #define FXAA_EARLY_EXIT 1', '#endif', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_DISCARD', '    //', '    // Only valid for PC OpenGL currently.', '    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.', '    //', \"    // 1 = Use discard on pixels which don't need AA.\", '    //     For APIs which enable concurrent TEX+ROP from same surface.', \"    // 0 = Return unchanged color on pixels which don't need AA.\", '    //', '    #define FXAA_DISCARD 0', '#endif', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_FAST_PIXEL_OFFSET', '    //', '    // Used for GLSL 120 only.', '    //', '    // 1 = GL API supports fast pixel offsets', '    // 0 = do not use fast pixel offsets', '    //', '    #ifdef GL_EXT_gpu_shader4', '        #define FXAA_FAST_PIXEL_OFFSET 1', '    #endif', '    #ifdef GL_NV_gpu_shader5', '        #define FXAA_FAST_PIXEL_OFFSET 1', '    #endif', '    #ifdef GL_ARB_gpu_shader5', '        #define FXAA_FAST_PIXEL_OFFSET 1', '    #endif', '    #ifndef FXAA_FAST_PIXEL_OFFSET', '        #define FXAA_FAST_PIXEL_OFFSET 0', '    #endif', '#endif', '/*--------------------------------------------------------------------------*/', '#ifndef FXAA_GATHER4_ALPHA', '    //', '    // 1 = API supports gather4 on alpha channel.', '    // 0 = API does not support gather4 on alpha channel.', '    //', '    #if (FXAA_HLSL_5 == 1)', '        #define FXAA_GATHER4_ALPHA 1', '    #endif', '    #ifdef GL_ARB_gpu_shader5', '        #define FXAA_GATHER4_ALPHA 1', '    #endif', '    #ifdef GL_NV_gpu_shader5', '        #define FXAA_GATHER4_ALPHA 1', '    #endif', '    #ifndef FXAA_GATHER4_ALPHA', '        #define FXAA_GATHER4_ALPHA 0', '    #endif', '#endif', '', '', '/*============================================================================', '                        FXAA QUALITY - TUNING KNOBS', '------------------------------------------------------------------------------', 'NOTE the other tuning knobs are now in the shader function inputs!', '============================================================================*/', '#ifndef FXAA_QUALITY_PRESET', '    //', '    // Choose the quality preset.', '    // This needs to be compiled into the shader as it effects code.', '    // Best option to include multiple presets is to', '    // in each shader define the preset, then include this file.', '    //', '    // OPTIONS', '    // -----------------------------------------------------------------------', '    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)', '    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)', '    // 39       - no dither, very expensive', '    //', '    // NOTES', '    // -----------------------------------------------------------------------', '    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)', '    // 13 = about same speed as FXAA 3.9 and better than 12', '    // 23 = closest to FXAA 3.9 visually and performance wise', '    //  _ = the lowest digit is directly related to performance', '    // _  = the highest digit is directly related to style', '    //', '    #define FXAA_QUALITY_PRESET 12', '#endif', '', '', '/*============================================================================', '', '                           FXAA QUALITY - PRESETS', '', '============================================================================*/', '', '/*============================================================================', '                     FXAA QUALITY - MEDIUM DITHER PRESETS', '============================================================================*/', '#if (FXAA_QUALITY_PRESET == 10)', '    #define FXAA_QUALITY_PS 3', '    #define FXAA_QUALITY_P0 1.5', '    #define FXAA_QUALITY_P1 3.0', '    #define FXAA_QUALITY_P2 12.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 11)', '    #define FXAA_QUALITY_PS 4', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 3.0', '    #define FXAA_QUALITY_P3 12.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 12)', '    #define FXAA_QUALITY_PS 5', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 4.0', '    #define FXAA_QUALITY_P4 12.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 13)', '    #define FXAA_QUALITY_PS 6', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 4.0', '    #define FXAA_QUALITY_P5 12.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 14)', '    #define FXAA_QUALITY_PS 7', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 2.0', '    #define FXAA_QUALITY_P5 4.0', '    #define FXAA_QUALITY_P6 12.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 15)', '    #define FXAA_QUALITY_PS 8', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 2.0', '    #define FXAA_QUALITY_P5 2.0', '    #define FXAA_QUALITY_P6 4.0', '    #define FXAA_QUALITY_P7 12.0', '#endif', '', '/*============================================================================', '                     FXAA QUALITY - LOW DITHER PRESETS', '============================================================================*/', '#if (FXAA_QUALITY_PRESET == 20)', '    #define FXAA_QUALITY_PS 3', '    #define FXAA_QUALITY_P0 1.5', '    #define FXAA_QUALITY_P1 2.0', '    #define FXAA_QUALITY_P2 8.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 21)', '    #define FXAA_QUALITY_PS 4', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 8.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 22)', '    #define FXAA_QUALITY_PS 5', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 8.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 23)', '    #define FXAA_QUALITY_PS 6', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 2.0', '    #define FXAA_QUALITY_P5 8.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 24)', '    #define FXAA_QUALITY_PS 7', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 2.0', '    #define FXAA_QUALITY_P5 3.0', '    #define FXAA_QUALITY_P6 8.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 25)', '    #define FXAA_QUALITY_PS 8', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 2.0', '    #define FXAA_QUALITY_P5 2.0', '    #define FXAA_QUALITY_P6 4.0', '    #define FXAA_QUALITY_P7 8.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 26)', '    #define FXAA_QUALITY_PS 9', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 2.0', '    #define FXAA_QUALITY_P5 2.0', '    #define FXAA_QUALITY_P6 2.0', '    #define FXAA_QUALITY_P7 4.0', '    #define FXAA_QUALITY_P8 8.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 27)', '    #define FXAA_QUALITY_PS 10', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 2.0', '    #define FXAA_QUALITY_P5 2.0', '    #define FXAA_QUALITY_P6 2.0', '    #define FXAA_QUALITY_P7 2.0', '    #define FXAA_QUALITY_P8 4.0', '    #define FXAA_QUALITY_P9 8.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 28)', '    #define FXAA_QUALITY_PS 11', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 2.0', '    #define FXAA_QUALITY_P5 2.0', '    #define FXAA_QUALITY_P6 2.0', '    #define FXAA_QUALITY_P7 2.0', '    #define FXAA_QUALITY_P8 2.0', '    #define FXAA_QUALITY_P9 4.0', '    #define FXAA_QUALITY_P10 8.0', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_QUALITY_PRESET == 29)', '    #define FXAA_QUALITY_PS 12', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.5', '    #define FXAA_QUALITY_P2 2.0', '    #define FXAA_QUALITY_P3 2.0', '    #define FXAA_QUALITY_P4 2.0', '    #define FXAA_QUALITY_P5 2.0', '    #define FXAA_QUALITY_P6 2.0', '    #define FXAA_QUALITY_P7 2.0', '    #define FXAA_QUALITY_P8 2.0', '    #define FXAA_QUALITY_P9 2.0', '    #define FXAA_QUALITY_P10 4.0', '    #define FXAA_QUALITY_P11 8.0', '#endif', '', '/*============================================================================', '                     FXAA QUALITY - EXTREME QUALITY', '============================================================================*/', '#if (FXAA_QUALITY_PRESET == 39)', '    #define FXAA_QUALITY_PS 12', '    #define FXAA_QUALITY_P0 1.0', '    #define FXAA_QUALITY_P1 1.0', '    #define FXAA_QUALITY_P2 1.0', '    #define FXAA_QUALITY_P3 1.0', '    #define FXAA_QUALITY_P4 1.0', '    #define FXAA_QUALITY_P5 1.5', '    #define FXAA_QUALITY_P6 2.0', '    #define FXAA_QUALITY_P7 2.0', '    #define FXAA_QUALITY_P8 2.0', '    #define FXAA_QUALITY_P9 2.0', '    #define FXAA_QUALITY_P10 4.0', '    #define FXAA_QUALITY_P11 8.0', '#endif', '', '', '', '/*============================================================================', '', '                                API PORTING', '', '============================================================================*/', '#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)', '    #define FxaaBool bool', '    #define FxaaDiscard discard', '    #define FxaaFloat float', '    #define FxaaFloat2 vec2', '    #define FxaaFloat3 vec3', '    #define FxaaFloat4 vec4', '    #define FxaaHalf float', '    #define FxaaHalf2 vec2', '    #define FxaaHalf3 vec3', '    #define FxaaHalf4 vec4', '    #define FxaaInt2 ivec2', '    #define FxaaSat(x) clamp(x, 0.0, 1.0)', '    #define FxaaTex sampler2D', '#else', '    #define FxaaBool bool', '    #define FxaaDiscard clip(-1)', '    #define FxaaFloat float', '    #define FxaaFloat2 float2', '    #define FxaaFloat3 float3', '    #define FxaaFloat4 float4', '    #define FxaaHalf half', '    #define FxaaHalf2 half2', '    #define FxaaHalf3 half3', '    #define FxaaHalf4 half4', '    #define FxaaSat(x) saturate(x)', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_GLSL_100 == 1)', '  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)', '  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_GLSL_120 == 1)', '    // Requires,', '    //  #version 120', '    // And at least,', '    //  #extension GL_EXT_gpu_shader4 : enable', '    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)', '    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)', '    #if (FXAA_FAST_PIXEL_OFFSET == 1)', '        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)', '    #else', '        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)', '    #endif', '    #if (FXAA_GATHER4_ALPHA == 1)', '        // use #extension GL_ARB_gpu_shader5 : enable', '        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)', '        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)', '        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)', '        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)', '    #endif', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_GLSL_130 == 1)', '    // Requires \"#version 130\" or better', '    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)', '    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)', '    #if (FXAA_GATHER4_ALPHA == 1)', '        // use #extension GL_ARB_gpu_shader5 : enable', '        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)', '        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)', '        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)', '        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)', '    #endif', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_HLSL_3 == 1)', '    #define FxaaInt2 float2', '    #define FxaaTex sampler2D', '    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))', '    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_HLSL_4 == 1)', '    #define FxaaInt2 int2', '    struct FxaaTex { SamplerState smpl; Texture2D tex; };', '    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)', '    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)', '#endif', '/*--------------------------------------------------------------------------*/', '#if (FXAA_HLSL_5 == 1)', '    #define FxaaInt2 int2', '    struct FxaaTex { SamplerState smpl; Texture2D tex; };', '    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)', '    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)', '    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)', '    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)', '    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)', '    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)', '#endif', '', '', '/*============================================================================', '                   GREEN AS LUMA OPTION SUPPORT FUNCTION', '============================================================================*/', '#if (FXAA_GREEN_AS_LUMA == 0)', '    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }', '#else', '    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }', '#endif', '', '', '', '', '/*============================================================================', '', '                             FXAA3 QUALITY - PC', '', '============================================================================*/', '#if (FXAA_PC == 1)', '/*--------------------------------------------------------------------------*/', 'FxaaFloat4 FxaaPixelShader(', '    //', '    // Use noperspective interpolation here (turn off perspective interpolation).', '    // {xy} = center of pixel', '    FxaaFloat2 pos,', '    //', '    // Used only for FXAA Console, and not used on the 360 version.', '    // Use noperspective interpolation here (turn off perspective interpolation).', '    // {xy_} = upper left of pixel', '    // {_zw} = lower right of pixel', '    FxaaFloat4 fxaaConsolePosPos,', '    //', '    // Input color texture.', '    // {rgb_} = color in linear or perceptual color space', '    // if (FXAA_GREEN_AS_LUMA == 0)', '    //     {__a} = luma in perceptual color space (not linear)', '    FxaaTex tex,', '    //', '    // Only used on the optimized 360 version of FXAA Console.', '    // For everything but 360, just use the same input here as for \"tex\".', '    // For 360, same texture, just alias with a 2nd sampler.', '    // This sampler needs to have an exponent bias of -1.', '    FxaaTex fxaaConsole360TexExpBiasNegOne,', '    //', '    // Only used on the optimized 360 version of FXAA Console.', '    // For everything but 360, just use the same input here as for \"tex\".', '    // For 360, same texture, just alias with a 3nd sampler.', '    // This sampler needs to have an exponent bias of -2.', '    FxaaTex fxaaConsole360TexExpBiasNegTwo,', '    //', '    // Only used on FXAA Quality.', '    // This must be from a constant/uniform.', '    // {x_} = 1.0/screenWidthInPixels', '    // {_y} = 1.0/screenHeightInPixels', '    FxaaFloat2 fxaaQualityRcpFrame,', '    //', '    // Only used on FXAA Console.', '    // This must be from a constant/uniform.', '    // This effects sub-pixel AA quality and inversely sharpness.', '    //   Where N ranges between,', '    //     N = 0.50 (default)', '    //     N = 0.33 (sharper)', '    // {x__} = -N/screenWidthInPixels', '    // {_y_} = -N/screenHeightInPixels', '    // {_z_} =  N/screenWidthInPixels', '    // {__w} =  N/screenHeightInPixels', '    FxaaFloat4 fxaaConsoleRcpFrameOpt,', '    //', '    // Only used on FXAA Console.', '    // Not used on 360, but used on PS3 and PC.', '    // This must be from a constant/uniform.', '    // {x__} = -2.0/screenWidthInPixels', '    // {_y_} = -2.0/screenHeightInPixels', '    // {_z_} =  2.0/screenWidthInPixels', '    // {__w} =  2.0/screenHeightInPixels', '    FxaaFloat4 fxaaConsoleRcpFrameOpt2,', '    //', '    // Only used on FXAA Console.', '    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.', '    // This must be from a constant/uniform.', '    // {x__} =  8.0/screenWidthInPixels', '    // {_y_} =  8.0/screenHeightInPixels', '    // {_z_} = -4.0/screenWidthInPixels', '    // {__w} = -4.0/screenHeightInPixels', '    FxaaFloat4 fxaaConsole360RcpFrameOpt2,', '    //', '    // Only used on FXAA Quality.', '    // This used to be the FXAA_QUALITY_SUBPIX define.', '    // It is here now to allow easier tuning.', '    // Choose the amount of sub-pixel aliasing removal.', '    // This can effect sharpness.', '    //   1.00 - upper limit (softer)', '    //   0.75 - default amount of filtering', '    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)', '    //   0.25 - almost off', '    //   0.00 - completely off', '    FxaaFloat fxaaQualitySubpix,', '    //', '    // Only used on FXAA Quality.', '    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.', '    // It is here now to allow easier tuning.', '    // The minimum amount of local contrast required to apply algorithm.', '    //   0.333 - too little (faster)', '    //   0.250 - low quality', '    //   0.166 - default', '    //   0.125 - high quality', '    //   0.063 - overkill (slower)', '    FxaaFloat fxaaQualityEdgeThreshold,', '    //', '    // Only used on FXAA Quality.', '    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.', '    // It is here now to allow easier tuning.', '    // Trims the algorithm from processing darks.', '    //   0.0833 - upper limit (default, the start of visible unfiltered edges)', '    //   0.0625 - high quality (faster)', '    //   0.0312 - visible limit (slower)', '    // Special notes when using FXAA_GREEN_AS_LUMA,', '    //   Likely want to set this to zero.', '    //   As colors that are mostly not-green', '    //   will appear very dark in the green channel!', '    //   Tune by looking at mostly non-green content,', '    //   then start at zero and increase until aliasing is a problem.', '    FxaaFloat fxaaQualityEdgeThresholdMin,', '    //', '    // Only used on FXAA Console.', '    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.', '    // It is here now to allow easier tuning.', '    // This does not effect PS3, as this needs to be compiled in.', '    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.', '    //   Due to the PS3 being ALU bound,', '    //   there are only three safe values here: 2 and 4 and 8.', '    //   These options use the shaders ability to a free *|/ by 2|4|8.', '    // For all other platforms can be a non-power of two.', '    //   8.0 is sharper (default!!!)', '    //   4.0 is softer', '    //   2.0 is really soft (good only for vector graphics inputs)', '    FxaaFloat fxaaConsoleEdgeSharpness,', '    //', '    // Only used on FXAA Console.', '    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.', '    // It is here now to allow easier tuning.', '    // This does not effect PS3, as this needs to be compiled in.', '    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.', '    //   Due to the PS3 being ALU bound,', '    //   there are only two safe values here: 1/4 and 1/8.', '    //   These options use the shaders ability to a free *|/ by 2|4|8.', '    // The console setting has a different mapping than the quality setting.', '    // Other platforms can use other values.', '    //   0.125 leaves less aliasing, but is softer (default!!!)', '    //   0.25 leaves more aliasing, and is sharper', '    FxaaFloat fxaaConsoleEdgeThreshold,', '    //', '    // Only used on FXAA Console.', '    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.', '    // It is here now to allow easier tuning.', '    // Trims the algorithm from processing darks.', '    // The console setting has a different mapping than the quality setting.', '    // This only applies when FXAA_EARLY_EXIT is 1.', '    // This does not apply to PS3,', '    // PS3 was simplified to avoid more shader instructions.', '    //   0.06 - faster but more aliasing in darks', '    //   0.05 - default', '    //   0.04 - slower and less aliasing in darks', '    // Special notes when using FXAA_GREEN_AS_LUMA,', '    //   Likely want to set this to zero.', '    //   As colors that are mostly not-green', '    //   will appear very dark in the green channel!', '    //   Tune by looking at mostly non-green content,', '    //   then start at zero and increase until aliasing is a problem.', '    FxaaFloat fxaaConsoleEdgeThresholdMin,', '    //', '    // Extra constants for 360 FXAA Console only.', '    // Use zeros or anything else for other platforms.', '    // These must be in physical constant registers and NOT immediates.', '    // Immediates will result in compiler un-optimizing.', '    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)', '    FxaaFloat4 fxaaConsole360ConstDir', ') {', '/*--------------------------------------------------------------------------*/', '    FxaaFloat2 posM;', '    posM.x = pos.x;', '    posM.y = pos.y;', '    #if (FXAA_GATHER4_ALPHA == 1)', '        #if (FXAA_DISCARD == 0)', '            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);', '            #if (FXAA_GREEN_AS_LUMA == 0)', '                #define lumaM rgbyM.w', '            #else', '                #define lumaM rgbyM.y', '            #endif', '        #endif', '        #if (FXAA_GREEN_AS_LUMA == 0)', '            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);', '            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));', '        #else', '            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);', '            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));', '        #endif', '        #if (FXAA_DISCARD == 1)', '            #define lumaM luma4A.w', '        #endif', '        #define lumaE luma4A.z', '        #define lumaS luma4A.x', '        #define lumaSE luma4A.y', '        #define lumaNW luma4B.w', '        #define lumaN luma4B.z', '        #define lumaW luma4B.x', '    #else', '        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);', '        #if (FXAA_GREEN_AS_LUMA == 0)', '            #define lumaM rgbyM.w', '        #else', '            #define lumaM rgbyM.y', '        #endif', '        #if (FXAA_GLSL_100 == 1)', '          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));', '        #else', '          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));', '        #endif', '    #endif', '/*--------------------------------------------------------------------------*/', '    FxaaFloat maxSM = max(lumaS, lumaM);', '    FxaaFloat minSM = min(lumaS, lumaM);', '    FxaaFloat maxESM = max(lumaE, maxSM);', '    FxaaFloat minESM = min(lumaE, minSM);', '    FxaaFloat maxWN = max(lumaN, lumaW);', '    FxaaFloat minWN = min(lumaN, lumaW);', '    FxaaFloat rangeMax = max(maxWN, maxESM);', '    FxaaFloat rangeMin = min(minWN, minESM);', '    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;', '    FxaaFloat range = rangeMax - rangeMin;', '    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);', '    FxaaBool earlyExit = range < rangeMaxClamped;', '/*--------------------------------------------------------------------------*/', '    if(earlyExit)', '        #if (FXAA_DISCARD == 1)', '            FxaaDiscard;', '        #else', '            return rgbyM;', '        #endif', '/*--------------------------------------------------------------------------*/', '    #if (FXAA_GATHER4_ALPHA == 0)', '        #if (FXAA_GLSL_100 == 1)', '          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));', '        #else', '          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));', '          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));', '        #endif', '    #else', '        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));', '        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));', '    #endif', '/*--------------------------------------------------------------------------*/', '    FxaaFloat lumaNS = lumaN + lumaS;', '    FxaaFloat lumaWE = lumaW + lumaE;', '    FxaaFloat subpixRcpRange = 1.0/range;', '    FxaaFloat subpixNSWE = lumaNS + lumaWE;', '    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;', '    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;', '/*--------------------------------------------------------------------------*/', '    FxaaFloat lumaNESE = lumaNE + lumaSE;', '    FxaaFloat lumaNWNE = lumaNW + lumaNE;', '    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;', '    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;', '/*--------------------------------------------------------------------------*/', '    FxaaFloat lumaNWSW = lumaNW + lumaSW;', '    FxaaFloat lumaSWSE = lumaSW + lumaSE;', '    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);', '    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);', '    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;', '    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;', '    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;', '    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;', '/*--------------------------------------------------------------------------*/', '    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;', '    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;', '    FxaaBool horzSpan = edgeHorz >= edgeVert;', '    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;', '/*--------------------------------------------------------------------------*/', '    if(!horzSpan) lumaN = lumaW;', '    if(!horzSpan) lumaS = lumaE;', '    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;', '    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;', '/*--------------------------------------------------------------------------*/', '    FxaaFloat gradientN = lumaN - lumaM;', '    FxaaFloat gradientS = lumaS - lumaM;', '    FxaaFloat lumaNN = lumaN + lumaM;', '    FxaaFloat lumaSS = lumaS + lumaM;', '    FxaaBool pairN = abs(gradientN) >= abs(gradientS);', '    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));', '    if(pairN) lengthSign = -lengthSign;', '    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);', '/*--------------------------------------------------------------------------*/', '    FxaaFloat2 posB;', '    posB.x = posM.x;', '    posB.y = posM.y;', '    FxaaFloat2 offNP;', '    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;', '    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;', '    if(!horzSpan) posB.x += lengthSign * 0.5;', '    if( horzSpan) posB.y += lengthSign * 0.5;', '/*--------------------------------------------------------------------------*/', '    FxaaFloat2 posN;', '    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;', '    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;', '    FxaaFloat2 posP;', '    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;', '    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;', '    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;', '    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));', '    FxaaFloat subpixE = subpixC * subpixC;', '    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));', '/*--------------------------------------------------------------------------*/', '    if(!pairN) lumaNN = lumaSS;', '    FxaaFloat gradientScaled = gradient * 1.0/4.0;', '    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;', '    FxaaFloat subpixF = subpixD * subpixE;', '    FxaaBool lumaMLTZero = lumaMM < 0.0;', '/*--------------------------------------------------------------------------*/', '    lumaEndN -= lumaNN * 0.5;', '    lumaEndP -= lumaNN * 0.5;', '    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;', '    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;', '    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;', '    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;', '    FxaaBool doneNP = (!doneN) || (!doneP);', '    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;', '    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;', '/*--------------------------------------------------------------------------*/', '    if(doneNP) {', '        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '        doneN = abs(lumaEndN) >= gradientScaled;', '        doneP = abs(lumaEndP) >= gradientScaled;', '        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;', '        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;', '        doneNP = (!doneN) || (!doneP);', '        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;', '        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;', '/*--------------------------------------------------------------------------*/', '        #if (FXAA_QUALITY_PS > 3)', '        if(doneNP) {', '            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '            doneN = abs(lumaEndN) >= gradientScaled;', '            doneP = abs(lumaEndP) >= gradientScaled;', '            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;', '            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;', '            doneNP = (!doneN) || (!doneP);', '            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;', '            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;', '/*--------------------------------------------------------------------------*/', '            #if (FXAA_QUALITY_PS > 4)', '            if(doneNP) {', '                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '                doneN = abs(lumaEndN) >= gradientScaled;', '                doneP = abs(lumaEndP) >= gradientScaled;', '                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;', '                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;', '                doneNP = (!doneN) || (!doneP);', '                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;', '                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;', '/*--------------------------------------------------------------------------*/', '                #if (FXAA_QUALITY_PS > 5)', '                if(doneNP) {', '                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '                    doneN = abs(lumaEndN) >= gradientScaled;', '                    doneP = abs(lumaEndP) >= gradientScaled;', '                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;', '                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;', '                    doneNP = (!doneN) || (!doneP);', '                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;', '                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;', '/*--------------------------------------------------------------------------*/', '                    #if (FXAA_QUALITY_PS > 6)', '                    if(doneNP) {', '                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '                        doneN = abs(lumaEndN) >= gradientScaled;', '                        doneP = abs(lumaEndP) >= gradientScaled;', '                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;', '                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;', '                        doneNP = (!doneN) || (!doneP);', '                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;', '                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;', '/*--------------------------------------------------------------------------*/', '                        #if (FXAA_QUALITY_PS > 7)', '                        if(doneNP) {', '                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '                            doneN = abs(lumaEndN) >= gradientScaled;', '                            doneP = abs(lumaEndP) >= gradientScaled;', '                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;', '                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;', '                            doneNP = (!doneN) || (!doneP);', '                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;', '                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;', '/*--------------------------------------------------------------------------*/', '    #if (FXAA_QUALITY_PS > 8)', '    if(doneNP) {', '        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '        doneN = abs(lumaEndN) >= gradientScaled;', '        doneP = abs(lumaEndP) >= gradientScaled;', '        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;', '        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;', '        doneNP = (!doneN) || (!doneP);', '        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;', '        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;', '/*--------------------------------------------------------------------------*/', '        #if (FXAA_QUALITY_PS > 9)', '        if(doneNP) {', '            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '            doneN = abs(lumaEndN) >= gradientScaled;', '            doneP = abs(lumaEndP) >= gradientScaled;', '            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;', '            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;', '            doneNP = (!doneN) || (!doneP);', '            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;', '            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;', '/*--------------------------------------------------------------------------*/', '            #if (FXAA_QUALITY_PS > 10)', '            if(doneNP) {', '                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '                doneN = abs(lumaEndN) >= gradientScaled;', '                doneP = abs(lumaEndP) >= gradientScaled;', '                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;', '                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;', '                doneNP = (!doneN) || (!doneP);', '                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;', '                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;', '/*--------------------------------------------------------------------------*/', '                #if (FXAA_QUALITY_PS > 11)', '                if(doneNP) {', '                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '                    doneN = abs(lumaEndN) >= gradientScaled;', '                    doneP = abs(lumaEndP) >= gradientScaled;', '                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;', '                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;', '                    doneNP = (!doneN) || (!doneP);', '                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;', '                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;', '/*--------------------------------------------------------------------------*/', '                    #if (FXAA_QUALITY_PS > 12)', '                    if(doneNP) {', '                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));', '                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));', '                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;', '                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;', '                        doneN = abs(lumaEndN) >= gradientScaled;', '                        doneP = abs(lumaEndP) >= gradientScaled;', '                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;', '                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;', '                        doneNP = (!doneN) || (!doneP);', '                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;', '                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;', '/*--------------------------------------------------------------------------*/', '                    }', '                    #endif', '/*--------------------------------------------------------------------------*/', '                }', '                #endif', '/*--------------------------------------------------------------------------*/', '            }', '            #endif', '/*--------------------------------------------------------------------------*/', '        }', '        #endif', '/*--------------------------------------------------------------------------*/', '    }', '    #endif', '/*--------------------------------------------------------------------------*/', '                        }', '                        #endif', '/*--------------------------------------------------------------------------*/', '                    }', '                    #endif', '/*--------------------------------------------------------------------------*/', '                }', '                #endif', '/*--------------------------------------------------------------------------*/', '            }', '            #endif', '/*--------------------------------------------------------------------------*/', '        }', '        #endif', '/*--------------------------------------------------------------------------*/', '    }', '/*--------------------------------------------------------------------------*/', '    FxaaFloat dstN = posM.x - posN.x;', '    FxaaFloat dstP = posP.x - posM.x;', '    if(!horzSpan) dstN = posM.y - posN.y;', '    if(!horzSpan) dstP = posP.y - posM.y;', '/*--------------------------------------------------------------------------*/', '    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;', '    FxaaFloat spanLength = (dstP + dstN);', '    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;', '    FxaaFloat spanLengthRcp = 1.0/spanLength;', '/*--------------------------------------------------------------------------*/', '    FxaaBool directionN = dstN < dstP;', '    FxaaFloat dst = min(dstN, dstP);', '    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;', '    FxaaFloat subpixG = subpixF * subpixF;', '    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;', '    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;', '/*--------------------------------------------------------------------------*/', '    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;', '    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);', '    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;', '    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;', '    #if (FXAA_DISCARD == 1)', '        return FxaaTexTop(tex, posM);', '    #else', '        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);', '    #endif', '}', '/*==========================================================================*/', '#endif', '', 'void main() {', '  gl_FragColor = FxaaPixelShader(', '    vUv,', '    vec4(0.0),', '    tDiffuse,', '    tDiffuse,', '    tDiffuse,', '    resolution,', '    vec4(0.0),', '    vec4(0.0),', '    vec4(0.0),', '    0.75,', '    0.166,', '    0.0833,', '    0.0,', '    0.0,', '    0.0,', '    vec4(0.0)', '  );', '', '  // TODO avoid querying texture twice for same texel', '  gl_FragColor.a = texture2D(tDiffuse, vUv).a;', '}'].join('\\n')\n};\n\nexport { FXAAShader };\n"},"lineCount":null}},"error":null,"hash":"40806855412509e0b97ed997fef92c99","cacheData":{"env":{}}}