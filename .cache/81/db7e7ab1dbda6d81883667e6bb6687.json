{"id":"wFZD","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1724625312988}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.HorizontalBlurShader=void 0;const e=exports.HorizontalBlurShader={uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:\"\\n      varying vec2 vUv;\\n\\n      void main() {\\n\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n      }\\n  \",fragmentShader:\"\\n    uniform sampler2D tDiffuse;\\n    uniform float h;\\n\\n    varying vec2 vUv;\\n\\n    void main() {\\n\\n    \\tvec4 sum = vec4( 0.0 );\\n\\n    \\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\\n    \\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\\n    \\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\\n    \\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\\n    \\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\\n    \\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\\n    \\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\\n    \\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\\n    \\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\\n\\n    \\tgl_FragColor = sum;\\n\\n    }\\n  \"};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":13}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":20}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":35}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":43}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":56}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":57}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":64}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":68}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":76}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":57,"column":1},"generated":{"line":1,"column":102}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":10,"column":0},"generated":{"line":1,"column":104}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"HorizontalBlurShader","original":{"line":10,"column":6},"generated":{"line":1,"column":110}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"exports","original":{"line":10,"column":26},"generated":{"line":1,"column":112}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"HorizontalBlurShader","original":{"line":10,"column":26},"generated":{"line":1,"column":120}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":10,"column":29},"generated":{"line":1,"column":141}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"uniforms","original":{"line":11,"column":2},"generated":{"line":1,"column":142}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":11,"column":12},"generated":{"line":1,"column":151}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"tDiffuse","original":{"line":12,"column":4},"generated":{"line":1,"column":152}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":12,"column":14},"generated":{"line":1,"column":161}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"value","original":{"line":13,"column":6},"generated":{"line":1,"column":162}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":13,"column":13},"generated":{"line":1,"column":168}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"h","original":{"line":15,"column":4},"generated":{"line":1,"column":174}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":15,"column":7},"generated":{"line":1,"column":176}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"value","original":{"line":16,"column":6},"generated":{"line":1,"column":177}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":16,"column":13},"generated":{"line":1,"column":183}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":16,"column":19},"generated":{"line":1,"column":185}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"vertexShader","original":{"line":19,"column":2},"generated":{"line":1,"column":191}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":21,"column":2},"generated":{"line":1,"column":204}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","name":"fragmentShader","original":{"line":31,"column":2},"generated":{"line":1,"column":374}},{"source":"node_modules/three-stdlib/shaders/HorizontalBlurShader.js","original":{"line":33,"column":2},"generated":{"line":1,"column":389}}],"sources":{"node_modules/three-stdlib/shaders/HorizontalBlurShader.js":"/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\nconst HorizontalBlurShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    h: {\n      value: 1.0 / 512.0\n    }\n  },\n  vertexShader:\n  /* glsl */\n  `\n      varying vec2 vUv;\n\n      void main() {\n\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n      }\n  `,\n  fragmentShader:\n  /* glsl */\n  `\n    uniform sampler2D tDiffuse;\n    uniform float h;\n\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvec4 sum = vec4( 0.0 );\n\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\n\n    \tgl_FragColor = sum;\n\n    }\n  `\n};\n\nexport { HorizontalBlurShader };\n"},"lineCount":null}},"error":null,"hash":"1791b0acf380bdf1b33ddecf18439ab5","cacheData":{"env":{}}}