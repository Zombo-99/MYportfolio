{"id":"aMej","dependencies":[{"name":"/home/moh/Desktop/MYPortfolio/package.json","includedInParent":true,"mtime":1725356897845},{"name":"/home/moh/Desktop/MYPortfolio/node_modules/three-stdlib/package.json","includedInParent":true,"mtime":1724625312988}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ParallaxShader=void 0;const t=exports.ParallaxShader={modes:{none:\"NO_PARALLAX\",basic:\"USE_BASIC_PARALLAX\",steep:\"USE_STEEP_PARALLAX\",occlusion:\"USE_OCLUSION_PARALLAX\",relief:\"USE_RELIEF_PARALLAX\"},uniforms:{bumpMap:{value:null},map:{value:null},parallaxScale:{value:null},parallaxMinLayers:{value:null},parallaxMaxLayers:{value:null}},vertexShader:[\"varying vec2 vUv;\",\"varying vec3 vViewPosition;\",\"varying vec3 vNormal;\",\"void main() {\",\"\\tvUv = uv;\",\"\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"\\tvViewPosition = -mvPosition.xyz;\",\"\\tvNormal = normalize( normalMatrix * normal );\",\"\\tgl_Position = projectionMatrix * mvPosition;\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D bumpMap;\",\"uniform sampler2D map;\",\"uniform float parallaxScale;\",\"uniform float parallaxMinLayers;\",\"uniform float parallaxMaxLayers;\",\"varying vec2 vUv;\",\"varying vec3 vViewPosition;\",\"varying vec3 vNormal;\",\"#ifdef USE_BASIC_PARALLAX\",\"\\tvec2 parallaxMap( in vec3 V ) {\",\"\\t\\tfloat initialHeight = texture2D( bumpMap, vUv ).r;\",\"\\t\\tvec2 texCoordOffset = parallaxScale * V.xy * initialHeight;\",\"\\t\\treturn vUv - texCoordOffset;\",\"\\t}\",\"#else\",\"\\tvec2 parallaxMap( in vec3 V ) {\",\"\\t\\tfloat numLayers = mix( parallaxMaxLayers, parallaxMinLayers, abs( dot( vec3( 0.0, 0.0, 1.0 ), V ) ) );\",\"\\t\\tfloat layerHeight = 1.0 / numLayers;\",\"\\t\\tfloat currentLayerHeight = 0.0;\",\"\\t\\tvec2 dtex = parallaxScale * V.xy / V.z / numLayers;\",\"\\t\\tvec2 currentTextureCoords = vUv;\",\"\\t\\tfloat heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\"\\t\\tfor ( int i = 0; i < 30; i += 1 ) {\",\"\\t\\t\\tif ( heightFromTexture <= currentLayerHeight ) {\",\"\\t\\t\\t\\tbreak;\",\"\\t\\t\\t}\",\"\\t\\t\\tcurrentLayerHeight += layerHeight;\",\"\\t\\t\\tcurrentTextureCoords -= dtex;\",\"\\t\\t\\theightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\"\\t\\t}\",\"\\t\\t#ifdef USE_STEEP_PARALLAX\",\"\\t\\t\\treturn currentTextureCoords;\",\"\\t\\t#elif defined( USE_RELIEF_PARALLAX )\",\"\\t\\t\\tvec2 deltaTexCoord = dtex / 2.0;\",\"\\t\\t\\tfloat deltaHeight = layerHeight / 2.0;\",\"\\t\\t\\tcurrentTextureCoords += deltaTexCoord;\",\"\\t\\t\\tcurrentLayerHeight -= deltaHeight;\",\"\\t\\t\\tconst int numSearches = 5;\",\"\\t\\t\\tfor ( int i = 0; i < numSearches; i += 1 ) {\",\"\\t\\t\\t\\tdeltaTexCoord /= 2.0;\",\"\\t\\t\\t\\tdeltaHeight /= 2.0;\",\"\\t\\t\\t\\theightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\"\\t\\t\\t\\tif( heightFromTexture > currentLayerHeight ) {\",\"\\t\\t\\t\\t\\tcurrentTextureCoords -= deltaTexCoord;\",\"\\t\\t\\t\\t\\tcurrentLayerHeight += deltaHeight;\",\"\\t\\t\\t\\t} else {\",\"\\t\\t\\t\\t\\tcurrentTextureCoords += deltaTexCoord;\",\"\\t\\t\\t\\t\\tcurrentLayerHeight -= deltaHeight;\",\"\\t\\t\\t\\t}\",\"\\t\\t\\t}\",\"\\t\\t\\treturn currentTextureCoords;\",\"\\t\\t#elif defined( USE_OCLUSION_PARALLAX )\",\"\\t\\t\\tvec2 prevTCoords = currentTextureCoords + dtex;\",\"\\t\\t\\tfloat nextH = heightFromTexture - currentLayerHeight;\",\"\\t\\t\\tfloat prevH = texture2D( bumpMap, prevTCoords ).r - currentLayerHeight + layerHeight;\",\"\\t\\t\\tfloat weight = nextH / ( nextH - prevH );\",\"\\t\\t\\treturn prevTCoords * weight + currentTextureCoords * ( 1.0 - weight );\",\"\\t\\t#else\",\"\\t\\t\\treturn vUv;\",\"\\t\\t#endif\",\"\\t}\",\"#endif\",\"vec2 perturbUv( vec3 surfPosition, vec3 surfNormal, vec3 viewPosition ) {\",\"\\tvec2 texDx = dFdx( vUv );\",\"\\tvec2 texDy = dFdy( vUv );\",\"\\tvec3 vSigmaX = dFdx( surfPosition );\",\"\\tvec3 vSigmaY = dFdy( surfPosition );\",\"\\tvec3 vR1 = cross( vSigmaY, surfNormal );\",\"\\tvec3 vR2 = cross( surfNormal, vSigmaX );\",\"\\tfloat fDet = dot( vSigmaX, vR1 );\",\"\\tvec2 vProjVscr = ( 1.0 / fDet ) * vec2( dot( vR1, viewPosition ), dot( vR2, viewPosition ) );\",\"\\tvec3 vProjVtex;\",\"\\tvProjVtex.xy = texDx * vProjVscr.x + texDy * vProjVscr.y;\",\"\\tvProjVtex.z = dot( surfNormal, viewPosition );\",\"\\treturn parallaxMap( vProjVtex );\",\"}\",\"void main() {\",\"\\tvec2 mapUv = perturbUv( -vViewPosition, normalize( vNormal ), normalize( vViewPosition ) );\",\"\\tgl_FragColor = texture2D( map, mapUv );\",\"}\"].join(\"\\n\")};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":0}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":13}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":20}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":35}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":43}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":56}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":57}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":64}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":68}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":76}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":52,"column":1},"generated":{"line":1,"column":96}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":5,"column":0},"generated":{"line":1,"column":98}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"ParallaxShader","original":{"line":5,"column":6},"generated":{"line":1,"column":104}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"exports","original":{"line":5,"column":20},"generated":{"line":1,"column":106}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"ParallaxShader","original":{"line":5,"column":20},"generated":{"line":1,"column":114}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":5,"column":23},"generated":{"line":1,"column":129}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"modes","original":{"line":7,"column":2},"generated":{"line":1,"column":130}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":7,"column":9},"generated":{"line":1,"column":136}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"none","original":{"line":8,"column":4},"generated":{"line":1,"column":137}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":8,"column":10},"generated":{"line":1,"column":142}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"basic","original":{"line":9,"column":4},"generated":{"line":1,"column":156}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":9,"column":11},"generated":{"line":1,"column":162}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"steep","original":{"line":10,"column":4},"generated":{"line":1,"column":183}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":10,"column":11},"generated":{"line":1,"column":189}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"occlusion","original":{"line":11,"column":4},"generated":{"line":1,"column":210}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":11,"column":15},"generated":{"line":1,"column":220}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"relief","original":{"line":13,"column":4},"generated":{"line":1,"column":244}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":13,"column":12},"generated":{"line":1,"column":251}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"uniforms","original":{"line":15,"column":2},"generated":{"line":1,"column":274}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":15,"column":12},"generated":{"line":1,"column":283}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"bumpMap","original":{"line":16,"column":4},"generated":{"line":1,"column":284}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":16,"column":13},"generated":{"line":1,"column":292}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"value","original":{"line":17,"column":6},"generated":{"line":1,"column":293}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":17,"column":13},"generated":{"line":1,"column":299}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"map","original":{"line":19,"column":4},"generated":{"line":1,"column":305}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":19,"column":9},"generated":{"line":1,"column":309}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"value","original":{"line":20,"column":6},"generated":{"line":1,"column":310}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":20,"column":13},"generated":{"line":1,"column":316}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"parallaxScale","original":{"line":22,"column":4},"generated":{"line":1,"column":322}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":22,"column":19},"generated":{"line":1,"column":336}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"value","original":{"line":23,"column":6},"generated":{"line":1,"column":337}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":23,"column":13},"generated":{"line":1,"column":343}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"parallaxMinLayers","original":{"line":25,"column":4},"generated":{"line":1,"column":349}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":25,"column":23},"generated":{"line":1,"column":367}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"value","original":{"line":26,"column":6},"generated":{"line":1,"column":368}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":26,"column":13},"generated":{"line":1,"column":374}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"parallaxMaxLayers","original":{"line":28,"column":4},"generated":{"line":1,"column":380}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":28,"column":23},"generated":{"line":1,"column":398}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"value","original":{"line":29,"column":6},"generated":{"line":1,"column":399}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":29,"column":13},"generated":{"line":1,"column":405}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"vertexShader","original":{"line":32,"column":2},"generated":{"line":1,"column":412}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":16},"generated":{"line":1,"column":425}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":17},"generated":{"line":1,"column":426}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":38},"generated":{"line":1,"column":446}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":69},"generated":{"line":1,"column":476}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":94},"generated":{"line":1,"column":500}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":111},"generated":{"line":1,"column":516}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":125},"generated":{"line":1,"column":530}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":188},"generated":{"line":1,"column":593}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":225},"generated":{"line":1,"column":630}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":275},"generated":{"line":1,"column":680}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":324},"generated":{"line":1,"column":729}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"join","original":{"line":32,"column":329},"generated":{"line":1,"column":734}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":32,"column":334},"generated":{"line":1,"column":739}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"fragmentShader","original":{"line":33,"column":2},"generated":{"line":1,"column":745}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":18},"generated":{"line":1,"column":760}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":19},"generated":{"line":1,"column":761}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":49},"generated":{"line":1,"column":790}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":75},"generated":{"line":1,"column":815}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":107},"generated":{"line":1,"column":846}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":143},"generated":{"line":1,"column":881}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":179},"generated":{"line":1,"column":916}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":200},"generated":{"line":1,"column":936}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":231},"generated":{"line":1,"column":966}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":256},"generated":{"line":1,"column":990}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":285},"generated":{"line":1,"column":1018}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":33,"column":321},"generated":{"line":1,"column":1054}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":36,"column":2},"generated":{"line":1,"column":1111}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":36,"column":67},"generated":{"line":1,"column":1177}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":36,"column":101},"generated":{"line":1,"column":1212}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":36,"column":107},"generated":{"line":1,"column":1218}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":36,"column":116},"generated":{"line":1,"column":1226}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":37,"column":2},"generated":{"line":1,"column":1262}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":37,"column":110},"generated":{"line":1,"column":1371}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":37,"column":152},"generated":{"line":1,"column":1414}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":38,"column":2},"generated":{"line":1,"column":1452}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":38,"column":59},"generated":{"line":1,"column":1510}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":38,"column":97},"generated":{"line":1,"column":1549}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":41,"column":2},"generated":{"line":1,"column":1627}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":41,"column":43},"generated":{"line":1,"column":1669}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":41,"column":98},"generated":{"line":1,"column":1726}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":41,"column":112},"generated":{"line":1,"column":1743}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":41,"column":120},"generated":{"line":1,"column":1753}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":42,"column":2},"generated":{"line":1,"column":1796}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":42,"column":38},"generated":{"line":1,"column":1834}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":42,"column":110},"generated":{"line":1,"column":1908}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":42,"column":117},"generated":{"line":1,"column":1916}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":42,"column":148},"generated":{"line":1,"column":1948}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":42,"column":183},"generated":{"line":1,"column":1985}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":42,"column":225},"generated":{"line":1,"column":2028}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":42,"column":264},"generated":{"line":1,"column":2069}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":43,"column":2},"generated":{"line":1,"column":2116}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":43,"column":47},"generated":{"line":1,"column":2163}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":44,"column":2},"generated":{"line":1,"column":2206}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":44,"column":35},"generated":{"line":1,"column":2241}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":44,"column":86},"generated":{"line":1,"column":2294}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":44,"column":115},"generated":{"line":1,"column":2326}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":44,"column":142},"generated":{"line":1,"column":2356}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":45,"column":2},"generated":{"line":1,"column":2432}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":46,"column":2},"generated":{"line":1,"column":2489}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":46,"column":49},"generated":{"line":1,"column":2540}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":46,"column":92},"generated":{"line":1,"column":2587}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":47,"column":2},"generated":{"line":1,"column":2606}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":47,"column":49},"generated":{"line":1,"column":2657}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":47,"column":92},"generated":{"line":1,"column":2704}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":47,"column":101},"generated":{"line":1,"column":2716}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":47,"column":109},"generated":{"line":1,"column":2726}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":47,"column":144},"generated":{"line":1,"column":2763}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":47,"column":188},"generated":{"line":1,"column":2808}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":48,"column":2},"generated":{"line":1,"column":2864}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":48,"column":62},"generated":{"line":1,"column":2926}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":49,"column":2},"generated":{"line":1,"column":3020}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":50,"column":2},"generated":{"line":1,"column":3070}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":50,"column":79},"generated":{"line":1,"column":3149}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":2},"generated":{"line":1,"column":3161}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":20},"generated":{"line":1,"column":3181}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":32},"generated":{"line":1,"column":3194}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":38},"generated":{"line":1,"column":3200}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":48},"generated":{"line":1,"column":3209}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":125},"generated":{"line":1,"column":3285}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":155},"generated":{"line":1,"column":3315}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":185},"generated":{"line":1,"column":3345}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":226},"generated":{"line":1,"column":3386}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":267},"generated":{"line":1,"column":3427}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":312},"generated":{"line":1,"column":3472}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":357},"generated":{"line":1,"column":3517}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":395},"generated":{"line":1,"column":3555}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":493},"generated":{"line":1,"column":3653}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":513},"generated":{"line":1,"column":3673}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":575},"generated":{"line":1,"column":3735}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":626},"generated":{"line":1,"column":3786}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":663},"generated":{"line":1,"column":3823}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":668},"generated":{"line":1,"column":3827}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":685},"generated":{"line":1,"column":3843}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":781},"generated":{"line":1,"column":3939}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":825},"generated":{"line":1,"column":3983}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","name":"join","original":{"line":51,"column":830},"generated":{"line":1,"column":3988}},{"source":"node_modules/three-stdlib/shaders/ParallaxShader.js","original":{"line":51,"column":835},"generated":{"line":1,"column":3993}}],"sources":{"node_modules/three-stdlib/shaders/ParallaxShader.js":"// Parallax Occlusion shaders from\n//    http://sunandblackcat.com/tipFullView.php?topicid=28\n// No tangent-space transforms logic based on\n//   http://mmikkelsen3d.blogspot.sk/2012/02/parallaxpoc-mapping-and-no-tangent.html\nconst ParallaxShader = {\n  // Ordered from fastest to best quality.\n  modes: {\n    none: 'NO_PARALLAX',\n    basic: 'USE_BASIC_PARALLAX',\n    steep: 'USE_STEEP_PARALLAX',\n    occlusion: 'USE_OCLUSION_PARALLAX',\n    // a.k.a. POM\n    relief: 'USE_RELIEF_PARALLAX'\n  },\n  uniforms: {\n    bumpMap: {\n      value: null\n    },\n    map: {\n      value: null\n    },\n    parallaxScale: {\n      value: null\n    },\n    parallaxMinLayers: {\n      value: null\n    },\n    parallaxMaxLayers: {\n      value: null\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'varying vec3 vViewPosition;', 'varying vec3 vNormal;', 'void main() {', '\tvUv = uv;', '\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );', '\tvViewPosition = -mvPosition.xyz;', '\tvNormal = normalize( normalMatrix * normal );', '\tgl_Position = projectionMatrix * mvPosition;', '}'].join('\\n'),\n  fragmentShader: ['uniform sampler2D bumpMap;', 'uniform sampler2D map;', 'uniform float parallaxScale;', 'uniform float parallaxMinLayers;', 'uniform float parallaxMaxLayers;', 'varying vec2 vUv;', 'varying vec3 vViewPosition;', 'varying vec3 vNormal;', '#ifdef USE_BASIC_PARALLAX', '\tvec2 parallaxMap( in vec3 V ) {', '\t\tfloat initialHeight = texture2D( bumpMap, vUv ).r;', // No Offset Limitting: messy, floating output at grazing angles.\n  //\"vec2 texCoordOffset = parallaxScale * V.xy / V.z * initialHeight;\",\n  // Offset Limiting\n  '\t\tvec2 texCoordOffset = parallaxScale * V.xy * initialHeight;', '\t\treturn vUv - texCoordOffset;', '\t}', '#else', '\tvec2 parallaxMap( in vec3 V ) {', // Determine number of layers from angle between V and N\n  '\t\tfloat numLayers = mix( parallaxMaxLayers, parallaxMinLayers, abs( dot( vec3( 0.0, 0.0, 1.0 ), V ) ) );', '\t\tfloat layerHeight = 1.0 / numLayers;', '\t\tfloat currentLayerHeight = 0.0;', // Shift of texture coordinates for each iteration\n  '\t\tvec2 dtex = parallaxScale * V.xy / V.z / numLayers;', '\t\tvec2 currentTextureCoords = vUv;', '\t\tfloat heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;', // while ( heightFromTexture > currentLayerHeight )\n  // Infinite loops are not well supported. Do a \"large\" finite\n  // loop, but not too large, as it slows down some compilers.\n  '\t\tfor ( int i = 0; i < 30; i += 1 ) {', '\t\t\tif ( heightFromTexture <= currentLayerHeight ) {', '\t\t\t\tbreak;', '\t\t\t}', '\t\t\tcurrentLayerHeight += layerHeight;', // Shift texture coordinates along vector V\n  '\t\t\tcurrentTextureCoords -= dtex;', '\t\t\theightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;', '\t\t}', '\t\t#ifdef USE_STEEP_PARALLAX', '\t\t\treturn currentTextureCoords;', '\t\t#elif defined( USE_RELIEF_PARALLAX )', '\t\t\tvec2 deltaTexCoord = dtex / 2.0;', '\t\t\tfloat deltaHeight = layerHeight / 2.0;', // Return to the mid point of previous layer\n  '\t\t\tcurrentTextureCoords += deltaTexCoord;', '\t\t\tcurrentLayerHeight -= deltaHeight;', // Binary search to increase precision of Steep Parallax Mapping\n  '\t\t\tconst int numSearches = 5;', '\t\t\tfor ( int i = 0; i < numSearches; i += 1 ) {', '\t\t\t\tdeltaTexCoord /= 2.0;', '\t\t\t\tdeltaHeight /= 2.0;', '\t\t\t\theightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;', // Shift along or against vector V\n  '\t\t\t\tif( heightFromTexture > currentLayerHeight ) {', // Below the surface\n  '\t\t\t\t\tcurrentTextureCoords -= deltaTexCoord;', '\t\t\t\t\tcurrentLayerHeight += deltaHeight;', '\t\t\t\t} else {', // above the surface\n  '\t\t\t\t\tcurrentTextureCoords += deltaTexCoord;', '\t\t\t\t\tcurrentLayerHeight -= deltaHeight;', '\t\t\t\t}', '\t\t\t}', '\t\t\treturn currentTextureCoords;', '\t\t#elif defined( USE_OCLUSION_PARALLAX )', '\t\t\tvec2 prevTCoords = currentTextureCoords + dtex;', // Heights for linear interpolation\n  '\t\t\tfloat nextH = heightFromTexture - currentLayerHeight;', '\t\t\tfloat prevH = texture2D( bumpMap, prevTCoords ).r - currentLayerHeight + layerHeight;', // Proportions for linear interpolation\n  '\t\t\tfloat weight = nextH / ( nextH - prevH );', // Interpolation of texture coordinates\n  '\t\t\treturn prevTCoords * weight + currentTextureCoords * ( 1.0 - weight );', '\t\t#else', // NO_PARALLAX\n  '\t\t\treturn vUv;', '\t\t#endif', '\t}', '#endif', 'vec2 perturbUv( vec3 surfPosition, vec3 surfNormal, vec3 viewPosition ) {', '\tvec2 texDx = dFdx( vUv );', '\tvec2 texDy = dFdy( vUv );', '\tvec3 vSigmaX = dFdx( surfPosition );', '\tvec3 vSigmaY = dFdy( surfPosition );', '\tvec3 vR1 = cross( vSigmaY, surfNormal );', '\tvec3 vR2 = cross( surfNormal, vSigmaX );', '\tfloat fDet = dot( vSigmaX, vR1 );', '\tvec2 vProjVscr = ( 1.0 / fDet ) * vec2( dot( vR1, viewPosition ), dot( vR2, viewPosition ) );', '\tvec3 vProjVtex;', '\tvProjVtex.xy = texDx * vProjVscr.x + texDy * vProjVscr.y;', '\tvProjVtex.z = dot( surfNormal, viewPosition );', '\treturn parallaxMap( vProjVtex );', '}', 'void main() {', '\tvec2 mapUv = perturbUv( -vViewPosition, normalize( vNormal ), normalize( vViewPosition ) );', '\tgl_FragColor = texture2D( map, mapUv );', '}'].join('\\n')\n};\n\nexport { ParallaxShader };\n"},"lineCount":null}},"error":null,"hash":"b610910abcc349861aac7dba6c9c5c9e","cacheData":{"env":{}}}